("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire7f38.register("bRQcY",(function(e,n){e.exports=JSON.parse('["为了验证握手成功且没有被篡改过，服务器会创建一些验证数据给客户端确认。验证数据是基于所有握手信息的哈希值计算得到。",{"Tag":"AnnotationToggler"},{"Tag":"Annotations","props":{"type":"record-data","data":[["握手消息头",{"props":{"className":"bytes"},"content":"14 00 00 30"},["每个握手消息都以一个 type 和一个 len 开始。",{"Tag":"ul","children":[{"Tag":"li","content":"14 - 握手消息类型 0x14 (finished)"},{"Tag":"li","content":"00 00 30 - 紧接着的握手消息数据的长度 0x30 (48) 字节"}]}]],["验证数据",{"props":{"className":"bytes"},"content":"7e 30 ee cc b6 b2 3b e6 c6 ca 36 39 92 e8 42 da 87 7e e6 47 15 ae 7f c0 cf 87 f9 e5 03 21 82 b5 bb 48 d1 e3 3f 99 79 05 5a 16 0c 8d bb b1 56 9c"},["使用 \\"服务器端生成握手密钥\\" 步骤中的服务器端握手时流量密文和在这之前的每个握手记录(ClientHello 到 证书验证数据)的 SHA256 哈希值生成。",{"Tag":"pre","children":[{"Tag":"code","props":{"className":"longboi"},"content":"finished_key = HKDF-Expand-Label(key: server_secret, label: \\"finished\\", ctx: \\"\\", len: 48)\\nfinished_hash = SHA384(Client Hello ... Server Cert Verify)\\nverify_data = HMAC-SHA384(key: finished_key, msg: finished_hash)"}]},{"children":["在命令行中使用",{"Tag":"a","props":{"href":"https://tls13.xargs.org/files/hkdf-384.sh"},"content":"原作者制作的 HKDF 命令行脚本"},"，你也可以自己试试："]},{"Tag":"CodeSample","props":{"code":"### find the hash of the conversation to this point, excluding\\n### 5-byte record headers or 1-byte wrapped record trailers\\n$ fin_hash=$((\\n    tail -c +6 clienthello;\\n    tail -c +6 serverhello;\\n    perl -pe \'s/.$// if eof\' serverextensions;\\n    perl -pe \'s/.$// if eof\' servercert;\\n    perl -pe \'s/.$// if eof\' servercertverify) | openssl sha384)\\n$ sht_secret=23323da031634b241dd37d61032b62a4f450584d1f7f47983ba2f7cc0cdcc39a68f481f2b019f9403a3051908a5d1622\\n$ fin_key=$(./hkdf-384 expandlabel $sht_secret \\"finished\\" \\"\\" 48)\\n$ echo $fin_hash | xxd -r -p \\\\\\n    | openssl dgst -sha384 -mac HMAC -macopt hexkey:$fin_key\\n\\n7e30eeccb6b23be6c6ca363992e842da877ee64715ae7fc0cf87f9e5032182b5bb48d1e33f9979055a160c8dbbb1569c"}}]]]}}]')}));
//# sourceMappingURL=serverHandshakeFinished.609ea75f.js.map
