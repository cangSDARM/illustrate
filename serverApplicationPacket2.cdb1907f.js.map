{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,k3I","sources":["<anon>","src/QUIC/serverApplicationPacket2.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"b2VEM\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u5728\\u786E\\u8BA4\\u5BA2\\u6237\\u7AEF\\u5DF2\\u6536\\u5230\\u6240\\u6709\\u5F85\\u5904\\u7406\\u6570\\u636E\\u540E\\uFF0C\\u5173\\u95ED\\u8FDE\\u63A5\\u3002\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u6570\\u636E\\u5305\\u5934\\u5B57\\u8282\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\u52A0\\u5BC6\"},\"content\":\"54\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"40\"},[\"\\u6570\\u636E\\u5305\\u4EE5\\u4E00\\u4E2A\\u5934\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8BE5\\u5B57\\u8282\\u5E94\\u7528\\u4E86\\u5934\\u4FDD\\u62A4\\u3002\\u5934\\u90E8\\u4FDD\\u62A4\\u7528\\u4E8E\\u9690\\u85CF\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u548C\\u5176\\u4ED6\\u4FE1\\u606F\\uFF0C\\u4F7F\\u5176\\u4E0D\\u88AB\\u5916\\u754C\\u89C2\\u5BDF\\u5230\\u3002\",\"\\u5305\\u5934\\u4FDD\\u62A4\\u662F\\u901A\\u8FC7\\u7528\\\\\"\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\\\\"\\u5BF9\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u7684\\u6709\\u6548\\u8F7D\\u8377\\u7684\\u6837\\u672C\\u8FDB\\u884C\\u52A0\\u5BC6\\uFF0C\\u7136\\u540E\\u5C06\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u4E2D\\u7684\\u67D0\\u4E9B\\u6BD4\\u7279\\u548C\\u5B57\\u8282\\u4E0E\\u6240\\u5F97\\u6570\\u636E\\u8FDB\\u884C\\u5F02\\u6216(XOR)\\u64CD\\u4F5C\\u5F97\\u5230\\u7684\\u3002\\u5BF9\\u4E8E\\u50CF\\u8FD9\\u6837\\u7684\\\\\"\\u957F\\\\\"\\u683C\\u5F0F\\u6570\\u636E\\u5305\\uFF0C\\u53D7\\u4FDD\\u62A4\\u7684\\u90E8\\u5206\\u662F\\u8FD9\\u4E2A\\u5B57\\u8282\\u7684\\u4F4E 4 \\u4F4D\\uFF0C\\u4EE5\\u53CA\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u7684\\u5B57\\u8282\\uFF08\\u89C1\\u4E0B\\u6587\\uFF09\\u3002\",\"\\u8FD9\\u91CC\\u6709\\u4E00\\u4E2A\\u5173\\u4E8E\\u5982\\u4F55\\u8BA1\\u7B97\\u51FA\\u52A0\\u5BC6\\u5934\\u5B57\\u8282\\u7684\\u4F8B\\u5B50\\uFF1A\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### \\\\\"server header protection key\\\\\" from application keys calc step above\\\\n$ key=b7f6f021453e52b58940e4bba72a35d4\\\\n### sample is taken from 16 bytes of payload starting\\\\n### 4 bytes past the first byte of the packet number\\\\n$ sample=ffeb17b67ec27f97e50d271dc702d92c\\\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 5 | xxd -p\\\\n\\\\nf494fdfbb6\\\\n\\\\n### first byte of result is xor\\'d into lower 5 bits of this byte,\\\\n### remaining bytes are xor\\'d one-for-one into the bytes of\\\\n### the packet number (which in this packet is only one byte)\"}},\"\\u89E3\\u5BC6\\u51FA\\u7684\\u5B57\\u8282 0x40 \\u4E2D\\u7684\\u4F4D\\u6709\\u4EE5\\u4E0B\\u542B\\u4E49\\uFF1A\",{\"Tag\":\"Table\",\"props\":{\"headers\":[\"\",\"\\u503C\",\"\\u542B\\u4E49\"],\"data\":[[\"\\u9AD8\\u4F4D\",\"0\",\"Short Header \\u683C\\u5F0F\"],[\"\",\"1\",\"\\u56FA\\u5B9A\\u4F4D(\\u603B\\u662F\\u88AB\\u7F6E1)\"],[\"\",\"0\",\"\\u53EF\\u9009\\u7684 \\\\\"Spin\\\\\" \\u4F4D\\u3002\\u7528\\u4E8E\\u5141\\u8BB8\\u89C2\\u5BDF\\u8005\\u6D4B\\u91CF RTT\\uFF0C\\u4F46 QUIC \\u672A\\u4F7F\\u7528\\u3002\"],[\"\",\"00\",\"\\u4FDD\\u7559(\\u603B\\u662F\\u88AB\\u7F6E0)\"],[\"\",\"0\",\"\\u5BC6\\u94A5\\u76F8\\u4F4D\\u4F4D(key phase bit), \\u5BC6\\u94A5\\u53D1\\u751F\\u8F6E\\u66FF\\u65F6\\u7F6E1\"],[\"\\u4F4E\\u4F4D\",\"00\",\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u957F\\u5EA6(\\u8868\\u793A\\u4E0B\\u9762\\u7684 \\\\\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\\\\" \\u5C06\\u6709\\u4E00\\u4E2A\\u5B57\\u8282\\u7684\\u957F\\u5EA6\\uFF0C\\u9ED8\\u8BA4\\u503C)\"]]}}]],[\"\\u76EE\\u7684\\u5730\\u8FDE\\u63A5\\u6807\\u8BC6 ID\",{\"props\":{\"className\":\"bytes\"},\"content\":\"63 5f 63 69 64\"},[\"\\u5BA2\\u6237\\u7AEF\\u7684\\u6807\\u8BC6 ID (\\u5BA2\\u6237\\u7AEF\\u7684\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID)\",\"\\u6CE8\\u610F\\u6B64\\u65F6\\u6807\\u8BC6 ID \\u7684\\u957F\\u5EA6(\\u4EE5\\u53CA\\u672C\\u5E94\\u5728\\u540E\\u9762\\u7684\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID)\\u5DF2\\u7ECF\\u7701\\u7565\\u3002\\u5BF9\\u7B49\\u7AEF(peer)\\u5728\\u8FD9\\u4E4B\\u524D\\u5E94\\u8BE5\\u4E14\\u5FC5\\u987B\\u77E5\\u9053\\u6807\\u8BC6 ID \\u957F\\u5EA6\\uFF0C\\u8BE5\\u957F\\u5EA6\\u5728\\u4F1A\\u8BDD\\u8FC7\\u7A0B\\u4E2D\\u8981\\u4E48\\u4E00\\u76F4\\u88AB\\u7701\\u7565\\uFF0C\\u8981\\u4E48\\u5728\\u6807\\u8BC6 ID \\u4E2D\\u7F16\\u7801\\u957F\\u5EA6\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"63 5f 63 69 64 - \\u5B9E\\u9645\\u7684\\u76EE\\u7684\\u5730\\u8FDE\\u63A5\\u6807\\u8BC6 ID(\\\\\"s_cid\\\\\")\"}]}]],[\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\u52A0\\u5BC6\"},\"content\":\"95\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"01\"},[\"\\u8BE5\\u5B57\\u8282\\u5E94\\u7528\\u4E86\\u5934\\u4FDD\\u62A4\\u3002\\u8BE6\\u89C1 \\\\\"\\u6570\\u636E\\u5305\\u5934\\u5B57\\u8282\\\\\"\\u3002\",\"\\u8FD9\\u4E2A\\u5B57\\u8282\\u7684\\u672A\\u53D7\\u4FDD\\u62A4\\u7684\\u503C\\u4E3A 0x01\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u7B2C 1 \\u53F7\\u5305\\uFF0C\\u6216\\u8005\\u8BF4\\u662F\\u670D\\u52A1\\u5668\\u7AEF\\u53D1\\u9001\\u7684\\u7B2C\\u4E8C\\u4E2A\\\\\"\\u4F1A\\u8BDD\\\\\"\\u5305\\u3002\",\"\\u8FD9\\u4E2A\\u6570\\u636E\\u4E5F\\u6709\\u53EF\\u80FD\\u88AB\\u622A\\u65AD\\u3002\\u53D1\\u9001\\u7AEF\\u70B9\\u901A\\u8FC7\\u51E0\\u4E2A\\u6B65\\u9AA4\\u622A\\u65AD\\uFF1A\\u2460\\u8BA1\\u7B97\\u5DF2\\u53D1\\u9001\\u7684\\u6700\\u9AD8\\u7684\\u5E8F\\u53F7\\u548C\\u672A\\u786E\\u8BA4\\u7684\\u6700\\u4F4E\\u7684\\u5E8F\\u53F7\\u4E4B\\u95F4\\u7684\\u5DEE\\u503C\\uFF1B\\u2461\\u51FA\\u4E8E\\u5B89\\u5168\\u8003\\u8651\\u5C06\\u5DEE\\u503C\\u52A0\\u500D\\u5E76\\u56DB\\u820D\\u4E94\\u5165\\uFF1B\\u2462\\u8BA1\\u7B97\\u5B83\\u5728\\u660E\\u786E\\u8868\\u793A\\u4E24\\u7AEF\\u4E4B\\u95F4\\u7684\\u5E8F\\u53F7\\u7684\\u524D\\u63D0\\u4E0B\\u53EF\\u4EE5\\u4ECE\\u5E8F\\u53F7\\u7684\\u9AD8\\u4F4D\\u5220\\u9664\\u7684\\u5B57\\u8282\\u6570\\uFF1B\\u2463\\u622A\\u65AD\\u7F16\\u7801\\u540E\\u7684\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u76F4\\u81F3\\u957F\\u5EA6\\u6EE1\\u8DB3\\u8BE5\\u5B57\\u8282\\u6570\\u3002\\u800C\\u63A5\\u6536\\u7AEF\\u70B9\\u6839\\u636E\\u4F1A\\u5B83\\u6700\\u8FD1\\u770B\\u5230\\u7684\\u6570\\u636E\\u5305\\u53F7\\u7801\\u586B\\u5165\\u5B8C\\u6574\\u7684\\u5E8F\\u53F7\\u3002\",{\"children\":[\"\\u7531\\u4E8E\\u6211\\u4EEC\\u7684\\u4F8B\\u5B50\\u5BF9\\u8BDD\\u53D1\\u9001\\u7684\\u6570\\u636E\\u5305\\u5F88\\u5C0F(\\u5C11\\u4E8E 64 \\u4E2A\\u5B57\\u8282)\\uFF0C\\u6240\\u4EE5\\u8FD9\\u79CD\\u622A\\u65AD\\u4E0D\\u4F1A\\u5728\\u672C\\u6587\\u4E2D\\u51FA\\u73B0\\u3002\\u8BE6\\u60C5\\u89C1 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://www.rfc-editor.org/rfc/rfc9000.html#section-17.1\"},\"content\":\"RFC 9000\"},\"\\u3002\"]}]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\",\"title\":\"\\u88AB\\\\\"\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\"\\u52A0\\u5BC6\"},\"content\":\"18 c4 a5 ff eb 17 b6 7e c2 7f 97 e5 0d 27 1d c7 02 d9 2c ef b0\"},[\"\\u8FD9\\u4E9B\\u6570\\u636E\\u4F7F\\u7528\\u670D\\u52A1\\u5668\\u7AEF\\u7684\\\\\"\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\"\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\"]],[\"AEAD \\u9274\\u522B\\u6807\\u7B7E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"68 8b e9 fd 7b 30 2d 9e b4 7c df 1f c4 cd 9a ac\"},[{\"children\":[\"\\u8FD9\\u662F \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD \\u7B97\\u6CD5\"},\"\\u7684\\u9274\\u522B\\u6807\\u7B7E\\uFF0C\\u7528\\u4EE5\\u786E\\u8BA4\\u52A0\\u5BC6\\u6570\\u636E\\u548C\\u6570\\u636E\\u5305\\u5934\\u7684\\u5B8C\\u6574\\u6027\\u3002\\u5B83\\u7531\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4EA7\\u751F\\uFF0C\\u5E76\\u7531\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6D88\\u8017\\u3002\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u5BA2\\u6237\\u7AEF\\u751F\\u6210\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u4F1A\\u8BDD\\u5BC6\\u94A5\\u548C\\u4F1A\\u8BDD\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002IVs \\u901A\\u8FC7\\u5BC6\\u94A5\\u548C\\u5DF2\\u7ECF\\u7528\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u957F\\u5EA6\\u8FDB\\u884C\\u5F02\\u6216\\u64CD\\u4F5C\\u751F\\u6210\\u3002\\u5728\\u4F8B\\u5B50\\u4E2D IV \\u4E3A 0\\u3002\",\"\\u6570\\u636E\\u5305\\u5F00\\u5934\\u7684 16 \\u5B57\\u8282(\\u6570\\u636E\\u5305\\u5934)\\u8FD8\\u4F1A\\u4F5C\\u4E3A\\u89E3\\u5BC6\\u8FC7\\u7A0B\\u89E3\\u5BC6\\u6210\\u529F\\u65F6\\u5FC5\\u987B\\u6EE1\\u8DB3\\u7684\\u8BA4\\u8BC1\\u6761\\u4EF6\\u3002\",{\"children\":[\"openssl \\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u8FD8\\u4E0D\\u652F\\u6301 AEAD \\u7B97\\u6CD5\\u52A0\\u89E3\\u5BC6(AEAD ciphers)\\uFF0C\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528\\u4F5C\\u8005\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u6765\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://quic.xargs.org/files/aes_128_gcm_decrypt.c\"},\"content\":\"\\u89E3\\u5BC6\"},\"\\u548C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://quic.xargs.org/files/aes_128_gcm_encrypt.c\"},\"content\":\"\\u52A0\\u5BC6\"},\"\\u8FD9\\u4E9B\\u6570\\u636E\\u3002\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Application Keys Calc\\\\\" step\\\\n$ key=fd8c7da9de1b2da4d2ef9fd5188922d0\\\\n$ iv=02f6180e4f4aa456d7e8a602\\\\n### from this record\\\\n$ recdata=40635f63696401\\\\n$ authtag=688be9fd7b302d9eb47cdf1fc4cd9aac\\\\n$ recordnum=1\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\\\n\\\\n00000000  1c 00 00 11 67 72 61 63  65 66 75 6c 20 73 68 75  |....graceful shu|\\\\n00000010  74 64 6f 77 6e                                    |tdown|\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"CONNECTION_CLOSE \\u5E27\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"1c 00 00 11 67 72 61 63 65 66 75 6c 20 73 68 75 74 64 6f 77 6e\"},[\"\\u670D\\u52A1\\u5668\\u53D1\\u9001\\u6307\\u793A\\uFF0C\\u5173\\u95ED\\u8FDE\\u63A5\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"1c - \\u8868\\u660E\\u5E27\\u7C7B\\u578B CONNECTION_CLOSE\"},{\"Tag\":\"li\",\"content\":\"00 - error_code: \\u6CA1\\u6709\\u9519\\u8BEF\"},{\"Tag\":\"li\",\"content\":\"00 - \\u89E6\\u53D1\\u9519\\u8BEF\\u7684\\u5E27\\u7C7B\\u578B (0 = unknown)\"},{\"Tag\":\"li\",\"content\":\"11 - \\u53EF\\u53D8\\u957F\\u5EA6\\u7684\\u6574\\u6570\\u3002\\u8868\\u660E\\u5173\\u95ED\\u8FDE\\u63A5\\u7684\\u539F\\u56E0\\u7684\\u957F\\u5EA6 0x11 (17) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"67 72 .. 77 6e - \\u5173\\u95ED\\u8FDE\\u63A5\\u7684\\u539F\\u56E0: \\u5B57\\u7B26\\u4E32\\\\\"graceful shutdown\\\\\"\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverApplicationPacket2.cdb1907f.js.map\n","[\n  \"服务器在确认客户端已收到所有待处理数据后，关闭连接。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"数据包头字节\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"54\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"40\"\n          },\n          [\n            \"数据包以一个头字节开始，该字节应用了头保护。头部保护用于隐藏数据包序号和其他信息，使其不被外界观察到。\",\n            \"包头保护是通过用\\\"数据包头保护密钥\\\"对每个数据包的有效载荷的样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行异或(XOR)操作得到的。对于像这样的\\\"长\\\"格式数据包，受保护的部分是这个字节的低 4 位，以及数据包序号的字节（见下文）。\",\n            \"这里有一个关于如何计算出加密头字节的例子：\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### \\\"server header protection key\\\" from application keys calc step above\\n$ key=b7f6f021453e52b58940e4bba72a35d4\\n### sample is taken from 16 bytes of payload starting\\n### 4 bytes past the first byte of the packet number\\n$ sample=ffeb17b67ec27f97e50d271dc702d92c\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 5 | xxd -p\\n\\nf494fdfbb6\\n\\n### first byte of result is xor'd into lower 5 bits of this byte,\\n### remaining bytes are xor'd one-for-one into the bytes of\\n### the packet number (which in this packet is only one byte)\"\n              }\n            },\n            \"解密出的字节 0x40 中的位有以下含义：\",\n            {\n              \"Tag\": \"Table\",\n              \"props\": {\n                \"headers\": [\"\", \"值\", \"含义\"],\n                \"data\": [\n                  [\"高位\", \"0\", \"Short Header 格式\"],\n                  [\"\", \"1\", \"固定位(总是被置1)\"],\n                  [\n                    \"\",\n                    \"0\",\n                    \"可选的 \\\"Spin\\\" 位。用于允许观察者测量 RTT，但 QUIC 未使用。\"\n                  ],\n                  [\"\", \"00\", \"保留(总是被置0)\"],\n                  [\"\", \"0\", \"密钥相位位(key phase bit), 密钥发生轮替时置1\"],\n                  [\n                    \"低位\",\n                    \"00\",\n                    \"数据包序号长度(表示下面的 \\\"数据包序号\\\" 将有一个字节的长度，默认值)\"\n                  ]\n                ]\n              }\n            }\n          ]\n        ],\n        [\n          \"目的地连接标识 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"63 5f 63 69 64\"\n          },\n          [\n            \"客户端的标识 ID (客户端的源连接标识 ID)\",\n            \"注意此时标识 ID 的长度(以及本应在后面的源连接标识 ID)已经省略。对等端(peer)在这之前应该且必须知道标识 ID 长度，该长度在会话过程中要么一直被省略，要么在标识 ID 中编码长度。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"63 5f 63 69 64 - 实际的目的地连接标识 ID(\\\"s_cid\\\")\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"数据包序号\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"95\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"01\"\n          },\n          [\n            \"该字节应用了头保护。详见 \\\"数据包头字节\\\"。\",\n            \"这个字节的未受保护的值为 0x01，表明它是第 1 号包，或者说是服务器端发送的第二个\\\"会话\\\"包。\",\n            \"这个数据也有可能被截断。发送端点通过几个步骤截断：①计算已发送的最高的序号和未确认的最低的序号之间的差值；②出于安全考虑将差值加倍并四舍五入；③计算它在明确表示两端之间的序号的前提下可以从序号的高位删除的字节数；④截断编码后的数据包序号直至长度满足该字节数。而接收端点根据会它最近看到的数据包号码填入完整的序号。\",\n            {\n              \"children\": [\n                \"由于我们的例子对话发送的数据包很小(少于 64 个字节)，所以这种截断不会在本文中出现。详情见 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://www.rfc-editor.org/rfc/rfc9000.html#section-17.1\"\n                  },\n                  \"content\": \"RFC 9000\"\n                },\n                \"。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\",\n              \"title\": \"被\\\"会话密钥\\\"加密\"\n            },\n            \"content\": \"18 c4 a5 ff eb 17 b6 7e c2 7f 97 e5 0d 27 1d c7 02 d9 2c ef b0\"\n          },\n          [\"这些数据使用服务器端的\\\"会话密钥\\\"进行加密。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"68 8b e9 fd 7b 30 2d 9e b4 7c df 1f c4 cd 9a ac\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"客户端生成会话密钥\\\" 步骤中产生的会话密钥和会话向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 0。\",\n            \"数据包开头的 16 字节(数据包头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Application Keys Calc\\\" step\\n$ key=fd8c7da9de1b2da4d2ef9fd5188922d0\\n$ iv=02f6180e4f4aa456d7e8a602\\n### from this record\\n$ recdata=40635f63696401\\n$ authtag=688be9fd7b302d9eb47cdf1fc4cd9aac\\n$ recordnum=1\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\n\\n00000000  1c 00 00 11 67 72 61 63  65 66 75 6c 20 73 68 75  |....graceful shu|\\n00000010  74 64 6f 77 6e                                    |tdown|\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"CONNECTION_CLOSE 帧\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"1c 00 00 11 67 72 61 63 65 66 75 6c 20 73 68 75 74 64 6f 77 6e\"\n          },\n          [\n            \"服务器发送指示，关闭连接。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"1c - 表明帧类型 CONNECTION_CLOSE\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - error_code: 没有错误\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 触发错误的帧类型 (0 = unknown)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"11 - 可变长度的整数。表明关闭连接的原因的长度 0x11 (17) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"67 72 .. 77 6e - 关闭连接的原因: 字符串\\\"graceful shutdown\\\"\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverApplicationPacket2.cdb1907f.js.map"}