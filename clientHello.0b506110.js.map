{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,woP","sources":["<anon>","src/TLS12/clientHello.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"h7Mws\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u4F8B\\u5B50\\u4E2D\\u7684\\u4F1A\\u8BDD\\u4EE5 \\\\\"ClientHello\\\\\" \\u5F00\\u59CB\\u3002\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u7684\\u4FE1\\u606F\\u5305\\u62EC\\u4EE5\\u4E0B\\u5185\\u5BB9\\uFF1A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"\\u534F\\u8BAE\\u7248\\u672C\\u53F7\"},{\"Tag\":\"li\",\"content\":\"\\u5BA2\\u6237\\u7AEF\\u968F\\u673A\\u6570(\\u7528\\u4E8E\\u4E4B\\u540E\\u7684\\u63E1\\u624B\\u8FC7\\u7A0B)\"},{\"Tag\":\"li\",\"content\":\"\\u4E00\\u4E2A\\u7528\\u4E8E\\u5FEB\\u901F\\u56DE\\u590D(resume)\\u7684\\\\\"\\u4F1A\\u8BDD ID\\\\\"\"},{\"Tag\":\"li\",\"content\":\"\\u4E00\\u4E2A\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u7684\\u6709\\u5E8F\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6570\\u7EC4\"},{\"Tag\":\"li\",\"content\":\"\\u4E00\\u4E2A\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u7684\\u6709\\u5E8F\\u7684\\u538B\\u7F29\\u7B97\\u6CD5\\u6570\\u7EC4\"},{\"Tag\":\"li\",\"content\":\"\\u6269\\u5C55\\u5217\\u8868\"}]},{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"16 03 01 00 a5\"},[\"TLS \\u4F1A\\u8BDD\\u88AB\\u5206\\u89E3\\u6210 \\\\\"\\u8BB0\\u5F55\\\\\"(record) \\u7684\\u5F62\\u5F0F\\u53D1\\u9001\\u548C\\u63A5\\u6536\\u3002\\u8BB0\\u5F55\\u662F\\u5177\\u6709\\u7C7B\\u578B\\u3001\\u534F\\u8BAE\\u7248\\u672C\\u548C\\u957F\\u5EA6\\u7684\\u6570\\u636E\\u5757\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x16(22, Handshake)\"},{\"Tag\":\"li\",\"content\":\"03 01 - \\u534F\\u8BAE\\u7248\\u672C (3.1, \\u5373 TLS 1.0)\"},{\"Tag\":\"li\",\"content\":\"00 a5 - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0xA5(165) \\u5B57\\u8282\"}]},{\"children\":[\"\\u6709\\u8DA3\\u7684\\u662F\\uFF0C\\u8FD9\\u91CC\\u7684\\u7248\\u672C\\u53F7\\u5E76\\u4E0D\\u662F\\u9884\\u671F\\u7684 3.3(TLS 1.2)\\uFF0C\\u800C\\u662F 3.1(TLS 1.0)\\u3002\\u5728 golang \\u7684\",{\"Tag\":\"code\",\"content\":\"crypto/tls\"},\"\\u4E2D\\u6709\\u4EE5\\u4E0B\\u6CE8\\u91CA\\u53EF\\u80FD\\u4F1A\\u89E3\\u91CA\\u5176\\u539F\\u56E0\\uFF1A\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"if vers == 0 {\\\\n    // Some TLS servers fail if the record version is\\\\n    // greater than TLS 1.0 for the initial ClientHello.\\\\n    vers = VersionTLS10\\\\n}\"}}]],[\"TLS \\u63E1\\u624B\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"01 00 00 a1\"},[\"\\u6BCF\\u4E2A TLS \\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"01 - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x01 (ClientHello)\"},{\"Tag\":\"li\",\"content\":\"00 00 a1 - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0xA1 (161) \\u5B57\\u8282\"}]}]],[\"\\u5BA2\\u6237\\u7AEF TLS \\u7248\\u672C\\u53F7\",{\"props\":{\"className\":\"bytes\"},\"content\":\"03 03\"},[\"\\u6307\\u51FA\\u7248\\u672C\\u53F7\\u4E3A 3.3 (TLS 1.2)\",\"\\u4E0D\\u5BFB\\u5E38\\u7684\\u7248\\u672C\\u53F7(\\\\\"3,3\\\\\" \\u4EE3\\u8868 TLS 1.2)\\u662F\\u7531\\u4E8E TLS 1.0 \\u662F SSL 3.0 \\u534F\\u8BAE\\u7684\\u4E00\\u4E2A\\u5C0F\\u4FEE\\u8BA2\\u3002\\u56E0\\u6B64\\uFF0CTLS 1.0 \\u7528 \\\\\"3,1\\\\\" \\u8868\\u793A\\uFF0CTLS 1.1\\u7528 \\\\\"3,2\\\\\"\\uFF0C\\u4EE5\\u6B64\\u7C7B\\u63A8\\u3002\"]],[\"\\u5BA2\\u6237\\u7AEF\\u968F\\u673A\\u6570\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u7684 32 \\u5B57\\u8282\\u7684\\u968F\\u673A\\u6570\\u3002\\u8FD9\\u4E2A\\u6570\\u5C06\\u5728\\u4E4B\\u540E\\u7684\\u4F1A\\u8BDD\\u4E2D\\u4F7F\\u7528\\u3002\\u5728\\u672C\\u6587\\u7684\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6211\\u4EEC\\u6682\\u65F6\\u5C06\\u4E00\\u4E2A\\u65B9\\u4FBF\\u8BB0\\u5FC6\\u7684\\u5B57\\u7B26\\u4E32\\u5F53\\u4F5C\\u968F\\u673A\\u6570\\u3002\",{\"children\":[\"TLS 1.2 \\u89C4\\u8303\\u8BF4\\uFF0C\\u524D 4 \\u4E2A\\u5B57\\u8282\\u5E94\\u8BE5\\u662F\\u81EA 1970 \\u5E74\\u4EE5\\u6765\\u7684\\u79D2\\u6570\\u3002\\u4F46\\u73B0\\u5728\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tools.ietf.org/html/draft-mathewson-no-gmtunixtime-00\"},\"content\":\"\\u5DF2\\u5EFA\\u8BAE\\u4E0D\\u8981\\u8FD9\\u6837\\u505A\"},\"\\uFF0C\\u56E0\\u4E3A\\u8FD9\\u6837\\u53EF\\u4EE5\\u5BF9\\u4E3B\\u673A\\u548C\\u670D\\u52A1\\u5668\\u8FDB\\u884C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://nmap.org/nmap-fingerprinting-article-tw.html\"},\"content\":\"\\u6307\\u7EB9\\u8BC6\\u522B\"},\"\\u3002\"]}]],[\"\\u4F1A\\u8BDD ID\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u5BA2\\u6237\\u7AEF\\u53EF\\u4EE5\\u63D0\\u4F9B\\u65E7\\u8FDE\\u63A5\\u7684 TLS \\u4F1A\\u8BDD ID\\uFF0C\\u5B83\\u80FD\\u591F\\u6062\\u590D\\u4E4B\\u524D\\u7684\\u4F1A\\u8BDD\\u3002\\u8981\\u505A\\u5230\\u8FD9\\u4E00\\u70B9\\uFF0C\\u670D\\u52A1\\u5668\\u7AEF\\u548C\\u5BA2\\u6237\\u7AEF\\u90FD\\u9700\\u8981\\u5B58\\u50A8\\u4E4B\\u524D\\u8FDE\\u63A5\\u7684\\u5BC6\\u94A5\\u4FE1\\u606F\\u3002\\u6062\\u590D\\u8FDE\\u63A5\\u53EF\\u4EE5\\u8282\\u7701\\u5927\\u91CF\\u7684\\u8BA1\\u7B97\\u548C\\u7F51\\u7EDC\\u5F80\\u8FD4\\u65F6\\u95F4\\uFF0C\\u6240\\u4EE5\\u53EA\\u8981\\u6709\\u53EF\\u80FD\\u5C31\\u4F1A\\u6267\\u884C\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - 0 \\u5B57\\u8282\\u7684\\u4F1A\\u8BDD ID\"}]}]],[\"\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 20 cc a8 cc a9 c0 2f c0 30 c0 2b c0 2c c0 13 c0 09 c0 14 c0 0a 00 9c 00 9d 00 2f 00 35 c0 12 00 0a\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E00\\u4E2A\\u6709\\u5E8F\\u7684\\u5217\\u8868\\uFF0C\\u4EE5\\u8BF4\\u660E\\u5B83\\u652F\\u6301\\u54EA\\u4E9B\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\\u8BE5\\u5217\\u8868\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u987A\\u5E8F\\u6392\\u5217\\u7684\\uFF0C\\u4EE5\\u6700\\u9AD8\\u504F\\u597D\\u4E3A\\u5148\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 20 - 0x20(32) \\u5B57\\u8282\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\\u6570\\u636E\"},{\"Tag\":\"li\",\"content\":\"cc a8 ... 00 0a - \\u4EE3\\u8868\\u4E00\\u8FDE\\u4E32\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\"}]},{\"children\":[\"\\u5B8C\\u6574\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\\u8BF7\\u67E5\\u770B \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml\"},\"content\":\"IANA tls-parameters\"},\" \\u7684 TLS Cipher Suites \\u90E8\\u5206\\u3002\"]}]],[\"\\u538B\\u7F29\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"01 00\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E00\\u4E2A\\u6709\\u5E8F\\u7684\\u5217\\u8868\\uFF0C\\u8BF4\\u660E\\u5B83\\u5C06\\u652F\\u6301\\u54EA\\u4E9B\\u538B\\u7F29\\u65B9\\u6CD5\\u3002\\u538B\\u7F29\\u5C06\\u5728\\u52A0\\u5BC6\\u6B65\\u9AA4\\u4E4B\\u524D(\\u56E0\\u4E3A\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u901A\\u5E38\\u662F\\u4E0D\\u53EF\\u538B\\u7F29\\u7684)\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"01 - 1 \\u5B57\\u8282\\u7684\\u538B\\u7F29\\u7B97\\u6CD5\\u957F\\u5EA6\"},{\"Tag\":\"li\",\"content\":\"00 - \\u4EE3\\u8868 \\\\\"\\u6CA1\\u6709\\\\\"(null) \\u538B\\u7F29\\u7B97\\u6CD5\"}]},{\"children\":[\"\\u7531\\u4E8E\\u6700\\u8FD1\\u538B\\u7F29\\u88AB\\u53D1\\u73B0\\u4F1A\\u6CC4\\u9732\\u52A0\\u5BC6\\u6570\\u636E\\u7684\\u4FE1\\u606F(\\u89C1 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/333314023\"},\"content\":\"CRIME/BREACH \\u653B\\u51FB\"},\")\\u3002\",\"\\u56E0\\u6B64\\u4E4B\\u540E\\u7684 TLS \\u7248\\u672C(\\u5982 TLS 1.3)\\u5C06\\u7981\\u7528\\u538B\\u7F29\\u3002\\u51FA\\u4E8E\\u5B89\\u5168\\u8003\\u8651\\uFF0CTLS 1.2 \\u7684\\u5BA2\\u6237\\u7AEF\\u4E5F\\u5E94\\u7981\\u7528\\u538B\\u7F29\\u3002\"]}]],[\"\\u6269\\u5C55\\u7684\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 58\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A\\u53EF\\u9009\\u7684\\u6269\\u5C55\\u5217\\u8868\\uFF0C\\u670D\\u52A1\\u5668\\u53EF\\u4EE5\\u6839\\u636E\\u5B83\\u6765\\u91C7\\u53D6\\u67D0\\u4E9B\\u884C\\u52A8\\u6216\\u542F\\u7528\\u67D0\\u4E9B\\u7279\\u6027\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 58 - \\u6269\\u5C55\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u4E3A 0x58(88) \\u5B57\\u8282\"}]},\"\\u6BCF\\u4E2A\\u6269\\u5C55\\u5C06\\u4EE5\\u4E24\\u4E2A\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u54EA\\u4E2A\\u6269\\u5C55\\u3002\\u7136\\u540E\\u662F\\u4E24\\u4E2A\\u5B57\\u8282\\u7684\\u5185\\u5BB9\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u6700\\u540E\\u662F\\u6269\\u5C55\\u7684\\u5177\\u4F53\\u5185\\u5BB9\\u3002\"]],[\"\\u6269\\u5C55 - \\u670D\\u52A1\\u5668\\u540D\\u79F0\\u6307\\u793A\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 00 00 18 00 16 00 00 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74\"},[\"(\\u4F8B\\u5B50\\u4E2D\\u7684)\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E86\\u5B83\\u60F3\\u8981\\u8054\\u7CFB\\u7684\\u670D\\u52A1\\u5668\\u7684\\u540D\\u79F0\\uFF0C\\u4E5F\\u88AB\\u79F0\\u4E3A SNI(\\u670D\\u52A1\\u5668\\u540D\\u79F0\\u6307\\u793A)\\u3002\",\"\\u5982\\u679C\\u6CA1\\u6709\\u8FD9\\u4E2A\\u6269\\u5C55\\uFF0CHTTPS \\u670D\\u52A1\\u5668\\u5C06\\u65E0\\u6CD5\\u4E3A\\u4E00\\u4E2A IP \\u5730\\u5740\\u4E0A\\u7684\\u591A\\u4E2A\\u4E3B\\u673A\\u540D(\\u865A\\u62DF\\u4E3B\\u673A)\\u63D0\\u4F9B\\u670D\\u52A1\\u3002\\u56E0\\u4E3A\\u5B83\\u5728 TLS \\u4F1A\\u8BDD\\u534F\\u5546\\u7ED3\\u675F\\u3001HTTP \\u8BF7\\u6C42\\u53D1\\u51FA\\u540E\\u624D\\u77E5\\u9053\\u8981\\u53D1\\u9001\\u54EA\\u4E2A\\u4E3B\\u673A\\u540D\\u7684\\u8BC1\\u4E66\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 00 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u670D\\u52A1\\u5668\\u540D\\u79F0\\u6307\\u793A\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 18 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x18(24) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 16 - \\u7B2C\\u4E00\\u4E2A(\\u4E5F\\u662F\\u552F\\u4E00\\u7684)\\u5217\\u8868\\u6761\\u76EE\\u957F\\u5EA6\\u4E3A 0x16(22) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 - 0x00 \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u4E3B\\u673A\\u540D\\\\\" \\u5217\\u8868\"},{\"Tag\":\"li\",\"content\":\"00 13 - \\u4E3B\\u673A\\u540D\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u4E3A 0x13(19) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"65 78 61 ... 6e 65 74 - \\u4E3B\\u673A\\u540D\\uFF1A\\\\\"example.ulfheim.net\\\\\"\"}]}]],[\"\\u6269\\u5C55 - \\u8BC1\\u4E66\\u72B6\\u6001\\u8BF7\\u6C42\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 05 00 05 01 00 00 00 00\"},[\"\\u5BA2\\u6237\\u7AEF\\u8981\\u6C42\\u670D\\u52A1\\u5668\\u5728\\u5176\\u54CD\\u5E94\\u4E2D\\u63D0\\u4F9B OCSP(Offensive Security Certified Professional certification) \\u4FE1\\u606F\\u63D0\\u4F9B\\u8BB8\\u53EF\\u3002OCSP \\u53EF\\u7528\\u4E8E\\u68C0\\u67E5\\u8BC1\\u4E66\\u662F\\u5426\\u5DF2\\u88AB\\u64A4\\u9500\\u3002\",\"\\u5BA2\\u6237\\u7AEF\\u6B64\\u65F6\\u4F1A\\u53D1\\u9001\\u4E00\\u4E2A\\u7A7A\\u5185\\u5BB9\\u7684\\u6269\\u5C55\\u3002\\u800C\\u8FD9\\u79CD\\u5F62\\u5F0F\\u662F\\u5FC5\\u8981\\u7684\\uFF0C\\u56E0\\u4E3A\\u670D\\u52A1\\u5668\\u4E0D\\u80FD\\u4F7F\\u7528\\u5BA2\\u6237\\u6CA1\\u6709\\u63D0\\u4F9B\\u7684\\u6269\\u5C55\\u6765\\u56DE\\u590D\\u3002\\u56E0\\u6B64\\uFF0C\\u5BA2\\u6237\\u7AEF\\u9700\\u8981\\u5148\\u53D1\\u9001\\u4E00\\u4E2A\\u7A7A\\u7684\\u6269\\u5C55\\u5185\\u5BB9\\uFF0C\\u800C\\u670D\\u52A1\\u5668\\u5219\\u4F1A\\u586B\\u5145\\u5BF9\\u5E94\\u6570\\u636E\\uFF0C\\u5E76\\u6309\\u5BF9\\u5E94\\u6269\\u5C55\\u8FDB\\u884C\\u56DE\\u590D\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 05 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u8BC1\\u4E66\\u72B6\\u6001\\u8BF7\\u6C42\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 05 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x5(5) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"01 - \\u8868\\u793A \\\\\"\\u8BC1\\u4E66\\u72B6\\u6001\\u7C7B\\u578B\\\\\"\\uFF1AOSCP\"},{\"Tag\":\"li\",\"content\":\"00 00 - responderID (OSCP \\u7684\\u5B57\\u6BB5) \\u957F\\u5EA6\\u4E3A 0 \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 00 - \\u8868\\u793A OSCP \\u7684\\u5185\\u5BB9\\u957F\\u5EA6\\u4E3A 0 \\u5B57\\u8282\"}]}]],[\"\\u6269\\u5C55 - \\u652F\\u6301\\u7684\\u7EC4\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 0a 00 0a 00 08 00 1d 00 17 00 18 00 19\"},[\"(\\u4F8B\\u5B50\\u4E2D\\u7684)\\u5BA2\\u6237\\u7AEF\\u8868\\u793A\\u5B83\\u652F\\u6301\\u56DB\\u79CD\\u7C7B\\u578B\\u7684\\u692D\\u5706\\u66F2\\u7EBF\\u7B97\\u6CD5(ECC)\\u3002\\u4E3A\\u4E86\\u4F7F\\u8FD9\\u4E2A\\u6269\\u5C55\\u66F4\\u52A0\\u901A\\u7528\\uFF0C\\u672A\\u6765\\u53EF\\u4EE5\\u652F\\u6301\\u5176\\u4ED6\\u7684\\u5BC6\\u7801\\u5B66\\u7C7B\\u578B\\uFF0C\\u56E0\\u6B64\\u79F0\\u8FD9\\u4E9B\\u4E3A \\\\\"\\u652F\\u6301\\u7684\\u7EC4\\\\\" \\u800C\\u4E0D\\u662F \\\\\"\\u652F\\u6301\\u7684\\u66F2\\u7EBF\\\\\"\\u3002\",\"\\u8FD9\\u4E2A\\u5217\\u8868\\u540C\\u6837\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u964D\\u5E8F\\u6392\\u5217\\u7684\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 0a - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u652F\\u6301\\u7684\\u7EC4\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 0a - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x0a(10) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 08 - \\u66F2\\u7EBF\\u5217\\u8868\\u6761\\u76EE\\u957F\\u5EA6\\u4E3A 0x08(8) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 1d - \\u4EE3\\u8868 x25519 \\u66F2\\u7EBF\"},{\"Tag\":\"li\",\"content\":\"00 17 - \\u4EE3\\u8868 secp256r1 \\u66F2\\u7EBF\"},{\"Tag\":\"li\",\"content\":\"00 18 - \\u4EE3\\u8868 secp384r1 \\u66F2\\u7EBF\"},{\"Tag\":\"li\",\"content\":\"00 19 - \\u4EE3\\u8868 secp521r1 \\u66F2\\u7EBF\"}]}]],[\"\\u6269\\u5C55 - \\u692D\\u5706\\u66F2\\u7EBF\\u53C2\\u6570\\u6307\\u793A(EC Point Formats)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 0b 00 02 01 00\"},[\"\\u5728\\u692D\\u5706\\u66F2\\u7EBF(EC)\\u52A0\\u5BC6\\u8FC7\\u7A0B\\u4E2D\\uFF0C\\u5BA2\\u6237\\u7AEF\\u548C\\u670D\\u52A1\\u5668\\u901A\\u8FC7\\u8FD9\\u4E2A\\u6269\\u5C55\\u534F\\u5546\\u692D\\u5706\\u66F2\\u7EBF\\u76F8\\u5173\\u7684\\u4FE1\\u606F(\\u5982\\u9009\\u62E9\\u7684\\u8D77\\u59CB\\u70B9\\u548C\\u662F\\u5426\\u538B\\u7F29)\\u3002\\u6B64\\u65F6\\u8BE5\\u6269\\u5C55\\u8868\\u793A\\u5BA2\\u6237\\u7AEF\\u53EA\\u80FD\\u4ECE\\u670D\\u52A1\\u5668\\u89E3\\u6790\\u672A\\u538B\\u7F29\\u7684\\u4FE1\\u606F\\u3002\",\"\\u5728\\u540E\\u7EED\\u7684 TLS \\u7248\\u672C\\u4E2D(\\u5982 TLS 1.3)\\uFF0C\\u4E0D\\u5B58\\u5728\\u534F\\u5546\\u70B9\\u7684\\u80FD\\u529B(\\u76F8\\u53CD\\uFF0C\\u6BCF\\u6761\\u66F2\\u7EBF\\u90FD\\u6709\\u4E00\\u4E2A\\u9884\\u9009\\u7684\\u70B9)\\uFF0C\\u6240\\u4EE5\\u8FD9\\u4E2A\\u6269\\u5C55\\u5E76\\u4E0D\\u8D77\\u5B9E\\u8D28\\u6027\\u4F5C\\u7528\\u3002(\\u66F4\\u591A\\u5185\\u5BB9\\u8BF7\\u53C2\\u8003 TLS 1.3 \\u7684\\u5185\\u5BB9)\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 0b - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u692D\\u5706\\u66F2\\u7EBF\\u53C2\\u6570\\u6307\\u793A\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 02 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x02(2) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"01 - \\u6307\\u793A\\u957F\\u5EA6\\u4E3A 0x01(1) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 - \\u8868\\u793A\\u672A\\u538B\\u7F29\"}]}]],[\"\\u6269\\u5C55 - \\u7B7E\\u540D\\u7B97\\u6CD5\\u5217\\u8868\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 0d 00 12 00 10 04 01 04 03 05 01 05 03 06 01 06 03 02 01 02 03\"},[\"\\u968F\\u7740 TLS \\u7684\\u53D1\\u5C55\\uFF0C\\u6709\\u5FC5\\u8981\\u652F\\u6301\\u66F4\\u5F3A\\u5927\\u7684\\u7B7E\\u540D\\u7B97\\u6CD5\\uFF0C\\u5982 SHA-256\\uFF1B\\u540C\\u65F6\\u4E5F\\u5FC5\\u987B\\u5411\\u524D\\u517C\\u5BB9\\uFF0C\\u4EE5\\u652F\\u6301\\u4F7F\\u7528 MD5 \\u548C SHA1 \\u7684\\u5B9E\\u73B0\\u3002\\u56E0\\u6B64\\u9700\\u8981\\u6709\\u4E00\\u4E2A\\u6269\\u5C55\\u6765\\u8868\\u793A\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u54EA\\u4E9B\\u7B7E\\u540D\\u7B97\\u6CD5\\u3002\\u8FD9\\u53EF\\u80FD\\u4F1A\\u5F71\\u54CD\\u5230\\u670D\\u52A1\\u5668\\u63D0\\u4EA4\\u7ED9\\u5BA2\\u6237\\u7AEF\\u7684\\u8BC1\\u4E66\\uFF0C\\u4EE5\\u53CA\\u670D\\u52A1\\u5668\\u5728 CertificateVerify \\u8BB0\\u5F55\\u4E2D\\u53D1\\u9001\\u7684\\u7B7E\\u540D\\u3002\",\"\\u8FD9\\u4E2A\\u5217\\u8868\\u540C\\u6837\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u964D\\u5E8F\\u6392\\u5217\\u7684\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 0d - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u7B7E\\u540D\\u7B97\\u6CD5\\u5217\\u8868\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 12 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x12(18) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 10 - \\u7B97\\u6CD5\\u5217\\u8868\\u957F\\u5EA6\\u4E3A 0x10(16) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"04 01 - \\u4EE3\\u8868 RSA/PKCS1/SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"04 03 - \\u4EE3\\u8868 ECDSA/SECP256r1/SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"05 01 - \\u4EE3\\u8868 RSA/PKCS1/SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"05 03 - \\u4EE3\\u8868 ECDSA/SECP384r1/SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"06 01 - \\u4EE3\\u8868 RSA/PKCS1/SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"06 03 - \\u4EE3\\u8868 ECDSA/SECP521r1/SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"02 01 - \\u4EE3\\u8868 RSA/PKCS1/SHA1 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"02 03 - \\u4EE3\\u8868 ECDSA/SHA1 \\u7B97\\u6CD5\"}]}]],[\"\\u6269\\u5C55 - \\u91CD\\u534F\\u5546\\u4FE1\\u606F(Renegotiation Info)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"ff 01 00 01 00\"},[{\"children\":[\"\\u8FD9\\u4E2A\\u6269\\u5C55\\u7684\\u5B58\\u5728\\u9632\\u6B62\\u4E86\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://blog.csdn.net/edmond999/article/details/53007991\"},\"content\":\"\\u4E00\\u79CD\\u7528 TLS \\u91CD\\u534F\\u5546\\u8FDB\\u884C\\u7684\\u653B\\u51FB(Renegotiating TLS)\"},\"\\u3002\\u4E4B\\u540E\\u7684 TLS \\u7248\\u672C(\\u5982 TLS 1.3)\\u7531\\u4E8E\\u5B8C\\u5168\\u79FB\\u9664\\u4E86\\u91CD\\u534F\\u5546\\u7684\\u529F\\u80FD\\uFF0C\\u56E0\\u6B64\\u8FD9\\u4E2A\\u6269\\u5C55\\u4E5F\\u4E0D\\u4F1A\\u51FA\\u73B0\\u3002\"]},{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"ff 01 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u91CD\\u534F\\u5546\\u4FE1\\u606F\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 01 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x01(1) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 - \\u91CD\\u534F\\u5546\\u7684\\u957F\\u5EA6\\u4E3A 0x0(0) \\u5B57\\u8282\\uFF0C\\u56E0\\u4E3A\\u8FD9\\u662F\\u4E00\\u4E2A\\u5168\\u65B0\\u8FDE\\u63A5\"}]}]],[\"\\u6269\\u5C55 - SCT \\u7F16\\u7801\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 12 00 00\"},[{\"children\":[\"\\u5BA2\\u6237\\u7AEF\\u4E3A\\u670D\\u52A1\\u5668\\u8FD4\\u56DE SCT \\u4FE1\\u606F(\\u5DF2\\u7B7E\\u540D\\u7684\\u8BC1\\u4E66\\u65F6\\u95F4\\u6233, signed certificate timestamp)\\u63D0\\u4F9B\\u8BB8\\u53EF\\u3002SCT \\u7528\\u4E8E\\u652F\\u6301 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://imququ.com/post/certificate-transparency.html\"},\"content\":\"CT \\u6280\\u672F(\\u8BC1\\u4E66\\u900F\\u660E, Certificate Transparency)\"},\"\\u3002\"]},\"\\u5BA2\\u6237\\u7AEF\\u6B64\\u65F6\\u4F1A\\u53D1\\u9001\\u4E00\\u4E2A\\u7A7A\\u5185\\u5BB9\\u7684\\u6269\\u5C55\\u3002\\u800C\\u8FD9\\u79CD\\u5F62\\u5F0F\\u662F\\u5FC5\\u8981\\u7684\\uFF0C\\u56E0\\u4E3A\\u670D\\u52A1\\u5668\\u4E0D\\u80FD\\u4F7F\\u7528\\u5BA2\\u6237\\u6CA1\\u6709\\u63D0\\u4F9B\\u7684\\u6269\\u5C55\\u6765\\u56DE\\u590D\\u3002\\u56E0\\u6B64\\uFF0C\\u5BA2\\u6237\\u7AEF\\u9700\\u8981\\u5148\\u53D1\\u9001\\u4E00\\u4E2A\\u7A7A\\u7684\\u6269\\u5C55\\u5185\\u5BB9\\uFF0C\\u800C\\u670D\\u52A1\\u5668\\u5219\\u4F1A\\u586B\\u5145\\u5BF9\\u5E94\\u6570\\u636E\\uFF0C\\u5E76\\u6309\\u5BF9\\u5E94\\u6269\\u5C55\\u8FDB\\u884C\\u56DE\\u590D\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 12 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"SCT \\u7F16\\u7801\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 00 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x00(0) \\u5B57\\u8282 \"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=clientHello.0b506110.js.map\n","[\n  \"例子中的会话以 \\\"ClientHello\\\" 开始。客户端提供的信息包括以下内容：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"协议版本号\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"客户端随机数(用于之后的握手过程)\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"一个用于快速回复(resume)的\\\"会话 ID\\\"\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"一个客户端支持的有序的加解密算法数组\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"一个客户端支持的有序的压缩算法数组\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"扩展列表\"\n      }\n    ]\n  },\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"16 03 01 00 a5\"\n          },\n          [\n            \"TLS 会话被分解成 \\\"记录\\\"(record) 的形式发送和接收。记录是具有类型、协议版本和长度的数据块。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 表示 TLS 记录类型 0x16(22, Handshake)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 01 - 协议版本 (3.1, 即 TLS 1.0)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 a5 - 紧接着的数组载荷长度 0xA5(165) 字节\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"有趣的是，这里的版本号并不是预期的 3.3(TLS 1.2)，而是 3.1(TLS 1.0)。在 golang 的\",\n                {\n                  \"Tag\": \"code\",\n                  \"content\": \"crypto/tls\"\n                },\n                \"中有以下注释可能会解释其原因：\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"if vers == 0 {\\n    // Some TLS servers fail if the record version is\\n    // greater than TLS 1.0 for the initial ClientHello.\\n    vers = VersionTLS10\\n}\"\n              }\n            }\n          ]\n        ],\n        [\n          \"TLS 握手记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"01 00 00 a1\"\n          },\n          [\n            \"每个 TLS 握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 握手消息类型 0x01 (ClientHello)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 a1 - 紧接着的握手消息数据的长度 0xA1 (161) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"客户端 TLS 版本号\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"03 03\"\n          },\n          [\n            \"指出版本号为 3.3 (TLS 1.2)\",\n            \"不寻常的版本号(\\\"3,3\\\" 代表 TLS 1.2)是由于 TLS 1.0 是 SSL 3.0 协议的一个小修订。因此，TLS 1.0 用 \\\"3,1\\\" 表示，TLS 1.1用 \\\"3,2\\\"，以此类推。\"\n          ]\n        ],\n        [\n          \"客户端随机数\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f\"\n          },\n          [\n            \"客户端提供的 32 字节的随机数。这个数将在之后的会话中使用。在本文的例子中，我们暂时将一个方便记忆的字符串当作随机数。\",\n            {\n              \"children\": [\n                \"TLS 1.2 规范说，前 4 个字节应该是自 1970 年以来的秒数。但现在\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tools.ietf.org/html/draft-mathewson-no-gmtunixtime-00\"\n                  },\n                  \"content\": \"已建议不要这样做\"\n                },\n                \"，因为这样可以对主机和服务器进行\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://nmap.org/nmap-fingerprinting-article-tw.html\"\n                  },\n                  \"content\": \"指纹识别\"\n                },\n                \"。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"会话 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"客户端可以提供旧连接的 TLS 会话 ID，它能够恢复之前的会话。要做到这一点，服务器端和客户端都需要存储之前连接的密钥信息。恢复连接可以节省大量的计算和网络往返时间，所以只要有可能就会执行。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0 字节的会话 ID\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加解密算法列表\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 20 cc a8 cc a9 c0 2f c0 30 c0 2b c0 2c c0 13 c0 09 c0 14 c0 0a 00 9c 00 9d 00 2f 00 35 c0 12 00 0a\"\n          },\n          [\n            \"客户端提供一个有序的列表，以说明它支持哪些加解密算法进行加密。该列表是按照客户端的偏好顺序排列的，以最高偏好为先。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 20 - 0x20(32) 字节的加解密算法列表数据\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"cc a8 ... 00 0a - 代表一连串的加解密算法\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"完整加解密算法列表请查看 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml\"\n                  },\n                  \"content\": \"IANA tls-parameters\"\n                },\n                \" 的 TLS Cipher Suites 部分。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"压缩算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"01 00\"\n          },\n          [\n            \"客户端提供一个有序的列表，说明它将支持哪些压缩方法。压缩将在加密步骤之前(因为加密的数据通常是不可压缩的)。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 1 字节的压缩算法长度\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 代表 \\\"没有\\\"(null) 压缩算法\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"由于最近压缩被发现会泄露加密数据的信息(见 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/333314023\"\n                  },\n                  \"content\": \"CRIME/BREACH 攻击\"\n                },\n                \")。\",\n                \"因此之后的 TLS 版本(如 TLS 1.3)将禁用压缩。出于安全考虑，TLS 1.2 的客户端也应禁用压缩。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展的长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 58\"\n          },\n          [\n            \"客户端提供了一个可选的扩展列表，服务器可以根据它来采取某些行动或启用某些特性。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 58 - 扩展列表的长度为 0x58(88) 字节\"\n                }\n              ]\n            },\n            \"每个扩展将以两个字节开始，表明它是哪个扩展。然后是两个字节的内容长度字段，最后是扩展的具体内容。\"\n          ]\n        ],\n        [\n          \"扩展 - 服务器名称指示\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 00 00 18 00 16 00 00 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74\"\n          },\n          [\n            \"(例子中的)客户端提供了它想要联系的服务器的名称，也被称为 SNI(服务器名称指示)。\",\n            \"如果没有这个扩展，HTTPS 服务器将无法为一个 IP 地址上的多个主机名(虚拟主机)提供服务。因为它在 TLS 会话协商结束、HTTP 请求发出后才知道要发送哪个主机名的证书。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 表示这是 \\\"服务器名称指示\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 18 - 扩展信息长度为 0x18(24) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 16 - 第一个(也是唯一的)列表条目长度为 0x16(22) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0x00 表示这是 \\\"主机名\\\" 列表\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 13 - 主机名列表的长度为 0x13(19) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"65 78 61 ... 6e 65 74 - 主机名：\\\"example.ulfheim.net\\\"\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 证书状态请求\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 05 00 05 01 00 00 00 00\"\n          },\n          [\n            \"客户端要求服务器在其响应中提供 OCSP(Offensive Security Certified Professional certification) 信息提供许可。OCSP 可用于检查证书是否已被撤销。\",\n            \"客户端此时会发送一个空内容的扩展。而这种形式是必要的，因为服务器不能使用客户没有提供的扩展来回复。因此，客户端需要先发送一个空的扩展内容，而服务器则会填充对应数据，并按对应扩展进行回复。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 05 - 表示这是 \\\"证书状态请求\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 05 - 扩展信息长度为 0x5(5) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 表示 \\\"证书状态类型\\\"：OSCP\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - responderID (OSCP 的字段) 长度为 0 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 表示 OSCP 的内容长度为 0 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 支持的组\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 0a 00 0a 00 08 00 1d 00 17 00 18 00 19\"\n          },\n          [\n            \"(例子中的)客户端表示它支持四种类型的椭圆曲线算法(ECC)。为了使这个扩展更加通用，未来可以支持其他的密码学类型，因此称这些为 \\\"支持的组\\\" 而不是 \\\"支持的曲线\\\"。\",\n            \"这个列表同样是按照客户端的偏好降序排列的。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0a - 表示这是 \\\"支持的组\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0a - 扩展信息长度为 0x0a(10) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 08 - 曲线列表条目长度为 0x08(8) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 1d - 代表 x25519 曲线\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 17 - 代表 secp256r1 曲线\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 18 - 代表 secp384r1 曲线\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 19 - 代表 secp521r1 曲线\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 椭圆曲线参数指示(EC Point Formats)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 0b 00 02 01 00\"\n          },\n          [\n            \"在椭圆曲线(EC)加密过程中，客户端和服务器通过这个扩展协商椭圆曲线相关的信息(如选择的起始点和是否压缩)。此时该扩展表示客户端只能从服务器解析未压缩的信息。\",\n            \"在后续的 TLS 版本中(如 TLS 1.3)，不存在协商点的能力(相反，每条曲线都有一个预选的点)，所以这个扩展并不起实质性作用。(更多内容请参考 TLS 1.3 的内容)\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0b - 表示这是 \\\"椭圆曲线参数指示\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 02 - 扩展信息长度为 0x02(2) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 指示长度为 0x01(1) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 表示未压缩\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 签名算法列表\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 0d 00 12 00 10 04 01 04 03 05 01 05 03 06 01 06 03 02 01 02 03\"\n          },\n          [\n            \"随着 TLS 的发展，有必要支持更强大的签名算法，如 SHA-256；同时也必须向前兼容，以支持使用 MD5 和 SHA1 的实现。因此需要有一个扩展来表示客户端支持哪些签名算法。这可能会影响到服务器提交给客户端的证书，以及服务器在 CertificateVerify 记录中发送的签名。\",\n            \"这个列表同样是按照客户端的偏好降序排列的。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0d - 表示这是 \\\"签名算法列表\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 12 - 扩展信息长度为 0x12(18) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 10 - 算法列表长度为 0x10(16) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"04 01 - 代表 RSA/PKCS1/SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"04 03 - 代表 ECDSA/SECP256r1/SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 01 - 代表 RSA/PKCS1/SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 03 - 代表 ECDSA/SECP384r1/SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"06 01 - 代表 RSA/PKCS1/SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"06 03 - 代表 ECDSA/SECP521r1/SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 01 - 代表 RSA/PKCS1/SHA1 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 03 - 代表 ECDSA/SHA1 算法\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 重协商信息(Renegotiation Info)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"ff 01 00 01 00\"\n          },\n          [\n            {\n              \"children\": [\n                \"这个扩展的存在防止了\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://blog.csdn.net/edmond999/article/details/53007991\"\n                  },\n                  \"content\": \"一种用 TLS 重协商进行的攻击(Renegotiating TLS)\"\n                },\n                \"。之后的 TLS 版本(如 TLS 1.3)由于完全移除了重协商的功能，因此这个扩展也不会出现。\"\n              ]\n            },\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"ff 01 - 表示这是 \\\"重协商信息\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 01 - 扩展信息长度为 0x01(1) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 重协商的长度为 0x0(0) 字节，因为这是一个全新连接\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - SCT 编码\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 12 00 00\"\n          },\n          [\n            {\n              \"children\": [\n                \"客户端为服务器返回 SCT 信息(已签名的证书时间戳, signed certificate timestamp)提供许可。SCT 用于支持 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://imququ.com/post/certificate-transparency.html\"\n                  },\n                  \"content\": \"CT 技术(证书透明, Certificate Transparency)\"\n                },\n                \"。\"\n              ]\n            },\n            \"客户端此时会发送一个空内容的扩展。而这种形式是必要的，因为服务器不能使用客户没有提供的扩展来回复。因此，客户端需要先发送一个空的扩展内容，而服务器则会填充对应数据，并按对应扩展进行回复。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 12 - 表示这是 \\\"SCT 编码\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 扩展信息长度为 0x00(0) 字节 \"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"clientHello.0b506110.js.map"}