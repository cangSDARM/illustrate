{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,s1M","sources":["<anon>","src/QUIC/clientInitialPacket.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"k4OCt\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u4F1A\\u8BDD\\u5F00\\u59CB\\u65F6\\uFF0C\\u5BA2\\u6237\\u7AEF\\u53D1\\u9001\\u4E00\\u4E2A\\u521D\\u59CB\\u6570\\u636E\\u5305\\u3002\\u8FD9\\u4E2A\\u6570\\u636E\\u5305\\u5305\\u542B \\\\\"ClientHello\\\\\" TLS \\u8BB0\\u5F55\\uFF0C\\u7528\\u4E8E\\u5F00\\u59CB TLS 1.3 \\u52A0\\u5BC6\\u4F1A\\u8BDD\\u3002\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u6570\\u636E\\u5305\\u5934\\u5B57\\u8282\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\u52A0\\u5BC6\"},\"content\":\"cd\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"c0\"},[\"\\u6570\\u636E\\u5305\\u4EE5\\u4E00\\u4E2A\\u5934\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8BE5\\u5B57\\u8282\\u5E94\\u7528\\u4E86\\u5934\\u4FDD\\u62A4\\u3002\\u5934\\u90E8\\u4FDD\\u62A4\\u7528\\u4E8E\\u9690\\u85CF\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u548C\\u5176\\u4ED6\\u4FE1\\u606F\\uFF0C\\u4F7F\\u5176\\u4E0D\\u88AB\\u5916\\u754C\\u89C2\\u5BDF\\u5230\\u3002\",\"\\u5305\\u5934\\u4FDD\\u62A4\\u662F\\u901A\\u8FC7\\u7528\\\\\"\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\\\\"\\u5BF9\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u7684\\u6709\\u6548\\u8F7D\\u8377\\u7684\\u6837\\u672C\\u8FDB\\u884C\\u52A0\\u5BC6\\uFF0C\\u7136\\u540E\\u5C06\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u4E2D\\u7684\\u67D0\\u4E9B\\u6BD4\\u7279\\u548C\\u5B57\\u8282\\u4E0E\\u6240\\u5F97\\u6570\\u636E\\u8FDB\\u884C\\u5F02\\u6216(XOR)\\u64CD\\u4F5C\\u5F97\\u5230\\u7684\\u3002\\u5BF9\\u4E8E\\u50CF\\u8FD9\\u6837\\u7684\\\\\"\\u957F\\\\\"\\u683C\\u5F0F\\u6570\\u636E\\u5305\\uFF0C\\u53D7\\u4FDD\\u62A4\\u7684\\u90E8\\u5206\\u662F\\u8FD9\\u4E2A\\u5B57\\u8282\\u7684\\u4F4E 4 \\u4F4D\\uFF0C\\u4EE5\\u53CA\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u7684\\u5B57\\u8282\\uFF08\\u89C1\\u4E0B\\u6587\\uFF09\\u3002\",\"\\u8FD9\\u91CC\\u6709\\u4E00\\u4E2A\\u5173\\u4E8E\\u5982\\u4F55\\u8BA1\\u7B97\\u51FA\\u52A0\\u5BC6\\u5934\\u5B57\\u8282\\u7684\\u4F8B\\u5B50\\uFF1A\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### \\\\\"client header protection key\\\\\" from calc step above\\\\n$ key=6df4e9d737cdf714711d7c617ee82981\\\\n### sample is taken from 16 bytes of payload starting\\\\n### 4 bytes past the first byte of the packet number\\\\n$ sample=ed78716be9711ba498b7ed868443bb2e\\\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 5 | xxd -p\\\\n\\\\ned9895bb15\\\\n\\\\n### first byte of result is xor\\'d into lower 4 bits of this byte,\\\\n### remaining bytes are xor\\'d one-for-one into the bytes of\\\\n### the packet number (which in this packet is only one byte)\"}},\"\\u89E3\\u5BC6\\u51FA\\u7684\\u5B57\\u8282 0xC0 \\u4E2D\\u7684\\u4F4D\\u6709\\u4EE5\\u4E0B\\u542B\\u4E49\\uFF1A\",{\"Tag\":\"Table\",\"props\":{\"headers\":[\"\",\"\\u503C\",\"\\u542B\\u4E49\"],\"data\":[[\"\\u9AD8\\u4F4D\",\"1\",\"Long Header \\u683C\\u5F0F\"],[\"\",\"1\",\"\\u56FA\\u5B9A\\u4F4D(\\u603B\\u662F\\u88AB\\u7F6E1)\"],[\"\",\"00\",\"\\u6570\\u636E\\u5305\\u7C7B\\u578B\\uFF1A\\u521D\\u59CB\\u5316\"],[\"\",\"00\",\"\\u4FDD\\u7559(\\u603B\\u662F\\u88AB\\u7F6E0)\"],[\"\\u4F4E\\u4F4D\",\"00\",\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u957F\\u5EA6(\\u8868\\u793A\\u4E0B\\u9762\\u7684 \\\\\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\\\\" \\u5C06\\u6709\\u4E00\\u4E2A\\u5B57\\u8282\\u7684\\u957F\\u5EA6\\uFF0C\\u9ED8\\u8BA4\\u503C)\"]]}}]],[\"QUIC \\u7248\\u672C\\u53F7\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 00 00 01\"},[\"QUIC\\u7684\\u7248\\u672C\\u662F\\uFF1A0x1\"]],[\"\\u76EE\\u7684\\u5730\\u8FDE\\u63A5\\u6807\\u8BC6 ID\",{\"props\":{\"className\":\"bytes\"},\"content\":\"08 00 01 02 03 04 05 06 07\"},[\"\\u5BA2\\u6237\\u7AEF\\u8FD8\\u6CA1\\u6709\\u6536\\u5230\\u670D\\u52A1\\u5668\\u9009\\u62E9\\u7684\\u8FDE\\u63A5 ID\\u3002\\u56E0\\u6B64\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u4EC5\\u6765\\u63D0\\u4F9B\\u7528\\u4E8E\\u63A8\\u5BFC\\u521D\\u59CB\\u52A0\\u5BC6\\u5BC6\\u94A5\\u7684 8 \\u4E2A\\u5B57\\u8282\\u7684\\u968F\\u673A\\u6570\\u636E\\uFF0C\\u5982\\u4E0A\\u6587 \\\\\"\\u5BA2\\u6237\\u7AEF\\u751F\\u6210\\u521D\\u59CB\\u5BC6\\u94A5\\\\\" \\u6240\\u89E3\\u91CA\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"08 - \\u7D27\\u8DDF\\u7740\\u7684\\u76EE\\u7684\\u5730\\u8FDE\\u63A5\\u6807\\u8BC6 ID \\u7684\\u957F\\u5EA6(8bytes)\"},{\"Tag\":\"li\",\"content\":\"00 01 ... 06 07 - \\u968F\\u673A\\u6570\\u636E\"}]}]],[\"\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID\",{\"props\":{\"className\":\"bytes\"},\"content\":\"05 63 5f 63 69 64\"},[\"\\u5BA2\\u6237\\u7AEF\\u4F7F\\u7528\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u6765\\u8868\\u660E\\u5B83\\u9009\\u62E9\\u7684\\u4F20\\u8F93\\u7ED9\\u670D\\u52A1\\u5668\\u7684\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"05 - \\u7D27\\u8DDF\\u7740\\u7684\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID \\u7684\\u957F\\u5EA6(5bytes)\"},{\"Tag\":\"li\",\"content\":\"63 5f 63 69 64 - \\u5B9E\\u9645\\u7684\\u6E90\\u8FDE\\u63A5\\u6807\\u8BC6 ID (\\\\\"c_cid\\\\\")\"}]}]],[\"\\u4EE4\\u724C\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u5BA2\\u6237\\u7AEF\\u5728\\u67D0\\u4E9B\\u60C5\\u51B5\\u4E0B\\u53EF\\u4EE5\\u4F7F\\u7528\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u6765\\u63D0\\u4F9B\\u670D\\u52A1\\u5668\\u6240\\u8981\\u6C42\\u7684\\u4EE4\\u724C\\uFF0C\\u4F8B\\u5982\\u8BC1\\u660E\\u5176\\u8FDE\\u63A5\\u5C1D\\u8BD5\\u4E0D\\u662F\\u6B3A\\u9A97\\u3002\\u6B64\\u65F6\\uFF0C\\u6CA1\\u6709\\u4EE4\\u724C\\u9700\\u8981\\u63D0\\u4F9B\\uFF0C\\u8BE5\\u5B57\\u6BB5\\u4E3A\\u7A7A\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - \\u7D27\\u8DDF\\u7740\\u7684\\u4EE4\\u724C\\u957F\\u5EA6(0bytes)\"}]}]],[\"\\u6570\\u636E\\u5305\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"41 03\"},[\"\\u5BA2\\u6237\\u7AEF\\u8868\\u793A\\u6570\\u636E\\u5305\\u4E2D\\u6709\\u591A\\u5C11\\u5B57\\u8282\\u7684\\u52A0\\u5BC6\\u6709\\u6548\\u8F7D\\u8377\\u3002\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u662F\\u4E00\\u4E2A\\u957F\\u5EA6\\u53EF\\u53D8\\u7684\\u6574\\u6570\\u2014\\u2014\\u7B2C\\u4E00\\u4E2A\\u5B57\\u8282\\u7684\\u524D\\u4E24\\u4F4D\\u8868\\u793A\\u8BE5\\u6574\\u6570\\u4E2D\\u603B\\u5171\\u6709\\u591A\\u5C11\\u4E2A\\u5B57\\u8282\\u3002\",\"\\u6B64\\u65F6\\uFF0C\\u7B2C\\u4E00\\u4E2A\\u5B57\\u8282\\u4EE5 \\\\\"0 1\\\\\"(0x4)\\u8FD9\\u4E24\\u4E2A\\u4F4D\\u5F00\\u59CB\\uFF0C\\u8868\\u793A\\u8BE5\\u6574\\u6570\\u5171\\u4E24\\u4E2A\\u5B57\\u8282\\u3002\\u5176\\u4F59\\u7684\\u4F4D\\u7ED9\\u51FA\\u6570\\u5B57 0x103\\uFF0C\\u8868\\u793A 259 \\u4E2A\\u5B57\\u8282\\u7684\\u6709\\u6548\\u8F7D\\u8377\\u3002\"]],[\"\\u6570\\u636E\\u5305\\u5E8F\\u53F7\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u6570\\u636E\\u5305\\u5934\\u4FDD\\u62A4\\u5BC6\\u94A5\\u52A0\\u5BC6\"},\"content\":\"98\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"00\"},[\"\\u8BE5\\u5B57\\u8282\\u5E94\\u7528\\u4E86\\u5934\\u4FDD\\u62A4\\u3002\\u8BE6\\u89C1 \\\\\"\\u6570\\u636E\\u5305\\u5934\\u5B57\\u8282\\\\\"\\u3002\",\"\\u8FD9\\u4E2A\\u5B57\\u8282\\u7684\\u672A\\u53D7\\u4FDD\\u62A4\\u7684\\u503C\\u4E3A 0x00\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u7B2C 0 \\u53F7\\u5305\\uFF0C\\u6216\\u8005\\u8BF4\\u662F\\u5BA2\\u6237\\u7AEF\\u53D1\\u9001\\u7684\\u7B2C\\u4E00\\u4E2A\\\\\"\\u521D\\u59CB\\\\\"\\u5305\\u3002\",\"\\u8FD9\\u4E2A\\u6570\\u636E\\u4E5F\\u6709\\u53EF\\u80FD\\u88AB\\u622A\\u65AD\\u3002\\u53D1\\u9001\\u7AEF\\u70B9\\u901A\\u8FC7\\u51E0\\u4E2A\\u6B65\\u9AA4\\u622A\\u65AD\\uFF1A\\u2460\\u8BA1\\u7B97\\u5DF2\\u53D1\\u9001\\u7684\\u6700\\u9AD8\\u7684\\u5E8F\\u53F7\\u548C\\u672A\\u786E\\u8BA4\\u7684\\u6700\\u4F4E\\u7684\\u5E8F\\u53F7\\u4E4B\\u95F4\\u7684\\u5DEE\\u503C\\uFF1B\\u2461\\u51FA\\u4E8E\\u5B89\\u5168\\u8003\\u8651\\u5C06\\u5DEE\\u503C\\u52A0\\u500D\\u5E76\\u56DB\\u820D\\u4E94\\u5165\\uFF1B\\u2462\\u8BA1\\u7B97\\u5B83\\u5728\\u660E\\u786E\\u8868\\u793A\\u4E24\\u7AEF\\u4E4B\\u95F4\\u7684\\u5E8F\\u53F7\\u7684\\u524D\\u63D0\\u4E0B\\u53EF\\u4EE5\\u4ECE\\u5E8F\\u53F7\\u7684\\u9AD8\\u4F4D\\u5220\\u9664\\u7684\\u5B57\\u8282\\u6570\\uFF1B\\u2463\\u622A\\u65AD\\u7F16\\u7801\\u540E\\u7684\\u6570\\u636E\\u5305\\u5E8F\\u53F7\\u76F4\\u81F3\\u957F\\u5EA6\\u6EE1\\u8DB3\\u8BE5\\u5B57\\u8282\\u6570\\u3002\\u800C\\u63A5\\u6536\\u7AEF\\u70B9\\u6839\\u636E\\u4F1A\\u5B83\\u6700\\u8FD1\\u770B\\u5230\\u7684\\u6570\\u636E\\u5305\\u53F7\\u7801\\u586B\\u5165\\u5B8C\\u6574\\u7684\\u5E8F\\u53F7\\u3002\",{\"children\":[\"\\u7531\\u4E8E\\u6211\\u4EEC\\u7684\\u4F8B\\u5B50\\u5BF9\\u8BDD\\u53D1\\u9001\\u7684\\u6570\\u636E\\u5305\\u5F88\\u5C0F(\\u5C11\\u4E8E 64 \\u4E2A\\u5B57\\u8282)\\uFF0C\\u6240\\u4EE5\\u8FD9\\u79CD\\u622A\\u65AD\\u4E0D\\u4F1A\\u5728\\u672C\\u6587\\u4E2D\\u51FA\\u73B0\\u3002\\u8BE6\\u60C5\\u89C1 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://www.rfc-editor.org/rfc/rfc9000.html#section-17.1\"},\"content\":\"RFC 9000\"},\"\\u3002\"]}]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\",\"title\":\"\\u88AB\\\\\"\\u521D\\u59CB\\u5BC6\\u94A5\\\\\"\\u52A0\\u5BC6\"},\"content\":\"1c 36 a7 ed 78 71 6b e9 71 1b a4 98 b7 ed 86 84 43 bb 2e 0c 51 4d 4d 84 8e ad cc 7a 00 d2 5c e9 f9 af a4 83 97 80 88 de 83 6b e6 8c 0b 32 a2 45 95 d7 81 3e a5 41 4a 91 99 32 9a 6d 9f 7f 76 0d d8 bb 24 9b f3 f5 3d 9a 77 fb b7 b3 95 b8 d6 6d 78 79 a5 1f e5 9e f9 60 1f 79 99 8e b3 56 8e 1f dc 78 9f 64 0a ca b3 85 8a 82 ef 29 30 fa 5c e1 4b 5b 9e a0 bd b2 9f 45 72 da 85 aa 3d ef 39 b7 ef af ff a0 74 b9 26 70 70 d5 0b 5d 07 84 2e 49 bb a3 bc 78 7f f2 95 d6 ae 3b 51 43 05 f1 02 af e5 a0 47 b3 fb 4c 99 eb 92 a2 74 d2 44 d6 04 92 c0 e2 e6 e2 12 ce f0 f9 e3 f6 2e fd 09 55 e7 1c 76 8a a6 bb 3c d8 0b bb 37 55 c8 b7 eb ee 32 71 2f 40 f2 24 51 19 48 70 21 b4 b8 4e 15 65 e3 ca 31 96 7a c8 60 4d 40 32 17 0d ec 28 0a ee fa 09 5d 08\"},[\"\\u8FD9\\u4E9B\\u6570\\u636E\\u4F7F\\u7528\\u5BA2\\u6237\\u7AEF\\u7684\\\\\"\\u521D\\u59CB\\u5BC6\\u94A5\\\\\"\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\"]],[\"AEAD \\u9274\\u522B\\u6807\\u7B7E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"b3 b7 24 1e f6 64 6a 6c 86 e5 c6 2c e0 8b e0 99\"},[{\"children\":[\"\\u8FD9\\u662F \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD \\u7B97\\u6CD5\"},\"\\u7684\\u9274\\u522B\\u6807\\u7B7E\\uFF0C\\u7528\\u4EE5\\u786E\\u8BA4\\u52A0\\u5BC6\\u6570\\u636E\\u548C\\u6570\\u636E\\u5305\\u5934\\u7684\\u5B8C\\u6574\\u6027\\u3002\\u5B83\\u7531\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4EA7\\u751F\\uFF0C\\u5E76\\u7531\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6D88\\u8017\\u3002\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u5BA2\\u6237\\u7AEF\\u521D\\u59CB\\u5BC6\\u94A5\\u8BA1\\u7B97\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u521D\\u59CB\\u5BC6\\u94A5\\u548C\\u521D\\u59CB\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002IVs \\u901A\\u8FC7\\u5BC6\\u94A5\\u548C\\u5DF2\\u7ECF\\u7528\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u957F\\u5EA6\\u8FDB\\u884C\\u5F02\\u6216\\u64CD\\u4F5C\\u751F\\u6210\\u3002\\u5728\\u4F8B\\u5B50\\u4E2D IV \\u4E3A 0\\u3002\",\"\\u6570\\u636E\\u5305\\u5F00\\u5934\\u7684 24 \\u5B57\\u8282(\\u6570\\u636E\\u5305\\u5934)\\u8FD8\\u4F1A\\u4F5C\\u4E3A\\u89E3\\u5BC6\\u8FC7\\u7A0B\\u89E3\\u5BC6\\u6210\\u529F\\u65F6\\u5FC5\\u987B\\u6EE1\\u8DB3\\u7684\\u8BA4\\u8BC1\\u6761\\u4EF6\\u3002\",{\"children\":[\"openssl \\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u8FD8\\u4E0D\\u652F\\u6301 AEAD \\u7B97\\u6CD5\\u52A0\\u89E3\\u5BC6(AEAD ciphers)\\uFF0C\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528\\u4F5C\\u8005\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u6765\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://quic.xargs.org/files/aes_128_gcm_decrypt.c\"},\"content\":\"\\u89E3\\u5BC6\"},\"\\u548C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://quic.xargs.org/files/aes_128_gcm_encrypt.c\"},\"content\":\"\\u52A0\\u5BC6\"},\"\\u8FD9\\u4E9B\\u6570\\u636E\\u3002\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Initial Keys Calc\\\\\" step\\\\n$ key=b14b918124fda5c8d79847602fa3520b\\\\n$ iv=ddbc15dea80925a55686a7df\\\\n### from this record\\\\n$ recdata=c00000000108000102030405060705635f63696400410300\\\\n$ authtag=b3b7241ef6646a6c86e5c62ce08be099\\\\n$ recordnum=0\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\\\n\\\\n00000000  06 00 40 ee 01 00 00 ea  03 03 00 01 02 03 04 05  |..@.............|\\\\n00000010  06 07 08 09 0a 0b 0c 0d  0e 0f 10 11 12 13 14 15  |................|\\\\n... snip ...\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u52A0\\u5BC6\\u5E27\\u5E27\\u5934\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"06 00 40 ee\"},[{\"children\":[\"\\u6BCF\\u4E2A QUIC \\u6570\\u636E\\u5305\\u5728\\u5176\\u6709\\u6548\\u8F7D\\u8377\\u4E2D\\u5305\\u542B\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/438579683\"},\"content\":\"\\u4E00\\u4E2A\\u6216\\u591A\\u4E2A\\u5E27\\u7684\\u5217\\u8868\"},\"\\u3002\\u4F8B\\u5B50\\u4E2D\\u7684\\u6570\\u636E\\u5305\\u53EA\\u5305\\u542B\\u4E00\\u4E2A\\u5E27\\uFF0C\\u5373 \\u52A0\\u5BC6\\u5E27\\u3002\"]},\"\\u52A0\\u5BC6\\u5E27\\u5E27\\u5934\\u7684\\u76EE\\u7684\\u662F\\u52A0\\u5BC6\\u5B57\\u8282\\u6D41\\uFF0C\\u7528\\u4E8E\\u5EFA\\u7ACB\\u5B89\\u5168\\u7684 TLS \\u8FDE\\u63A5(TLS 1.3 \\u63E1\\u624B)\\u3002\"]],[\"ClientHello TLS \\u8BB0\\u5F55\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"01 00 00 ea 03 03 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 00 00 06 13 01 13 02 13 03 01 00 00 bb 00 00 00 18 00 16 00 00 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74 00 0a 00 08 00 06 00 1d 00 17 00 18 00 10 00 0b 00 09 08 70 69 6e 67 2f 31 2e 30 00 0d 00 14 00 12 04 03 08 04 04 01 05 03 08 05 05 01 08 06 06 01 02 01 00 33 00 26 00 24 00 1d 00 20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54 00 2d 00 02 01 01 00 2b 00 03 02 03 04 00 39 00 31 03 04 80 00 ff f7 04 04 80 a0 00 00 05 04 80 10 00 00 06 04 80 10 00 00 07 04 80 10 00 00 08 01 0a 09 01 0a 0a 01 03 0b 01 19 0f 05 63 5f 63 69 64\"},[\"\\u8FD9\\u4E00\\u8BB0\\u5F55\\u5C06\\u5728\\u540E\\u9762\\u8BE6\\u7EC6\\u8BF4\\u660E\\u3002\"]]]}}]');\n\n});\n\n\n//# sourceMappingURL=clientInitialPacket.ccb7c867.js.map\n","[\n  \"会话开始时，客户端发送一个初始数据包。这个数据包包含 \\\"ClientHello\\\" TLS 记录，用于开始 TLS 1.3 加密会话。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"数据包头字节\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"cd\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"c0\"\n          },\n          [\n            \"数据包以一个头字节开始，该字节应用了头保护。头部保护用于隐藏数据包序号和其他信息，使其不被外界观察到。\",\n            \"包头保护是通过用\\\"数据包头保护密钥\\\"对每个数据包的有效载荷的样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行异或(XOR)操作得到的。对于像这样的\\\"长\\\"格式数据包，受保护的部分是这个字节的低 4 位，以及数据包序号的字节（见下文）。\",\n            \"这里有一个关于如何计算出加密头字节的例子：\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### \\\"client header protection key\\\" from calc step above\\n$ key=6df4e9d737cdf714711d7c617ee82981\\n### sample is taken from 16 bytes of payload starting\\n### 4 bytes past the first byte of the packet number\\n$ sample=ed78716be9711ba498b7ed868443bb2e\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 5 | xxd -p\\n\\ned9895bb15\\n\\n### first byte of result is xor'd into lower 4 bits of this byte,\\n### remaining bytes are xor'd one-for-one into the bytes of\\n### the packet number (which in this packet is only one byte)\"\n              }\n            },\n            \"解密出的字节 0xC0 中的位有以下含义：\",\n            {\n              \"Tag\": \"Table\",\n              \"props\": {\n                \"headers\": [\"\", \"值\", \"含义\"],\n                \"data\": [\n                  [\"高位\", \"1\", \"Long Header 格式\"],\n                  [\"\", \"1\", \"固定位(总是被置1)\"],\n                  [\"\", \"00\", \"数据包类型：初始化\"],\n                  [\"\", \"00\", \"保留(总是被置0)\"],\n                  [\n                    \"低位\",\n                    \"00\",\n                    \"数据包序号长度(表示下面的 \\\"数据包序号\\\" 将有一个字节的长度，默认值)\"\n                  ]\n                ]\n              }\n            }\n          ]\n        ],\n        [\n          \"QUIC 版本号\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 00 00 01\"\n          },\n          [\"QUIC的版本是：0x1\"]\n        ],\n        [\n          \"目的地连接标识 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"08 00 01 02 03 04 05 06 07\"\n          },\n          [\n            \"客户端还没有收到服务器选择的连接 ID。因此这个字段仅来提供用于推导初始加密密钥的 8 个字节的随机数据，如上文 \\\"客户端生成初始密钥\\\" 所解释。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 - 紧跟着的目的地连接标识 ID 的长度(8bytes)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 01 ... 06 07 - 随机数据\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"源连接标识 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"05 63 5f 63 69 64\"\n          },\n          [\n            \"客户端使用这个字段来表明它选择的传输给服务器的源连接标识 ID。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 - 紧跟着的源连接标识 ID 的长度(5bytes)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"63 5f 63 69 64 - 实际的源连接标识 ID (\\\"c_cid\\\")\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"令牌\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"客户端在某些情况下可以使用这个字段来提供服务器所要求的令牌，例如证明其连接尝试不是欺骗。此时，没有令牌需要提供，该字段为空。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 紧跟着的令牌长度(0bytes)\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"数据包长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"41 03\"\n          },\n          [\n            \"客户端表示数据包中有多少字节的加密有效载荷。这个字段是一个长度可变的整数——第一个字节的前两位表示该整数中总共有多少个字节。\",\n            \"此时，第一个字节以 \\\"0 1\\\"(0x4)这两个位开始，表示该整数共两个字节。其余的位给出数字 0x103，表示 259 个字节的有效载荷。\"\n          ]\n        ],\n        [\n          \"数据包序号\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"98\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"该字节应用了头保护。详见 \\\"数据包头字节\\\"。\",\n            \"这个字节的未受保护的值为 0x00，表明它是第 0 号包，或者说是客户端发送的第一个\\\"初始\\\"包。\",\n            \"这个数据也有可能被截断。发送端点通过几个步骤截断：①计算已发送的最高的序号和未确认的最低的序号之间的差值；②出于安全考虑将差值加倍并四舍五入；③计算它在明确表示两端之间的序号的前提下可以从序号的高位删除的字节数；④截断编码后的数据包序号直至长度满足该字节数。而接收端点根据会它最近看到的数据包号码填入完整的序号。\",\n            {\n              \"children\": [\n                \"由于我们的例子对话发送的数据包很小(少于 64 个字节)，所以这种截断不会在本文中出现。详情见 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://www.rfc-editor.org/rfc/rfc9000.html#section-17.1\"\n                  },\n                  \"content\": \"RFC 9000\"\n                },\n                \"。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\",\n              \"title\": \"被\\\"初始密钥\\\"加密\"\n            },\n            \"content\": \"1c 36 a7 ed 78 71 6b e9 71 1b a4 98 b7 ed 86 84 43 bb 2e 0c 51 4d 4d 84 8e ad cc 7a 00 d2 5c e9 f9 af a4 83 97 80 88 de 83 6b e6 8c 0b 32 a2 45 95 d7 81 3e a5 41 4a 91 99 32 9a 6d 9f 7f 76 0d d8 bb 24 9b f3 f5 3d 9a 77 fb b7 b3 95 b8 d6 6d 78 79 a5 1f e5 9e f9 60 1f 79 99 8e b3 56 8e 1f dc 78 9f 64 0a ca b3 85 8a 82 ef 29 30 fa 5c e1 4b 5b 9e a0 bd b2 9f 45 72 da 85 aa 3d ef 39 b7 ef af ff a0 74 b9 26 70 70 d5 0b 5d 07 84 2e 49 bb a3 bc 78 7f f2 95 d6 ae 3b 51 43 05 f1 02 af e5 a0 47 b3 fb 4c 99 eb 92 a2 74 d2 44 d6 04 92 c0 e2 e6 e2 12 ce f0 f9 e3 f6 2e fd 09 55 e7 1c 76 8a a6 bb 3c d8 0b bb 37 55 c8 b7 eb ee 32 71 2f 40 f2 24 51 19 48 70 21 b4 b8 4e 15 65 e3 ca 31 96 7a c8 60 4d 40 32 17 0d ec 28 0a ee fa 09 5d 08\"\n          },\n          [\"这些数据使用客户端的\\\"初始密钥\\\"进行加密。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"b3 b7 24 1e f6 64 6a 6c 86 e5 c6 2c e0 8b e0 99\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"客户端初始密钥计算\\\" 步骤中产生的初始密钥和初始向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 0。\",\n            \"数据包开头的 24 字节(数据包头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Initial Keys Calc\\\" step\\n$ key=b14b918124fda5c8d79847602fa3520b\\n$ iv=ddbc15dea80925a55686a7df\\n### from this record\\n$ recdata=c00000000108000102030405060705635f63696400410300\\n$ authtag=b3b7241ef6646a6c86e5c62ce08be099\\n$ recordnum=0\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\n\\n00000000  06 00 40 ee 01 00 00 ea  03 03 00 01 02 03 04 05  |..@.............|\\n00000010  06 07 08 09 0a 0b 0c 0d  0e 0f 10 11 12 13 14 15  |................|\\n... snip ...\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"加密帧帧头\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"06 00 40 ee\"\n          },\n          [\n            {\n              \"children\": [\n                \"每个 QUIC 数据包在其有效载荷中包含\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/438579683\"\n                  },\n                  \"content\": \"一个或多个帧的列表\"\n                },\n                \"。例子中的数据包只包含一个帧，即 加密帧。\"\n              ]\n            },\n            \"加密帧帧头的目的是加密字节流，用于建立安全的 TLS 连接(TLS 1.3 握手)。\"\n          ]\n        ],\n        [\n          \"ClientHello TLS 记录\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"01 00 00 ea 03 03 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 00 00 06 13 01 13 02 13 03 01 00 00 bb 00 00 00 18 00 16 00 00 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74 00 0a 00 08 00 06 00 1d 00 17 00 18 00 10 00 0b 00 09 08 70 69 6e 67 2f 31 2e 30 00 0d 00 14 00 12 04 03 08 04 04 01 05 03 08 05 05 01 08 06 06 01 02 01 00 33 00 26 00 24 00 1d 00 20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54 00 2d 00 02 01 01 00 2b 00 03 02 03 04 00 39 00 31 03 04 80 00 ff f7 04 04 80 a0 00 00 05 04 80 10 00 00 06 04 80 10 00 00 07 04 80 10 00 00 08 01 0a 09 01 0a 0a 01 03 0b 01 19 0f 05 63 5f 63 69 64\"\n          },\n          [\"这一记录将在后面详细说明。\"]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"clientInitialPacket.ccb7c867.js.map"}