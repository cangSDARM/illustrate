{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,k0E","sources":["<anon>","src/TLS12/serverApplicationData.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eWyaF\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u7AEF\\u54CD\\u5E94\\u5BA2\\u6237\\u7AEF\\u7684\\u6570\\u636E\\uFF0C\\u8FD4\\u56DE\\u5B57\\u7B26\\u4E32\\\\\"pong\\\\\"\\u3002\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"17 03 03 00 30\"},[\"TLS \\u4F1A\\u8BDD\\u88AB\\u5206\\u89E3\\u6210 \\\\\"\\u8BB0\\u5F55\\\\\"(record) \\u7684\\u5F62\\u5F0F\\u53D1\\u9001\\u548C\\u63A5\\u6536\\u3002\\u8BB0\\u5F55\\u662F\\u5177\\u6709\\u7C7B\\u578B\\u3001\\u534F\\u8BAE\\u7248\\u672C\\u548C\\u957F\\u5EA6\\u7684\\u6570\\u636E\\u5757\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"17 - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x17(23, application data)\"},{\"Tag\":\"li\",\"content\":\"03 03 - \\u534F\\u8BAE\\u7248\\u672C (3.3, \\u5373 TLS 1.2)\"},{\"Tag\":\"li\",\"content\":\"00 30 - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0x30(48) \\u5B57\\u8282\"}]}]],[\"\\u52A0\\u5BC6\\u5411\\u91CF\",{\"props\":{\"className\":\"bytes\"},\"content\":\"61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70\"},[\"\\u670D\\u52A1\\u5668\\u7AEF\\u53D1\\u9001\\u4E00\\u4E2A\\u7528\\u4E8E\\u89E3\\u5BC6\\u8FD9\\u4E2A\\u533A\\u5757\\u7684\\u521D\\u59CB\\u5316\\u5411\\u91CF\\u3002\\u56E0\\u4E3A\\u6211\\u4EEC\\u7684\\u6570\\u636E\\u662F\\u53EF\\u9884\\u6D4B\\u7684(we have overridden the rand function)\\uFF0C\\u56E0\\u6B64\\u5B83\\u4E5F\\u662F\\u4E00\\u4E2A\\u53EF\\u9884\\u6D4B\\u7684\\u5E8F\\u5217\\u3002\"]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"97 83 48 8a f5 fa 20 bf 7a 2e f6 9d eb b5 34 db 9f b0 7a 8c 27 21 de e5 40 9f 77 af 0c 3d de 56\"},[\"\\u8FD9\\u4E2A\\u6570\\u636E\\u662F\\u7528\\u670D\\u52A1\\u5668\\u7AEF\\u7684\\u5199\\u65F6\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u3002\\u56E0\\u4E3A\\u5B83\\u5305\\u542B\\u4E00\\u4E2A\\u6D88\\u606F\\u9A8C\\u8BC1\\u7801(MAC)\\u548C\\u586B\\u5145\\u5B57\\u8282\\uFF0C\\u6240\\u4EE5\\u5B83\\u6BD4\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8981\\u5927\\u4E00\\u622A\\u3002\"]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u751F\\u6210\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u5199\\u65F6\\u5BC6\\u94A5\\u548C\\u8BE5\\u8BB0\\u5F55\\u5F00\\u5934\\u6240\\u643A\\u5E26\\u7684\\u521D\\u59CB\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### server key\\\\n$ hexkey=752a18e7a9fcb7cbcdd8f98dd8f769eb\\\\n### IV for this record\\\\n$ hexiv=6162636465666768696a6b6c6d6e6f70\\\\n### encrypted data\\\\n$ echo \\'97 83 48 8a f5 fa 20 bf 7a 2e f6 9d eb b5 34 db\\'  > /tmp/msg1\\\\n$ echo \\'9f b0 7a 8c 27 21 de e5 40 9f 77 af 0c 3d de 56\\' >> /tmp/msg1\\\\n$ xxd -r -p /tmp/msg1 \\\\\\\\\\\\n  | openssl enc -d -nopad -aes-128-cbc -K $hexkey -iv $hexiv | hexdump\\\\n\\\\n0000000 70 6f 6e 67 5a c7 99 dc cf dc 0f af 95 2b dc 91\\\\n0000010 18 af 20 0e e3 1c 51 05 07 07 07 07 07 07 07 07\\\\n\\\\nThe last 28 bytes contain a 20-byte MAC and padding to bring the data to a\\\\nmultiple of 16 bytes.  The 20-byte MAC can be reproduced as follows:\\\\n\\\\n### from https://tools.ietf.org/html/rfc2246#section-6.2.3.1\\\\n$ sequence=\\'0000000000000001\\'\\\\n$ rechdr=\\'17 03 03\\'\\\\n$ datalen=\\'00 04\\'\\\\n$ data=\\'70 6f 6e 67\\'\\\\n### from \\\\\"Encryption Keys Calculation\\\\\"\\\\n$ mackey=2ad8bdd8c601a617126f63540eb20906f781fad2\\\\n$ echo $sequence $rechdr $datalen $data | xxd -r -p \\\\\\\\\\\\n  | openssl dgst -sha1 -mac HMAC -macopt hexkey:$mackey\\\\n\\\\n5ac799dccfdc0faf952bdc9118af200ee31c5105\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"70 6f 6e 67\"},[\"\\u5B57\\u7B26\\u4E32\\\\\"pong\\\\\"\"]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverApplicationData.c38d6aa6.js.map\n","[\n  \"服务器端响应客户端的数据，返回字符串\\\"pong\\\"。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"17 03 03 00 30\"\n          },\n          [\n            \"TLS 会话被分解成 \\\"记录\\\"(record) 的形式发送和接收。记录是具有类型、协议版本和长度的数据块。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"17 - 表示 TLS 记录类型 0x17(23, application data)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 03 - 协议版本 (3.3, 即 TLS 1.2)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 30 - 紧接着的数组载荷长度 0x30(48) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密向量\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70\"\n          },\n          [\n            \"服务器端发送一个用于解密这个区块的初始化向量。因为我们的数据是可预测的(we have overridden the rand function)，因此它也是一个可预测的序列。\"\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"97 83 48 8a f5 fa 20 bf 7a 2e f6 9d eb b5 34 db 9f b0 7a 8c 27 21 de e5 40 9f 77 af 0c 3d de 56\"\n          },\n          [\n            \"这个数据是用服务器端的写时密钥加密的。因为它包含一个消息验证码(MAC)和填充字节，所以它比解密后的数据要大一截。\"\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端生成会话密钥\\\" 步骤中产生的写时密钥和该记录开头所携带的初始向量(IVs)加密。\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### server key\\n$ hexkey=752a18e7a9fcb7cbcdd8f98dd8f769eb\\n### IV for this record\\n$ hexiv=6162636465666768696a6b6c6d6e6f70\\n### encrypted data\\n$ echo '97 83 48 8a f5 fa 20 bf 7a 2e f6 9d eb b5 34 db'  > /tmp/msg1\\n$ echo '9f b0 7a 8c 27 21 de e5 40 9f 77 af 0c 3d de 56' >> /tmp/msg1\\n$ xxd -r -p /tmp/msg1 \\\\\\n  | openssl enc -d -nopad -aes-128-cbc -K $hexkey -iv $hexiv | hexdump\\n\\n0000000 70 6f 6e 67 5a c7 99 dc cf dc 0f af 95 2b dc 91\\n0000010 18 af 20 0e e3 1c 51 05 07 07 07 07 07 07 07 07\\n\\nThe last 28 bytes contain a 20-byte MAC and padding to bring the data to a\\nmultiple of 16 bytes.  The 20-byte MAC can be reproduced as follows:\\n\\n### from https://tools.ietf.org/html/rfc2246#section-6.2.3.1\\n$ sequence='0000000000000001'\\n$ rechdr='17 03 03'\\n$ datalen='00 04'\\n$ data='70 6f 6e 67'\\n### from \\\"Encryption Keys Calculation\\\"\\n$ mackey=2ad8bdd8c601a617126f63540eb20906f781fad2\\n$ echo $sequence $rechdr $datalen $data | xxd -r -p \\\\\\n  | openssl dgst -sha1 -mac HMAC -macopt hexkey:$mackey\\n\\n5ac799dccfdc0faf952bdc9118af200ee31c5105\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"70 6f 6e 67\"\n          },\n          [\"字符串\\\"pong\\\"\"]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverApplicationData.c38d6aa6.js.map"}