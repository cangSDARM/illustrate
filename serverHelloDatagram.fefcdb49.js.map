{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,qxH","sources":["<anon>","src/DTLS/serverHelloDatagram.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"6qJIj\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u56DE\\u590D \\\\\"ServerHello\\\\\"\\u3002\\u670D\\u52A1\\u5668\\u63D0\\u4F9B\\u7684\\u4FE1\\u606F\\u5305\\u62EC\\u4EE5\\u4E0B\\u5185\\u5BB9\\uFF1A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u7AEF\\u968F\\u673A\\u6570(\\u5728\\u968F\\u540E\\u7684\\u63E1\\u624B\\u65F6\\u4F7F\\u7528)\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u7AEF\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"\\u7528\\u4E8E\\u5BC6\\u94A5\\u4EA4\\u6362\\u7684\\u516C\\u94A5\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u534F\\u5546\\u7684\\u5177\\u4F53\\u534F\\u8BAE\\u7684\\u7248\\u672C\"}]},{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"DTLS \\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"16 fe fd 00 00 00 00 00 00 00 00 00 62\"},[\"\\u6BCF\\u4E2A DTLS \\u8BB0\\u5F55\\u90FD\\u4EE5\\u4E00\\u4E2A type\\u3001\\u4E00\\u4E9B\\u5E8F\\u5217\\u4FE1\\u606F(seq info)\\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x16(22, Handshake)\"},{\"Tag\":\"li\",\"content\":\"fe fd - \\u534F\\u8BAE\\u7248\\u672C (DTLS 1.2, \\u7EC6\\u8282\\u89C1\\u4E0B\\u6587)\"},{\"Tag\":\"li\",\"content\":\"00 00 - \\u5BC6\\u94A5\\u5E8F\\u5217\\u6307\\u793A(key epoch\\uFF0C\\u6BCF\\u6B21\\u5BC6\\u94A5\\u66F4\\u65B0\\u65F6\\u90FD\\u4F1A\\u9012\\u589E)\"},{\"Tag\":\"li\",\"content\":\"00 00 00 00 00 00 - DTLS \\u5E8F\\u5217\\u53F7 0x0(0)\"},{\"Tag\":\"li\",\"content\":\"00 62 - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0x62(98) \\u5B57\\u8282\"}]},\"DTLS \\u7248\\u672C\\u7684\\u7F16\\u7801\\u65B9\\u5F0F\\u662F\\u5C06\\u534F\\u8BAE\\u7248\\u672C\\u5206\\u6210\\u51E0\\u4E2A\\u90E8\\u5206\\uFF0C\\u7136\\u540E\\u53D6\\u6BCF\\u4E2A\\u90E8\\u5206\\u7684\\u8865\\u7801\\u3002(\\u56E0\\u6B64 \\\\\"1.3\\\\\" \\u53D8\\u6210 {1, 3}\\uFF0C\\u53D8\\u6210\\u5B57\\u8282 0xFE 0xFC)\\u3002\\u8FD9\\u79CD\\u8865\\u7801\\u6280\\u672F\\u4F7F DTLS \\u7248\\u672C\\u4E0E TLS \\u7248\\u672C\\u6709\\u6240\\u5DEE\\u522B\\u3002\",\"\\u7531\\u4E8E\\u5DF2\\u7ECF\\u521B\\u5EFA\\u548C\\u90E8\\u7F72\\u7684\\u7F51\\u7EDC\\u4E2D\\u95F4\\u4EF6(middleboxes)\\u4E0D\\u5141\\u8BB8\\u5B83\\u4EEC\\u6240\\u4E0D\\u627F\\u8BA4\\u7684\\u534F\\u8BAE\\u7248\\u672C\\u901A\\u8FC7\\uFF0C\\u56E0\\u6B64\\u6240\\u6709 DTLS 1.3 \\u4F1A\\u8BDD\\u5728\\u672A\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u4E2D\\u90FD\\u4F1A\\u663E\\u793A\\u4E3A DTLS 1.2(0xFE 0xFD)\\u3002\"]],[\"TLS \\u63E1\\u624B\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"02 00 00 56\"},[\"\\u6BCF\\u4E2A TLS \\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"02 - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x02 (ServerHello)\"},{\"Tag\":\"li\",\"content\":\"00 00 56 - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0x56 (86) \\u5B57\\u8282\"}]}]],[\"\\u7528\\u4E8E\\u91CD\\u5EFA\\u63E1\\u624B\\u987A\\u5E8F\\u7684\\u4FE1\\u606F(Handshake Reconstruction Data)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 00 00 00 00 00 00 56\"},[\"\\u56E0\\u4E3A UDP (\\u6216\\u5176\\u4ED6\\u6570\\u636E\\u62A5\\u534F\\u8BAE)\\u4E0D\\u4FDD\\u8BC1\\u4EA4\\u4ED8\\u6216\\u6392\\u5E8F\\uFF0C\\u800C\\u4E14\\u6570\\u636E\\u62A5\\u7684\\u957F\\u5EA6\\u53EF\\u80FD\\u6BD4\\u9700\\u8981\\u53D1\\u9001\\u7684\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u5EA6\\u8981\\u5C0F\\u3002\\u56E0\\u6B64 DTLS \\u5FC5\\u987B\\u63D0\\u4F9B\\u4E00\\u5B9A\\u7684\\u4FE1\\u606F\\uFF0C\\u4EE5\\u652F\\u6301\\u5728\\u6570\\u636E\\u4E22\\u5931\\u3001\\u5305\\u91CD\\u6392\\u5E8F\\u6216\\u6709\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u4F7F\\u5F97\\u5BF9\\u7B49\\u7AEF(peer)\\u80FD\\u591F\\u91CD\\u65B0\\u6784\\u5EFA\\u4E00\\u6761\\u6B63\\u786E\\u7684\\u6570\\u636E\\u8BB0\\u5F55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 00 - DTLS \\u5E8F\\u5217\\u53F7 0x0(0)\"},{\"Tag\":\"li\",\"content\":\"00 00 00 - \\u8868\\u660E\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u504F\\u79FB\\u91CF\\u4E3A 0x00(0) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 00 56 - \\u8868\\u660E\\u4E4B\\u540E\\u7684\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u957F\\u5EA6\\u4E3A 0x56(86) \\u5B57\\u8282\"}]},\"\\u5728\\u672C\\u6587\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u8BB0\\u5F55\\u7684\\u957F\\u5EA6\\u8981\\u77ED\\u4E8E\\u4E00\\u4E2A UDP \\u6570\\u636E\\u62A5\\u7684\\u53EF\\u627F\\u8F7D\\u957F\\u5EA6\\uFF0C\\u56E0\\u6B64\\u504F\\u79FB\\u91CF\\u4E3A\\u96F6\\uFF0C\\u4E14\\u957F\\u5EA6\\u4E3A\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u3002\"]],[\"\\u670D\\u52A1\\u5668\\u7AEF DTLS \\u7248\\u672C\\u53F7(\\u5E9F\\u5F03)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"fe fd\"},[\"DTLS \\u7248\\u672C\\u7684\\u7F16\\u7801\\u65B9\\u5F0F\\u662F\\u5C06\\u534F\\u8BAE\\u7248\\u672C\\u5206\\u6210\\u51E0\\u4E2A\\u90E8\\u5206\\uFF0C\\u7136\\u540E\\u53D6\\u6BCF\\u4E2A\\u90E8\\u5206\\u7684\\u8865\\u7801\\u3002(\\u56E0\\u6B64 \\\\\"1.3\\\\\" \\u53D8\\u6210 {1, 3}\\uFF0C\\u53D8\\u6210\\u5B57\\u8282 0xFE 0xFC)\\u3002\\u8FD9\\u79CD\\u8865\\u7801\\u6280\\u672F\\u4F7F DTLS \\u7248\\u672C\\u4E0E TLS \\u7248\\u672C\\u6709\\u6240\\u5DEE\\u522B\\u3002\",\"\\u7531\\u4E8E\\u5DF2\\u7ECF\\u521B\\u5EFA\\u548C\\u90E8\\u7F72\\u7684\\u7F51\\u7EDC\\u4E2D\\u95F4\\u4EF6(middleboxes)\\u4E0D\\u5141\\u8BB8\\u5B83\\u4EEC\\u6240\\u4E0D\\u627F\\u8BA4\\u7684\\u534F\\u8BAE\\u7248\\u672C\\u901A\\u8FC7\\uFF0C\\u56E0\\u6B64\\u6240\\u6709 DTLS 1.3 \\u4F1A\\u8BDD\\u5728\\u672A\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u4E2D\\u90FD\\u4F1A\\u663E\\u793A\\u4E3A DTLS 1.2(0xFE 0xFD)\\u3002\\u6240\\u6709\\u7684 DTLS 1.3 \\u53CA\\u4EE5\\u4E0A\\u7248\\u672C\\u7684\\u4F1A\\u8BDD\\u9700\\u8981\\u901A\\u8FC7\\u540E\\u9762\\u63D0\\u5230\\u7684\\\\\"\\u652F\\u6301\\u7684\\u7248\\u672C\\\\\"\\u62D3\\u5C55\\u534F\\u5546\\u771F\\u5B9E\\u7248\\u672C\\u53F7\\u3002\"]],[\"\\u670D\\u52A1\\u5668\\u7AEF\\u968F\\u673A\\u6570\",{\"props\":{\"className\":\"bytes\"},\"content\":\"70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f\"},[\"\\u670D\\u52A1\\u5668\\u7AEF\\u63D0\\u4F9B\\u7684 32 \\u5B57\\u8282\\u7684\\u968F\\u673A\\u6570\\u3002\\u8FD9\\u4E2A\\u6570\\u5C06\\u5728\\u4E4B\\u540E\\u7684\\u4F1A\\u8BDD\\u4E2D\\u4F7F\\u7528\\u3002\\u5728\\u672C\\u6587\\u7684\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6211\\u4EEC\\u6682\\u65F6\\u5C06\\u4E00\\u4E2A\\u65B9\\u4FBF\\u8BB0\\u5FC6\\u7684\\u5B57\\u7B26\\u4E32\\u5F53\\u4F5C\\u968F\\u673A\\u6570\\u3002\"]],[\"\\u4F1A\\u8BDD ID (\\u5E9F\\u5F03)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u8FD9\\u662F\\u4E00\\u4E2A\\u5E9F\\u5F03(legacy)\\u5B57\\u6BB5\\uFF0C\\u4E0D\\u5728 DTLS 1.3 \\u4E2D\\u4F7F\\u7528\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - 0 \\u5B57\\u8282\\u7684\\u4F1A\\u8BDD ID\"}]}]],[\"\\u6240\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"13 01\"},[\"\\u670D\\u52A1\\u5668\\u4ECE\\u5BA2\\u6237\\u7AEF\\u7ED9\\u51FA\\u7684\\u9009\\u9879\\u5217\\u8868\\u4E2D\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5 0x1301(TLS_AES_128_GCM_SHA256)\\u3002\"]],[\"\\u538B\\u7F29\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u670D\\u52A1\\u5668\\u4ECE\\u5BA2\\u6237\\u7AEF\\u7ED9\\u51FA\\u7684\\u9009\\u9879\\u5217\\u8868\\u4E2D\\u9009\\u62E9\\u7684\\u538B\\u7F29\\u7B97\\u6CD5 0x00(null)\\u3002\"]],[\"\\u6269\\u5C55\\u7684\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 2e\"},[\"\\u670D\\u52A1\\u5668\\u5411\\u5BA2\\u6237\\u7AEF\\u8FD4\\u56DE\\u7684\\u6269\\u5C55\\u6709\\u5E8F\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u3002\\u56E0\\u4E3A\\u670D\\u52A1\\u5668\\u88AB\\u7981\\u6B62\\u56DE\\u590D ClientHello \\u6D88\\u606F\\u4E2D\\u4E0D\\u5B58\\u5728\\u7684\\u6269\\u5C55\\uFF0C\\u56E0\\u6B64\\u670D\\u52A1\\u5668\\u77E5\\u9053\\u5BA2\\u6237\\u7AEF\\u5C06\\u7406\\u89E3\\u5E76\\u652F\\u6301\\u5217\\u51FA\\u7684\\u6240\\u6709\\u6269\\u5C55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 2e - \\u6269\\u5C55\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u4E3A 0x2E(46) \\u5B57\\u8282\"}]},\"\\u6BCF\\u4E2A\\u6269\\u5C55\\u5C06\\u4EE5\\u4E24\\u4E2A\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u54EA\\u4E2A\\u6269\\u5C55\\u3002\\u7136\\u540E\\u662F\\u4E24\\u4E2A\\u5B57\\u8282\\u7684\\u5185\\u5BB9\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u6700\\u540E\\u662F\\u6269\\u5C55\\u7684\\u5177\\u4F53\\u5185\\u5BB9\\u3002\"]],[\"\\u6269\\u5C55 - \\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 33 00 24 00 1d 00 20 9f d7 ad 6d cf f4 29 8d d3 f9 6d 5b 1b 2a f9 10 a0 53 5b 14 88 d7 f8 fa bb 34 9a 98 28 80 b6 15\"},[\"\\u670D\\u52A1\\u5668\\u4F7F\\u7528\\u548C\\u5BA2\\u6237\\u7AEF\\u53D1\\u9001\\u516C\\u94A5\\u65F6\\u76F8\\u540C\\u7684\\u7B97\\u6CD5\\u53D1\\u9001\\u4E00\\u4E2A\\u81EA\\u5DF1\\u7684\\u516C\\u94A5\\u3002\\u4E00\\u65E6\\u8FD9\\u4E2A\\u88AB\\u53D1\\u9001\\uFF0C\\u52A0\\u5BC6\\u5BC6\\u94A5\\u5C31\\u53EF\\u4EE5\\u88AB\\u8BA1\\u7B97\\u51FA\\u6765\\u3002\\u5176\\u4F59\\u7684\\u63E1\\u624B\\u5219\\u5C06\\u88AB\\u52A0\\u5BC6\\u3002\\u800C\\u4E0D\\u7528\\u50CF\\u4EE5\\u524D\\u7684\\u534F\\u8BAE\\u7248\\u672C\\uFF0C\\u4EE5\\u900F\\u660E\\u7684\\u65B9\\u5F0F\\u53D1\\u9001\\u63E1\\u624B\\u8BB0\\u5F55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 33 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 24 - \\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868\\u957F\\u5EA6\\u4E3A 0x24(36) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 1d - \\u4EE3\\u8868 x25519 \\u7B97\\u6CD5(\\u4F8B\\u5B50\\u4E2D\\u4E3A\\u901A\\u8FC7 curve25519 \\u7B97\\u6CD5\\u8FDB\\u884C\\u5BC6\\u94A5\\u4EA4\\u6362)\"},{\"Tag\":\"li\",\"content\":\"00 20 - \\u516C\\u94A5\\u957F\\u5EA6\\u4E3A 0x20(32) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"9f d7 ... b6 15 - \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u51C6\\u5907\\u5BC6\\u94A5\\u4EA4\\u6362\\\\\" \\u6B65\\u9AA4\\u4E2D\\u751F\\u6210\\u7684\\u516C\\u94A5\"}]}]],[\"\\u6269\\u5C55 - \\u652F\\u6301\\u7684\\u7248\\u672C\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 2b 00 02 fe fc\"},[\"\\u5BA2\\u6237\\u7AEF\\u8868\\u660E\\u5176\\u652F\\u6301 DTLS 1.3\\u3002\\u7531\\u4E8E\\u517C\\u5BB9\\u6027\\u7684\\u539F\\u56E0\\uFF0C\\u8FD9\\u88AB\\u653E\\u5728\\u4E00\\u4E2A\\u6269\\u5C55\\u4E2D\\uFF0C\\u800C\\u4E0D\\u662F\\u4E0A\\u9762\\u7684\\u5BA2\\u6237\\u7AEF\\u7248\\u672C\\u5B57\\u6BB5\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 2b - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u652F\\u6301\\u7684\\u7248\\u672C\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 02 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x02(2) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"fe fc - \\u4EE3\\u8868 DTLS 1.3\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverHelloDatagram.fefcdb49.js.map\n","[\n  \"服务器回复 \\\"ServerHello\\\"。服务器提供的信息包括以下内容：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端随机数(在随后的握手时使用)\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端选择的加解密算法\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"用于密钥交换的公钥\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器协商的具体协议的版本\"\n      }\n    ]\n  },\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"DTLS 记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"16 fe fd 00 00 00 00 00 00 00 00 00 62\"\n          },\n          [\n            \"每个 DTLS 记录都以一个 type、一些序列信息(seq info)和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 表示 TLS 记录类型 0x16(22, Handshake)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"fe fd - 协议版本 (DTLS 1.2, 细节见下文)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 密钥序列指示(key epoch，每次密钥更新时都会递增)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 00 00 00 00 - DTLS 序列号 0x0(0)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 62 - 紧接着的数组载荷长度 0x62(98) 字节\"\n                }\n              ]\n            },\n            \"DTLS 版本的编码方式是将协议版本分成几个部分，然后取每个部分的补码。(因此 \\\"1.3\\\" 变成 {1, 3}，变成字节 0xFE 0xFC)。这种补码技术使 DTLS 版本与 TLS 版本有所差别。\",\n            \"由于已经创建和部署的网络中间件(middleboxes)不允许它们所不承认的协议版本通过，因此所有 DTLS 1.3 会话在未加密的记录中都会显示为 DTLS 1.2(0xFE 0xFD)。\"\n          ]\n        ],\n        [\n          \"TLS 握手记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"02 00 00 56\"\n          },\n          [\n            \"每个 TLS 握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 - 握手消息类型 0x02 (ServerHello)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 56 - 紧接着的握手消息数据的长度 0x56 (86) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"用于重建握手顺序的信息(Handshake Reconstruction Data)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 00 00 00 00 00 00 56\"\n          },\n          [\n            \"因为 UDP (或其他数据报协议)不保证交付或排序，而且数据报的长度可能比需要发送的握手记录长度要小。因此 DTLS 必须提供一定的信息，以支持在数据丢失、包重排序或有记录碎片的情况下，使得对等端(peer)能够重新构建一条正确的数据记录。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - DTLS 序列号 0x0(0)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 00 - 表明记录碎片的偏移量为 0x00(0) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 56 - 表明之后的记录碎片的长度为 0x56(86) 字节\"\n                }\n              ]\n            },\n            \"在本文例子中，整个握手记录记录的长度要短于一个 UDP 数据报的可承载长度，因此偏移量为零，且长度为整个握手记录长。\"\n          ]\n        ],\n        [\n          \"服务器端 DTLS 版本号(废弃)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"fe fd\"\n          },\n          [\n            \"DTLS 版本的编码方式是将协议版本分成几个部分，然后取每个部分的补码。(因此 \\\"1.3\\\" 变成 {1, 3}，变成字节 0xFE 0xFC)。这种补码技术使 DTLS 版本与 TLS 版本有所差别。\",\n            \"由于已经创建和部署的网络中间件(middleboxes)不允许它们所不承认的协议版本通过，因此所有 DTLS 1.3 会话在未加密的记录中都会显示为 DTLS 1.2(0xFE 0xFD)。所有的 DTLS 1.3 及以上版本的会话需要通过后面提到的\\\"支持的版本\\\"拓展协商真实版本号。\"\n          ]\n        ],\n        [\n          \"服务器端随机数\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f\"\n          },\n          [\n            \"服务器端提供的 32 字节的随机数。这个数将在之后的会话中使用。在本文的例子中，我们暂时将一个方便记忆的字符串当作随机数。\"\n          ]\n        ],\n        [\n          \"会话 ID (废弃)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"这是一个废弃(legacy)字段，不在 DTLS 1.3 中使用。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0 字节的会话 ID\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"所选择的加解密算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"13 01\"\n          },\n          [\n            \"服务器从客户端给出的选项列表中选择的加解密算法 0x1301(TLS_AES_128_GCM_SHA256)。\"\n          ]\n        ],\n        [\n          \"压缩算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\"服务器从客户端给出的选项列表中选择的压缩算法 0x00(null)。\"]\n        ],\n        [\n          \"扩展的长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 2e\"\n          },\n          [\n            \"服务器向客户端返回的扩展有序列表的长度。因为服务器被禁止回复 ClientHello 消息中不存在的扩展，因此服务器知道客户端将理解并支持列出的所有扩展。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 2e - 扩展列表的长度为 0x2E(46) 字节\"\n                }\n              ]\n            },\n            \"每个扩展将以两个字节开始，表明它是哪个扩展。然后是两个字节的内容长度字段，最后是扩展的具体内容。\"\n          ]\n        ],\n        [\n          \"扩展 - 算法公钥列表\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 33 00 24 00 1d 00 20 9f d7 ad 6d cf f4 29 8d d3 f9 6d 5b 1b 2a f9 10 a0 53 5b 14 88 d7 f8 fa bb 34 9a 98 28 80 b6 15\"\n          },\n          [\n            \"服务器使用和客户端发送公钥时相同的算法发送一个自己的公钥。一旦这个被发送，加密密钥就可以被计算出来。其余的握手则将被加密。而不用像以前的协议版本，以透明的方式发送握手记录。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 33 - 表示这是 \\\"算法公钥列表\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 24 - 算法公钥列表长度为 0x24(36) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 1d - 代表 x25519 算法(例子中为通过 curve25519 算法进行密钥交换)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 20 - 公钥长度为 0x20(32) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"9f d7 ... b6 15 - \\\"服务器端准备密钥交换\\\" 步骤中生成的公钥\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 支持的版本\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 2b 00 02 fe fc\"\n          },\n          [\n            \"客户端表明其支持 DTLS 1.3。由于兼容性的原因，这被放在一个扩展中，而不是上面的客户端版本字段。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 2b - 表示这是 \\\"支持的版本\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 02 - 扩展信息长度为 0x02(2) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"fe fc - 代表 DTLS 1.3\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverHelloDatagram.fefcdb49.js.map"}