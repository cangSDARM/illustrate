{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,o7N","sources":["<anon>","src/DTLS/clientHelloDatagram.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"docPh\", function(module, exports) {\nmodule.exports = JSON.parse('[\"DTLS \\u52A0\\u5BC6\\u4F1A\\u8BDD\\u4EE5 \\\\\"ClientHello\\\\\" \\u5F00\\u59CB\\u3002\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u7684\\u4FE1\\u606F\\u5305\\u62EC\\u4EE5\\u4E0B\\u5185\\u5BB9\\uFF1A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"\\u5BA2\\u6237\\u7AEF\\u968F\\u673A\\u6570(\\u7528\\u4E8E\\u4E4B\\u540E\\u7684\\u63E1\\u624B\\u8FC7\\u7A0B)\"},{\"Tag\":\"li\",\"content\":\"\\u4E00\\u4E2A\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u7684\\u6709\\u5E8F\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6570\\u7EC4\"},{\"Tag\":\"li\",\"content\":\"\\u7528\\u4E8E\\u5BC6\\u94A5\\u4EA4\\u6362\\u7684\\u516C\\u94A5\"},{\"Tag\":\"li\",\"content\":\"\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u7684\\u534F\\u8BAE\\u7248\\u672C\\u5217\\u8868\"}]},{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"DTLS \\u6570\\u636E\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"16 fe fd 00 00 00 00 00 00 00 00 00 9d\"},[\"\\u6BCF\\u4E2A DTLS \\u8BB0\\u5F55\\u90FD\\u4EE5\\u4E00\\u4E2A type\\u3001\\u4E00\\u4E9B\\u5E8F\\u5217\\u4FE1\\u606F(seq info)\\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u8868\\u793A DTLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x16(22, Handshake)\"},{\"Tag\":\"li\",\"content\":\"fe fd - \\u534F\\u8BAE\\u7248\\u672C (DTLS 1.2, \\u7EC6\\u8282\\u89C1\\u4E0B\\u6587)\"},{\"Tag\":\"li\",\"content\":\"00 00 - \\u5BC6\\u94A5\\u5E8F\\u5217\\u6307\\u793A(key epoch\\uFF0C\\u6BCF\\u6B21\\u5BC6\\u94A5\\u66F4\\u65B0\\u65F6\\u90FD\\u4F1A\\u9012\\u589E)\"},{\"Tag\":\"li\",\"content\":\"00 00 00 00 00 00 - DTLS \\u5E8F\\u5217\\u53F7 0x0(0)\"},{\"Tag\":\"li\",\"content\":\"00 9d - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0x9D(157) \\u5B57\\u8282\"}]},\"DTLS \\u7248\\u672C\\u7684\\u7F16\\u7801\\u65B9\\u5F0F\\u662F\\u5C06\\u534F\\u8BAE\\u7248\\u672C\\u5206\\u6210\\u51E0\\u4E2A\\u90E8\\u5206\\uFF0C\\u7136\\u540E\\u53D6\\u6BCF\\u4E2A\\u90E8\\u5206\\u7684\\u8865\\u7801\\u3002(\\u56E0\\u6B64 \\\\\"1.3\\\\\" \\u53D8\\u6210 {1, 3}\\uFF0C\\u53D8\\u6210\\u5B57\\u8282 0xFE 0xFC)\\u3002\\u8FD9\\u79CD\\u8865\\u7801\\u6280\\u672F\\u4F7F DTLS \\u7248\\u672C\\u4E0E TLS \\u7248\\u672C\\u6709\\u6240\\u5DEE\\u522B\\u3002\",\"\\u7531\\u4E8E\\u5DF2\\u7ECF\\u521B\\u5EFA\\u548C\\u90E8\\u7F72\\u7684\\u7F51\\u7EDC\\u4E2D\\u95F4\\u4EF6(middleboxes)\\u4E0D\\u5141\\u8BB8\\u5B83\\u4EEC\\u6240\\u4E0D\\u627F\\u8BA4\\u7684\\u534F\\u8BAE\\u7248\\u672C\\u901A\\u8FC7\\uFF0C\\u56E0\\u6B64\\u6240\\u6709 DTLS 1.3 \\u4F1A\\u8BDD\\u5728\\u672A\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u4E2D\\u90FD\\u4F1A\\u663E\\u793A\\u4E3A DTLS 1.2(0xFE 0xFD)\\u3002\"]],[\"TLS \\u63E1\\u624B\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"01 00 00 91\"},[\"\\u6BCF\\u4E2A TLS \\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"01 - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x01 (ClientHello)\"},{\"Tag\":\"li\",\"content\":\"00 00 91 - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0x91 (145) \\u5B57\\u8282\"}]}]],[\"\\u7528\\u4E8E\\u91CD\\u5EFA\\u63E1\\u624B\\u987A\\u5E8F\\u7684\\u4FE1\\u606F(Handshake Reconstruction Data)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 00 00 00 00 00 00 91\"},[\"\\u56E0\\u4E3A UDP (\\u6216\\u5176\\u4ED6\\u6570\\u636E\\u62A5\\u534F\\u8BAE)\\u4E0D\\u4FDD\\u8BC1\\u4EA4\\u4ED8\\u6216\\u6392\\u5E8F\\uFF0C\\u800C\\u4E14\\u6570\\u636E\\u62A5\\u7684\\u957F\\u5EA6\\u53EF\\u80FD\\u6BD4\\u9700\\u8981\\u53D1\\u9001\\u7684\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u5EA6\\u8981\\u5C0F\\u3002\\u56E0\\u6B64 DTLS \\u5FC5\\u987B\\u63D0\\u4F9B\\u4E00\\u5B9A\\u7684\\u4FE1\\u606F\\uFF0C\\u4EE5\\u652F\\u6301\\u5728\\u6570\\u636E\\u4E22\\u5931\\u3001\\u5305\\u91CD\\u6392\\u5E8F\\u6216\\u6709\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u4F7F\\u5F97\\u5BF9\\u7B49\\u7AEF(peer)\\u80FD\\u591F\\u91CD\\u65B0\\u6784\\u5EFA\\u4E00\\u6761\\u6B63\\u786E\\u7684 DTLS \\u8BB0\\u5F55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 00 - DTLS \\u5E8F\\u5217\\u53F7 0x0(0)\"},{\"Tag\":\"li\",\"content\":\"00 00 00 - \\u8868\\u660E\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u504F\\u79FB\\u91CF\\u4E3A 0x00(0) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 00 91 - \\u8868\\u660E\\u4E4B\\u540E\\u7684\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u957F\\u5EA6\\u4E3A 0x91(145) \\u5B57\\u8282\"}]},\"\\u5728\\u672C\\u6587\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u7684\\u957F\\u5EA6\\u8981\\u77ED\\u4E8E\\u4E00\\u4E2A UDP \\u6570\\u636E\\u62A5\\u7684\\u53EF\\u627F\\u8F7D\\u957F\\u5EA6\\uFF0C\\u56E0\\u6B64\\u504F\\u79FB\\u91CF\\u4E3A\\u96F6\\uFF0C\\u4E14\\u957F\\u5EA6\\u4E3A\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u3002\"]],[\"\\u5BA2\\u6237\\u7AEF\\u7248\\u672C(\\u5E9F\\u5F03)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"fe fd\"},[\"DTLS \\u7248\\u672C\\u7684\\u7F16\\u7801\\u65B9\\u5F0F\\u662F\\u5C06\\u534F\\u8BAE\\u7248\\u672C\\u5206\\u6210\\u51E0\\u4E2A\\u90E8\\u5206\\uFF0C\\u7136\\u540E\\u53D6\\u6BCF\\u4E2A\\u90E8\\u5206\\u7684\\u8865\\u7801\\u3002(\\u56E0\\u6B64 \\\\\"1.3\\\\\" \\u53D8\\u6210 {1, 3}\\uFF0C\\u53D8\\u6210\\u5B57\\u8282 0xFE 0xFC)\\u3002\\u8FD9\\u79CD\\u8865\\u7801\\u6280\\u672F\\u4F7F DTLS \\u7248\\u672C\\u4E0E TLS \\u7248\\u672C\\u6709\\u6240\\u5DEE\\u522B\\u3002\",\"\\u7531\\u4E8E\\u5DF2\\u7ECF\\u521B\\u5EFA\\u548C\\u90E8\\u7F72\\u7684\\u7F51\\u7EDC\\u4E2D\\u95F4\\u4EF6(middleboxes)\\u4E0D\\u5141\\u8BB8\\u5B83\\u4EEC\\u6240\\u4E0D\\u627F\\u8BA4\\u7684\\u534F\\u8BAE\\u7248\\u672C\\u901A\\u8FC7\\uFF0C\\u56E0\\u6B64\\u6240\\u6709 DTLS 1.3 \\u4F1A\\u8BDD\\u5728\\u672A\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u4E2D\\u90FD\\u4F1A\\u663E\\u793A\\u4E3A DTLS 1.2(0xFE 0xFD)\\u3002\\u6240\\u6709\\u7684 DTLS 1.3 \\u53CA\\u4EE5\\u4E0A\\u7248\\u672C\\u7684\\u4F1A\\u8BDD\\u9700\\u8981\\u901A\\u8FC7\\u540E\\u9762\\u63D0\\u5230\\u7684\\\\\"\\u652F\\u6301\\u7684\\u7248\\u672C\\\\\"\\u62D3\\u5C55\\u534F\\u5546\\u771F\\u5B9E\\u7248\\u672C\\u53F7\\u3002\"]],[\"\\u5BA2\\u6237\\u7AEF\\u968F\\u673A\\u6570\",{\"props\":{\"className\":\"bytes\"},\"content\":\"e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u7684 32 \\u5B57\\u8282\\u7684\\u968F\\u673A\\u6570\\u3002\\u8FD9\\u4E2A\\u6570\\u5C06\\u5728\\u4E4B\\u540E\\u7684\\u4F1A\\u8BDD\\u4E2D\\u4F7F\\u7528\\u3002\\u5728\\u672C\\u6587\\u7684\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6211\\u4EEC\\u6682\\u65F6\\u5C06\\u4E00\\u4E2A\\u65B9\\u4FBF\\u8BB0\\u5FC6\\u7684\\u5B57\\u7B26\\u4E32\\u5F53\\u4F5C\\u968F\\u673A\\u6570\\u3002\"]],[\"\\u4F1A\\u8BDD ID (\\u5E9F\\u5F03)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u8FD9\\u662F\\u4E00\\u4E2A\\u5E9F\\u5F03(legacy)\\u5B57\\u6BB5\\uFF0C\\u4E0D\\u5728 DTLS 1.3 \\u4E2D\\u4F7F\\u7528\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - 0 \\u5B57\\u8282\\u7684\\u4F1A\\u8BDD ID\"}]}]],[\"Cookie (\\u5E9F\\u5F03)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u8FD9\\u662F\\u4E00\\u4E2A\\u5E9F\\u5F03(legacy)\\u5B57\\u6BB5\\uFF0C\\u4E0D\\u5728 DTLS 1.3 \\u4E2D\\u4F7F\\u7528\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - 0 \\u5B57\\u8282\\u7684 Cookie\"}]}]],[\"\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 06 13 01 13 02 13 03\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E00\\u4E2A\\u6709\\u5E8F\\u7684\\u5217\\u8868\\uFF0C\\u4EE5\\u8BF4\\u660E\\u5B83\\u652F\\u6301\\u54EA\\u4E9B\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\\u8BE5\\u5217\\u8868\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u987A\\u5E8F\\u6392\\u5217\\u7684\\uFF0C\\u4EE5\\u6700\\u9AD8\\u504F\\u597D\\u4E3A\\u5148\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 06 - 6 \\u5B57\\u8282\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\\u6570\\u636E\"},{\"Tag\":\"li\",\"content\":\"13 01 - \\u4EE3\\u8868 TLS_AES_128_GCM_SHA256\"},{\"Tag\":\"li\",\"content\":\"13 02 - \\u4EE3\\u8868 TLS_AES_256_GCM_SHA384\"},{\"Tag\":\"li\",\"content\":\"13 03 - \\u4EE3\\u8868 TLS_CHACHA20_POLY1305_SHA256\"}]},{\"children\":[\"\\u5B8C\\u6574\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\\u5217\\u8868\\u8BF7\\u67E5\\u770B \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml\"},\"content\":\"IANA tls-parameters\"},\" \\u7684 TLS Cipher Suites \\u90E8\\u5206\\u3002\"]}]],[\"\\u538B\\u7F29\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"01 00\"},[{\"children\":[\"\\u4EE5\\u524D\\u7684 TLS \\u7248\\u672C\\u652F\\u6301\\u538B\\u7F29(\\u4EE5\\u53CA\\u5BF9\\u5E94\\u5EF6\\u4F38\\u51FA\\u7684 DTLS \\u7248\\u672C)\\uFF0C\\u8FD9\\u88AB\\u53D1\\u73B0\\u4F1A\\u6CC4\\u9732\\u52A0\\u5BC6\\u6570\\u636E\\u7684\\u4FE1\\u606F(\\u89C1 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/333314023\"},\"content\":\"CRIME/BREACH \\u653B\\u51FB\"},\")\\u3002\"]},\"TLS 1.3 (DTLS 1.3)\\u4E0D\\u518D\\u5141\\u8BB8\\u538B\\u7F29\\u3002\\u6240\\u4EE5\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u4E0D\\u4F1A\\u53D8\\u5316\\uFF1A\\u91C7\\u7528 \\\\\"null\\\\\" \\u538B\\u7F29\\u7B97\\u6CD5\\uFF0C\\u5BF9\\u6570\\u636E\\u4E0D\\u505A\\u4EFB\\u4F55\\u6539\\u53D8\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"01 - 1 \\u5B57\\u8282\\u7684\\u538B\\u7F29\\u7B97\\u6CD5\\u957F\\u5EA6\"},{\"Tag\":\"li\",\"content\":\"00 - \\u4EE3\\u8868 \\\\\"\\u6CA1\\u6709\\\\\"(null) \\u538B\\u7F29\\u7B97\\u6CD5\"}]}]],[\"\\u6269\\u5C55\\u7684\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 61\"},[\"\\u5BA2\\u6237\\u7AEF\\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A\\u53EF\\u9009\\u7684\\u6269\\u5C55\\u5217\\u8868\\uFF0C\\u670D\\u52A1\\u5668\\u53EF\\u4EE5\\u6839\\u636E\\u5B83\\u6765\\u91C7\\u53D6\\u67D0\\u4E9B\\u884C\\u52A8\\u6216\\u542F\\u7528\\u67D0\\u4E9B\\u7279\\u6027\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 61 - \\u6269\\u5C55\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u4E3A 0x61(97) \\u5B57\\u8282\"}]},\"\\u6BCF\\u4E2A\\u6269\\u5C55\\u5C06\\u4EE5\\u4E24\\u4E2A\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u54EA\\u4E2A\\u6269\\u5C55\\u3002\\u7136\\u540E\\u662F\\u4E24\\u4E2A\\u5B57\\u8282\\u7684\\u5185\\u5BB9\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u6700\\u540E\\u662F\\u6269\\u5C55\\u7684\\u5177\\u4F53\\u5185\\u5BB9\\u3002\"]],[\"\\u6269\\u5C55 - \\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868(Key Share)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 33 00 26 00 24 00 1d 00 20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54\"},[\"\\u5BA2\\u6237\\u7AEF\\u4F1A\\u7ED9\\u67D0\\u4E9B\\u5B83\\u8BA4\\u4E3A\\u670D\\u52A1\\u5668\\u4E5F\\u4F1A\\u652F\\u6301\\u7684\\u7B97\\u6CD5\\u53D1\\u9001\\u5BF9\\u5E94\\u7684\\u77ED\\u6682\\u7684\\u516C\\u94A5\\u3002\\u8FD9\\u5141\\u8BB8\\u5728 ClientHello \\u548C ServerHello \\u6D88\\u606F\\u4E4B\\u540E\\u7684\\u5176\\u4F59\\u63E1\\u624B\\u8BB0\\u5F55\\u88AB\\u52A0\\u5BC6\\u3002\\u800C\\u4E0D\\u7528\\u50CF\\u4EE5\\u524D\\u7684\\u534F\\u8BAE\\u7248\\u672C\\uFF0C\\u4EE5\\u900F\\u660E\\u7684\\u65B9\\u5F0F\\u53D1\\u9001\\u63E1\\u624B\\u8BB0\\u5F55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 33 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 26 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x26(38) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 24 - \\u7B97\\u6CD5\\u516C\\u94A5\\u5217\\u8868\\u957F\\u5EA6\\u4E3A 0x24(36) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 1d - \\u4EE3\\u8868 x25519 \\u7B97\\u6CD5(\\u4F8B\\u5B50\\u4E2D\\u4E3A\\u901A\\u8FC7 curve25519 \\u7B97\\u6CD5\\u8FDB\\u884C\\u5BC6\\u94A5\\u4EA4\\u6362)\"},{\"Tag\":\"li\",\"content\":\"00 20 - \\u516C\\u94A5\\u957F\\u5EA6\\u4E3A 0x20(32) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"35 80 ... 62 54 - \\\\\"\\u5BA2\\u6237\\u7AEF\\u51C6\\u5907\\u5BC6\\u94A5\\u4EA4\\u6362\\\\\" \\u6B65\\u9AA4\\u4E2D\\u751F\\u6210\\u7684\\u516C\\u94A5\"}]}]],[\"\\u6269\\u5C55 - \\u652F\\u6301\\u7684\\u7248\\u672C\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 2b 00 03 02 fe fc\"},[\"\\u5BA2\\u6237\\u7AEF\\u8868\\u660E\\u5176\\u652F\\u6301 DTLS 1.3\\u3002\\u7531\\u4E8E\\u517C\\u5BB9\\u6027\\u7684\\u539F\\u56E0\\uFF0C\\u8FD9\\u88AB\\u653E\\u5728\\u4E00\\u4E2A\\u6269\\u5C55\\u4E2D\\uFF0C\\u800C\\u4E0D\\u662F\\u4E0A\\u9762\\u7684\\u5BA2\\u6237\\u7AEF\\u7248\\u672C\\u5B57\\u6BB5\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 2b - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u652F\\u6301\\u7684\\u7248\\u672C\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 03 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x03(3) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"02 - DTLS \\u7248\\u672C\\u957F\\u5EA6\\u4E3A 0x02(2) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"fe fc - \\u4EE3\\u8868 DTLS 1.3\"}]}]],[\"\\u6269\\u5C55 - \\u7B7E\\u540D\\u7B97\\u6CD5\\u5217\\u8868\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 0d 00 20 00 1e 06 03 05 03 04 03 02 03 08 06 08 0b 08 05 08 0a 08 04 08 09 06 01 05 01 04 01 03 01 02 01\"},[\"\\u8FD9\\u4E2A\\u6269\\u5C55\\u8868\\u793A\\u5BA2\\u6237\\u7AEF\\u652F\\u6301\\u54EA\\u4E9B\\u7B7E\\u540D\\u7B97\\u6CD5\\u3002\\u8FD9\\u53EF\\u80FD\\u4F1A\\u5F71\\u54CD\\u5230\\u670D\\u52A1\\u5668\\u63D0\\u4EA4\\u7ED9\\u5BA2\\u6237\\u7AEF\\u7684\\u8BC1\\u4E66\\uFF0C\\u4EE5\\u53CA\\u670D\\u52A1\\u5668\\u5728 CertificateVerify \\u8BB0\\u5F55\\u4E2D\\u53D1\\u9001\\u7684\\u7B7E\\u540D\\u3002\",\"\\u8FD9\\u4E2A\\u5217\\u8868\\u540C\\u6837\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u964D\\u5E8F\\u6392\\u5217\\u7684\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 0d - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u7B7E\\u540D\\u7B97\\u6CD5\\u5217\\u8868\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 20 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x20(32) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 1e - \\u7B97\\u6CD5\\u5217\\u8868\\u957F\\u5EA6\\u4E3A 0x1e(30) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"06 03 - \\u4EE3\\u8868 ECDSA-SECP512r1-SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"05 03 - \\u4EE3\\u8868 ECDSA-SECP384r1-SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"04 03 - \\u4EE3\\u8868 ECDSA-SECP256r1-SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"02 03 - \\u4EE3\\u8868 ECDSA-SHA1 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 06 - \\u4EE3\\u8868 RSA-PSS-RSAE-SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 0b - \\u4EE3\\u8868 RSA-PSS-PSS-SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 05 - \\u4EE3\\u8868 RSA-PSS-RSAE-SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 0a - \\u4EE3\\u8868 RSA-PSS-PSS-SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 04 - \\u4EE3\\u8868 RSA-PSS-RSAE-SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"08 09 - \\u4EE3\\u8868 RSA-PSS-PSS-SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"06 01 - \\u4EE3\\u8868 RSA-PKCS1-SHA512 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"05 01 - \\u4EE3\\u8868 RSA-PKCS1-SHA384 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"04 01 - \\u4EE3\\u8868 RSA-PKCS1-SHA256 \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"03 01 - \\u4EE3\\u8868 SHA224-RSA \\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"02 01 - \\u4EE3\\u8868 RSA-PKCS1-SHA1 \\u7B97\\u6CD5\"}]}]],[\"\\u6269\\u5C55 - Encrypt-then-MAC\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 16 00 00\"},[{\"children\":[\"\\u5BA2\\u6237\\u7AEF\\u8868\\u793A\\u5176\\u652F\\u6301 EtM\\u3002EtM \\u53EF\\u4EE5\\u9632\\u6B62\\u65E9\\u671F\\u7248\\u672C\\u7684 TLS \\u548C DTLS \\u7684\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://iacr.org/archive/crypto2001/21390309.pdf\"},\"content\":\"\\u67D0\\u4E9B\\u6F0F\\u6D1E\"},\"\\u3002\\u5728 DTLS 1.3 \\u4E2D\\uFF0C\\u8FD9\\u4E2A\\u673A\\u5236\\u59CB\\u7EC8\\u88AB\\u5F00\\u542F\\uFF0C\\u56E0\\u6B64\\u8FD9\\u4E2A\\u6269\\u5C55\\u5728\\u4F1A\\u8BDD\\u4E2D\\u6CA1\\u6709\\u5F71\\u54CD\\u3002\"]},{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 16 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"EtM\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 00 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x00(0) \\u5B57\\u8282 \"}]}]],[\"\\u6269\\u5C55 - \\u652F\\u6301\\u7684\\u7EC4\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 0a 00 04 00 02 00 1d\"},[\"(\\u4F8B\\u5B50\\u4E2D\\u7684)\\u5BA2\\u6237\\u7AEF\\u8868\\u793A\\u5B83\\u652F\\u6301\\u4E00\\u79CD\\u7C7B\\u578B\\u7684\\u692D\\u5706\\u66F2\\u7EBF\\u7B97\\u6CD5(ECC)\\u3002\\u4E3A\\u4E86\\u4F7F\\u8FD9\\u4E2A\\u6269\\u5C55\\u66F4\\u52A0\\u901A\\u7528\\uFF0C\\u672A\\u6765\\u53EF\\u4EE5\\u652F\\u6301\\u5176\\u4ED6\\u7684\\u5BC6\\u7801\\u5B66\\u7C7B\\u578B\\uFF0C\\u56E0\\u6B64\\u79F0\\u8FD9\\u4E9B\\u4E3A \\\\\"\\u652F\\u6301\\u7684\\u7EC4\\\\\" \\u800C\\u4E0D\\u662F \\\\\"\\u652F\\u6301\\u7684\\u66F2\\u7EBF\\\\\"\\u3002\",\"\\u8FD9\\u4E2A\\u5217\\u8868\\u540C\\u6837\\u662F\\u6309\\u7167\\u5BA2\\u6237\\u7AEF\\u7684\\u504F\\u597D\\u964D\\u5E8F\\u6392\\u5217\\u7684\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 0a - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u652F\\u6301\\u7684\\u7EC4\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 04 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x04(4) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 02 - \\u66F2\\u7EBF\\u5217\\u8868\\u6761\\u76EE\\u957F\\u5EA6\\u4E3A 0x02(2) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 1d - \\u4EE3\\u8868 x25519 \\u66F2\\u7EBF\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=clientHelloDatagram.d1d7f0b9.js.map\n","[\n  \"DTLS 加密会话以 \\\"ClientHello\\\" 开始。客户端提供的信息包括以下内容：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"客户端随机数(用于之后的握手过程)\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"一个客户端支持的有序的加解密算法数组\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"用于密钥交换的公钥\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"客户端支持的协议版本列表\"\n      }\n    ]\n  },\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"DTLS 数据头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"16 fe fd 00 00 00 00 00 00 00 00 00 9d\"\n          },\n          [\n            \"每个 DTLS 记录都以一个 type、一些序列信息(seq info)和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 表示 DTLS 记录类型 0x16(22, Handshake)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"fe fd - 协议版本 (DTLS 1.2, 细节见下文)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 密钥序列指示(key epoch，每次密钥更新时都会递增)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 00 00 00 00 - DTLS 序列号 0x0(0)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 9d - 紧接着的数组载荷长度 0x9D(157) 字节\"\n                }\n              ]\n            },\n            \"DTLS 版本的编码方式是将协议版本分成几个部分，然后取每个部分的补码。(因此 \\\"1.3\\\" 变成 {1, 3}，变成字节 0xFE 0xFC)。这种补码技术使 DTLS 版本与 TLS 版本有所差别。\",\n            \"由于已经创建和部署的网络中间件(middleboxes)不允许它们所不承认的协议版本通过，因此所有 DTLS 1.3 会话在未加密的记录中都会显示为 DTLS 1.2(0xFE 0xFD)。\"\n          ]\n        ],\n        [\n          \"TLS 握手记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"01 00 00 91\"\n          },\n          [\n            \"每个 TLS 握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 握手消息类型 0x01 (ClientHello)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 91 - 紧接着的握手消息数据的长度 0x91 (145) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"用于重建握手顺序的信息(Handshake Reconstruction Data)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 00 00 00 00 00 00 91\"\n          },\n          [\n            \"因为 UDP (或其他数据报协议)不保证交付或排序，而且数据报的长度可能比需要发送的握手记录长度要小。因此 DTLS 必须提供一定的信息，以支持在数据丢失、包重排序或有记录碎片的情况下，使得对等端(peer)能够重新构建一条正确的 DTLS 记录。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - DTLS 序列号 0x0(0)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 00 - 表明记录碎片的偏移量为 0x00(0) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 91 - 表明之后的记录碎片的长度为 0x91(145) 字节\"\n                }\n              ]\n            },\n            \"在本文例子中，整个握手记录的长度要短于一个 UDP 数据报的可承载长度，因此偏移量为零，且长度为整个握手记录长。\"\n          ]\n        ],\n        [\n          \"客户端版本(废弃)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"fe fd\"\n          },\n          [\n            \"DTLS 版本的编码方式是将协议版本分成几个部分，然后取每个部分的补码。(因此 \\\"1.3\\\" 变成 {1, 3}，变成字节 0xFE 0xFC)。这种补码技术使 DTLS 版本与 TLS 版本有所差别。\",\n            \"由于已经创建和部署的网络中间件(middleboxes)不允许它们所不承认的协议版本通过，因此所有 DTLS 1.3 会话在未加密的记录中都会显示为 DTLS 1.2(0xFE 0xFD)。所有的 DTLS 1.3 及以上版本的会话需要通过后面提到的\\\"支持的版本\\\"拓展协商真实版本号。\"\n          ]\n        ],\n        [\n          \"客户端随机数\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff\"\n          },\n          [\n            \"客户端提供的 32 字节的随机数。这个数将在之后的会话中使用。在本文的例子中，我们暂时将一个方便记忆的字符串当作随机数。\"\n          ]\n        ],\n        [\n          \"会话 ID (废弃)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"这是一个废弃(legacy)字段，不在 DTLS 1.3 中使用。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0 字节的会话 ID\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"Cookie (废弃)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"这是一个废弃(legacy)字段，不在 DTLS 1.3 中使用。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0 字节的 Cookie\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加解密算法列表\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 06 13 01 13 02 13 03\"\n          },\n          [\n            \"客户端提供一个有序的列表，以说明它支持哪些加解密算法进行加密。该列表是按照客户端的偏好顺序排列的，以最高偏好为先。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 06 - 6 字节的加解密算法列表数据\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"13 01 - 代表 TLS_AES_128_GCM_SHA256\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"13 02 - 代表 TLS_AES_256_GCM_SHA384\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"13 03 - 代表 TLS_CHACHA20_POLY1305_SHA256\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"完整加解密算法列表请查看 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml\"\n                  },\n                  \"content\": \"IANA tls-parameters\"\n                },\n                \" 的 TLS Cipher Suites 部分。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"压缩算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"01 00\"\n          },\n          [\n            {\n              \"children\": [\n                \"以前的 TLS 版本支持压缩(以及对应延伸出的 DTLS 版本)，这被发现会泄露加密数据的信息(见 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/333314023\"\n                  },\n                  \"content\": \"CRIME/BREACH 攻击\"\n                },\n                \")。\"\n              ]\n            },\n            \"TLS 1.3 (DTLS 1.3)不再允许压缩。所以这个字段不会变化：采用 \\\"null\\\" 压缩算法，对数据不做任何改变。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 - 1 字节的压缩算法长度\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 代表 \\\"没有\\\"(null) 压缩算法\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展的长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 61\"\n          },\n          [\n            \"客户端提供了一个可选的扩展列表，服务器可以根据它来采取某些行动或启用某些特性。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 61 - 扩展列表的长度为 0x61(97) 字节\"\n                }\n              ]\n            },\n            \"每个扩展将以两个字节开始，表明它是哪个扩展。然后是两个字节的内容长度字段，最后是扩展的具体内容。\"\n          ]\n        ],\n        [\n          \"扩展 - 算法公钥列表(Key Share)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 33 00 26 00 24 00 1d 00 20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54\"\n          },\n          [\n            \"客户端会给某些它认为服务器也会支持的算法发送对应的短暂的公钥。这允许在 ClientHello 和 ServerHello 消息之后的其余握手记录被加密。而不用像以前的协议版本，以透明的方式发送握手记录。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 33 - 表示这是 \\\"算法公钥列表\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 26 - 扩展信息长度为 0x26(38) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 24 - 算法公钥列表长度为 0x24(36) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 1d - 代表 x25519 算法(例子中为通过 curve25519 算法进行密钥交换)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 20 - 公钥长度为 0x20(32) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"35 80 ... 62 54 - \\\"客户端准备密钥交换\\\" 步骤中生成的公钥\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 支持的版本\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 2b 00 03 02 fe fc\"\n          },\n          [\n            \"客户端表明其支持 DTLS 1.3。由于兼容性的原因，这被放在一个扩展中，而不是上面的客户端版本字段。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 2b - 表示这是 \\\"支持的版本\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 03 - 扩展信息长度为 0x03(3) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 - DTLS 版本长度为 0x02(2) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"fe fc - 代表 DTLS 1.3\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 签名算法列表\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 0d 00 20 00 1e 06 03 05 03 04 03 02 03 08 06 08 0b 08 05 08 0a 08 04 08 09 06 01 05 01 04 01 03 01 02 01\"\n          },\n          [\n            \"这个扩展表示客户端支持哪些签名算法。这可能会影响到服务器提交给客户端的证书，以及服务器在 CertificateVerify 记录中发送的签名。\",\n            \"这个列表同样是按照客户端的偏好降序排列的。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0d - 表示这是 \\\"签名算法列表\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 20 - 扩展信息长度为 0x20(32) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 1e - 算法列表长度为 0x1e(30) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"06 03 - 代表 ECDSA-SECP512r1-SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 03 - 代表 ECDSA-SECP384r1-SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"04 03 - 代表 ECDSA-SECP256r1-SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 03 - 代表 ECDSA-SHA1 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 06 - 代表 RSA-PSS-RSAE-SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 0b - 代表 RSA-PSS-PSS-SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 05 - 代表 RSA-PSS-RSAE-SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 0a - 代表 RSA-PSS-PSS-SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 04 - 代表 RSA-PSS-RSAE-SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"08 09 - 代表 RSA-PSS-PSS-SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"06 01 - 代表 RSA-PKCS1-SHA512 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 01 - 代表 RSA-PKCS1-SHA384 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"04 01 - 代表 RSA-PKCS1-SHA256 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 01 - 代表 SHA224-RSA 算法\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 01 - 代表 RSA-PKCS1-SHA1 算法\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - Encrypt-then-MAC\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 16 00 00\"\n          },\n          [\n            {\n              \"children\": [\n                \"客户端表示其支持 EtM。EtM 可以防止早期版本的 TLS 和 DTLS 的\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://iacr.org/archive/crypto2001/21390309.pdf\"\n                  },\n                  \"content\": \"某些漏洞\"\n                },\n                \"。在 DTLS 1.3 中，这个机制始终被开启，因此这个扩展在会话中没有影响。\"\n              ]\n            },\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 16 - 表示这是 \\\"EtM\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 扩展信息长度为 0x00(0) 字节 \"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"扩展 - 支持的组\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 0a 00 04 00 02 00 1d\"\n          },\n          [\n            \"(例子中的)客户端表示它支持一种类型的椭圆曲线算法(ECC)。为了使这个扩展更加通用，未来可以支持其他的密码学类型，因此称这些为 \\\"支持的组\\\" 而不是 \\\"支持的曲线\\\"。\",\n            \"这个列表同样是按照客户端的偏好降序排列的。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 0a - 表示这是 \\\"支持的组\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 04 - 扩展信息长度为 0x04(4) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 02 - 曲线列表条目长度为 0x02(2) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 1d - 代表 x25519 曲线\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"clientHelloDatagram.d1d7f0b9.js.map"}