{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,2xG","sources":["<anon>","src/DTLS/serverApplicationDataDatagram.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"owv2y\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u7AEF\\u54CD\\u5E94\\u6570\\u636E\\uFF1A\\u5B57\\u7B26\\u4E32\\\\\"pong\\\\\"\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u5934\\u90E8\\u4FE1\\u606F\\u5B57\\u8282\",{\"props\":{\"className\":\"bytes\"},\"content\":\"2f\"},[\"\\u52A0\\u5BC6\\u7684 DTLS \\u6570\\u636E\\u5305\\u90FD\\u4EE5\\u4E00\\u4E2A \\\\\"\\u7EDF\\u4E00\\u7684\\u5934\\u90E8(unified header)\\\\\"\\u5F00\\u59CB\\u3002\\u5934\\u90E8\\u7684\\u7B2C\\u4E00\\u4E2A\\u5B57\\u8282\\u7ED9\\u51FA\\u4E86\\u5934\\u90E8\\u548C\\u6570\\u636E\\u5305\\u7684\\u7ED3\\u6784\\u4FE1\\u606F\\uFF0C\\u4EE5\\u53CA\\u89E3\\u5BC6\\u65F6\\u9700\\u8981\\u7684\\u4FE1\\u606F\\u3002\",\"\\u503C 0x2f \\u5177\\u6709\\u4EE5\\u4E0B\\u542B\\u4E49\\uFF1A\",{\"Tag\":\"Table\",\"props\":{\"headers\":[\"\",\"\\u503C\",\"\\u542B\\u4E49\"],\"data\":[[\"\\u9AD8\\u4F4D\",\"001\",\"\\u56FA\\u5B9A\\u4F4D\"],[\"\",\"0\",\"\\u5934\\u90E8\\u4E2D\\u4E0D\\u5B58\\u5728\\u8FDE\\u63A5 ID \\u5B57\\u6BB5(1\\u5219\\u5B58\\u5728)\"],[\"\",\"1\",\"\\u5E8F\\u5217\\u53F7\\u5728\\u5934\\u90E8\\u4E2D\\u5360 2 \\u5B57\\u8282\\u957F\"],[\"\",\"1\",\"\\u5934\\u90E8\\u4E2D\\u5B58\\u5728\\\\\"\\u8BB0\\u5F55\\u957F\\u5EA6\\\\\"\\u5B57\\u6BB5(0\\u5219\\u4E0D\\u5B58\\u5728)\"],[\"\\u4F4E\\u4F4D\",\"11\",\"\\u52A0\\u5BC6\\u5E8F\\u5217\\u6307\\u793A(Encryption epoch 3)\\uFF0C\\u73B0\\u5728\\u5BC6\\u94A5\\u662F\\u4F1A\\u8BDD\\u65F6\\u5BC6\\u94A5\"]]}}]],[\"\\u8BB0\\u5F55\\u5E8F\\u53F7\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u52A0\\u5BC6\"},\"content\":\"a2 58\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"00 01\"},[\"\\u8BB0\\u5F55\\u5E8F\\u53F7\\u662F\\u88AB\\u52A0\\u5BC6\\u4E86\\u7684\\uFF0C\\u7528\\u4EE5\\u9632\\u6B62\\u4E2D\\u95F4\\u4EF6\\u8BEF\\u89E3(interpreting)\\u6216\\u5E72\\u6270\\u6570\\u636E\\u5305\\u7684\\u6392\\u5E8F\\u3002\",\"\\u52A0\\u5BC6\\u662F\\u901A\\u8FC7\\u7528 \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u5E8F\\u53F7\\u4FDD\\u62A4\\u5BC6\\u94A5\\\\\" \\u5BF9\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u7684\\u6709\\u6548\\u8F7D\\u8377\\u6837\\u672C\\u8FDB\\u884C\\u52A0\\u5BC6\\uFF0C\\u7136\\u540E\\u5C06\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u4E2D\\u7684\\u67D0\\u4E9B\\u6BD4\\u7279\\u548C\\u5B57\\u8282\\u4E0E\\u6240\\u5F97\\u6570\\u636E\\u8FDB\\u884C XOR \\u5F97\\u5230\\u3002\",\"\\u5982\\u679C\\u8BF4\\u7684\\u4E0D\\u591F\\u8BE6\\u7EC6\\uFF0C\\u8FD9\\u91CC\\u6709\\u4E00\\u4E2A\\u5982\\u4F55\\u52A0\\u5BC6\\u7684\\u4F8B\\u5B50\\uFF1A\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### \\\\\"server record number key\\\\\" from application keys calc step above\\\\n$ key=57ba02596c6a1352d7fe8416c7e17d5a\\\\n### sample is taken from 16 bytes of payload starting 5 bytes into the record\\\\n$ sample=f5bd33f27b72780e351fa00703fb9f65\\\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 2 | xxd -p\\\\n\\\\na259\\\\n\\\\n### the above bytes are xor\\'d one-for-one into the bytes of the record number\"}}]],[\"\\u8BB0\\u5F55\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 15\"},[\"\\u6BCF\\u4E2A\\u8BB0\\u5F55\\u9664\\u975E\\u7ED9\\u51FA\\u8FD9\\u4E2A\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u5426\\u5219\\u5BF9\\u7B49\\u7AEF\\u5C06\\u8BA4\\u4E3A\\u6570\\u636E\\u62A5\\u5269\\u4F59\\u7684\\u6240\\u6709\\u5B57\\u8282\\u90FD\\u662F\\u540C\\u4E00\\u4E2A\\u8BB0\\u5F55\\u7684\\u771F\\u5B9E\\u8F7D\\u8377\\u3002\\u6709\\u4E86\\u8FD9\\u4E00\\u5B57\\u6BB5\\uFF0C\\u5219\\u5728\\u4E00\\u4E2A\\u6570\\u636E\\u62A5\\u4E2D\\u53EF\\u4EE5\\u53D1\\u9001\\u597D\\u51E0\\u4E2A DTLS \\u8BB0\\u5F55(\\u5C3D\\u7BA1\\u4F8B\\u5B50\\u4E2D\\u7684\\u8FDE\\u63A5\\u6CA1\\u6709\\u5229\\u7528\\u8FD9\\u4E2A\\u4F18\\u52BF)\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 15 - \\u8868\\u793A DTLS \\u8BB0\\u5F55\\u957F\\u5EA6\\u4E3A 0x15(21) \\u5B57\\u8282\"}]}]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\",\"title\":\"\\u88AB\\\\\"\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\"\\u52A0\\u5BC6\"},\"content\":\"f5 bd 33 f2 7b\"},[\"\\u8FD9\\u4E9B\\u6570\\u636E\\u4F7F\\u7528\\u670D\\u52A1\\u5668\\u7AEF\\u7684\\\\\"\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\"\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\"]],[\"AEAD \\u9274\\u522B\\u6807\\u7B7E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"72 78 0e 35 1f a0 07 03 fb 9f 65 8c 68 9f 95 ae\"},[{\"children\":[\"\\u8FD9\\u662F \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD \\u7B97\\u6CD5\"},\"\\u7684\\u9274\\u522B\\u6807\\u7B7E\\uFF0C\\u786E\\u8BA4\\u52A0\\u5BC6\\u6570\\u636E\\u548C\\u8BB0\\u5F55\\u5934\\u7684\\u5B8C\\u6574\\u6027\\u3002\\u5B83\\u7531\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4EA7\\u751F\\uFF0C\\u5E76\\u7531\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6D88\\u8017\\u3002\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u4F1A\\u8BDD\\u5BC6\\u94A5\\u8BA1\\u7B97\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u521D\\u59CB\\u5BC6\\u94A5\\u548C\\u521D\\u59CB\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002IVs \\u901A\\u8FC7\\u5BC6\\u94A5\\u548C\\u5DF2\\u7ECF\\u7528\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u957F\\u5EA6\\u8FDB\\u884C\\u5F02\\u6216\\u64CD\\u4F5C\\u751F\\u6210\\u3002\\u5728\\u4F8B\\u5B50\\u4E2D IV \\u4E3A 1\\u3002\",\"\\u6570\\u636E\\u5305\\u5F00\\u5934\\u7684 5 \\u5B57\\u8282(\\u8BB0\\u5F55\\u5934)\\u8FD8\\u4F1A\\u4F5C\\u4E3A\\u89E3\\u5BC6\\u8FC7\\u7A0B\\u89E3\\u5BC6\\u6210\\u529F\\u65F6\\u5FC5\\u987B\\u6EE1\\u8DB3\\u7684\\u8BA4\\u8BC1\\u6761\\u4EF6\\u3002\",{\"children\":[\"openssl \\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u8FD8\\u4E0D\\u652F\\u6301 AEAD \\u7B97\\u6CD5\\u52A0\\u89E3\\u5BC6(AEAD ciphers)\\uFF0C\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528\\u4F5C\\u8005\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u6765\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://dtls.xargs.org/files/aes_128_gcm_decrypt.c\"},\"content\":\"\\u89E3\\u5BC6\"},\"\\u548C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://dtls.xargs.org/files/aes_128_gcm_encrypt.c\"},\"content\":\"\\u52A0\\u5BC6\"},\"\\u8FD9\\u4E9B\\u6570\\u636E\\u3002\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Server Application Keys Calc\\\\\" step\\\\n$ key=2b65fffbbc8189474aa2003c43c32d4d\\\\n$ iv=582f5a11bdaf973fe3ffeb4e\\\\n### from this record\\\\n$ recdata=2f00010015\\\\n$ authtag=72780e351fa00703fb9f658c689f95ae\\\\n$ recordnum=1\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\\\n\\\\n00000000  70 6f 6e 67 17                                    |pong.|\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u6570\\u636E\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"70 6f 6e 67\"},[\"\\u5B57\\u7B26\\u4E32\\\\\"pong\\\\\"\"]],[\"\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"17\"},[\"\\u6BCF\\u4E00\\u4E2A\\u52A0\\u5BC6\\u7684 DTLS 1.3 \\u8BB0\\u5F55\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u5B57\\u8282\\u90FD\\u9700\\u8981\\u8868\\u660E\\u5176\\u771F\\u6B63\\u7684\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"17 - \\u7C7B\\u578B\\u4E3A 0x17(23), \\u4F1A\\u8BDD\\u6570\\u636E\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverApplicationDataDatagram.1503bc8c.js.map\n","[\n  \"服务器端响应数据：字符串\\\"pong\\\"\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"头部信息字节\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"2f\"\n          },\n          [\n            \"加密的 DTLS 数据包都以一个 \\\"统一的头部(unified header)\\\"开始。头部的第一个字节给出了头部和数据包的结构信息，以及解密时需要的信息。\",\n            \"值 0x2f 具有以下含义：\",\n            {\n              \"Tag\": \"Table\",\n              \"props\": {\n                \"headers\": [\"\", \"值\", \"含义\"],\n                \"data\": [\n                  [\"高位\", \"001\", \"固定位\"],\n                  [\"\", \"0\", \"头部中不存在连接 ID 字段(1则存在)\"],\n                  [\"\", \"1\", \"序列号在头部中占 2 字节长\"],\n                  [\"\", \"1\", \"头部中存在\\\"记录长度\\\"字段(0则不存在)\"],\n                  [\n                    \"低位\",\n                    \"11\",\n                    \"加密序列指示(Encryption epoch 3)，现在密钥是会话时密钥\"\n                  ]\n                ]\n              }\n            }\n          ]\n        ],\n        [\n          \"记录序号\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被加密\"\n            },\n            \"content\": \"a2 58\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"00 01\"\n          },\n          [\n            \"记录序号是被加密了的，用以防止中间件误解(interpreting)或干扰数据包的排序。\",\n            \"加密是通过用 \\\"服务器端序号保护密钥\\\" 对每个数据包的有效载荷样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行 XOR 得到。\",\n            \"如果说的不够详细，这里有一个如何加密的例子：\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### \\\"server record number key\\\" from application keys calc step above\\n$ key=57ba02596c6a1352d7fe8416c7e17d5a\\n### sample is taken from 16 bytes of payload starting 5 bytes into the record\\n$ sample=f5bd33f27b72780e351fa00703fb9f65\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 2 | xxd -p\\n\\na259\\n\\n### the above bytes are xor'd one-for-one into the bytes of the record number\"\n              }\n            }\n          ]\n        ],\n        [\n          \"记录长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 15\"\n          },\n          [\n            \"每个记录除非给出这个长度字段，否则对等端将认为数据报剩余的所有字节都是同一个记录的真实载荷。有了这一字段，则在一个数据报中可以发送好几个 DTLS 记录(尽管例子中的连接没有利用这个优势)。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 15 - 表示 DTLS 记录长度为 0x15(21) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\",\n              \"title\": \"被\\\"会话密钥\\\"加密\"\n            },\n            \"content\": \"f5 bd 33 f2 7b\"\n          },\n          [\"这些数据使用服务器端的\\\"会话密钥\\\"进行加密。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"72 78 0e 35 1f a0 07 03 fb 9f 65 8c 68 9f 95 ae\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，确认加密数据和记录头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端会话密钥计算\\\" 步骤中产生的初始密钥和初始向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 1。\",\n            \"数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://dtls.xargs.org/files/aes_128_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://dtls.xargs.org/files/aes_128_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Server Application Keys Calc\\\" step\\n$ key=2b65fffbbc8189474aa2003c43c32d4d\\n$ iv=582f5a11bdaf973fe3ffeb4e\\n### from this record\\n$ recdata=2f00010015\\n$ authtag=72780e351fa00703fb9f658c689f95ae\\n$ recordnum=1\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\n\\n00000000  70 6f 6e 67 17                                    |pong.|\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"数据\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"70 6f 6e 67\"\n          },\n          [\"字符串\\\"pong\\\"\"]\n        ],\n        [\n          \"记录类型\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"17\"\n          },\n          [\n            \"每一个加密的 DTLS 1.3 记录的最后一个字节都需要表明其真正的记录类型\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"17 - 类型为 0x17(23), 会话数据\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverApplicationDataDatagram.1503bc8c.js.map"}