{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,yoD","sources":["<anon>","src/QUIC/clientTLSHandshakeFinished.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1UvAc\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u4E3A\\u4E86\\u9A8C\\u8BC1\\u63E1\\u624B\\u6210\\u529F\\u4E14\\u6CA1\\u6709\\u88AB\\u7BE1\\u6539\\u8FC7\\uFF0C\\u5BA2\\u6237\\u7AEF\\u548C\\u670D\\u52A1\\u5668\\u7AEF\\u4E00\\u6837\\uFF0C\\u9700\\u8981\\u521B\\u5EFA\\u4E00\\u4E9B\\u9A8C\\u8BC1\\u6570\\u636E\\u7ED9\\u670D\\u52A1\\u5668\\u7AEF\\u786E\\u8BA4\\u3002\\u9A8C\\u8BC1\\u6570\\u636E\\u662F\\u57FA\\u4E8E\\u6240\\u6709\\u63E1\\u624B\\u4FE1\\u606F\\u7684\\u54C8\\u5E0C\\u503C\\u8BA1\\u7B97\\u5F97\\u5230\\u3002\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"TLS \\u63E1\\u624B\\u6D88\\u606F\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"14 00 00 20\"},[\"\\u6BCF\\u4E2A TLS \\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"14 - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x14 (finished)\"},{\"Tag\":\"li\",\"content\":\"00 00 20 - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0x20 (32) \\u5B57\\u8282\"}]}]],[\"\\u9A8C\\u8BC1\\u6570\\u636E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"50 ff b0 c1 a4 25 c6 41 89 1c 98 3d 12 67 26 02 6d 3d b2 8e a3 51 0b dc 20 54 fc d6 37 ed ca cc\"},[\"\\u4F7F\\u7528 \\\\\"\\u5BA2\\u6237\\u7AEF\\u751F\\u6210\\u63E1\\u624B\\u5BC6\\u94A5\\\\\" \\u6B65\\u9AA4\\u4E2D\\u7684\\u5BA2\\u6237\\u7AEF\\u5BC6\\u6587\\u548C\\u5728\\u8FD9\\u4E4B\\u524D\\u7684\\u6BCF\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55(ClientHello \\u5230 \\u670D\\u52A1\\u5668\\u63E1\\u624B\\u5B8C\\u6210)\\u7684 SHA256 \\u54C8\\u5E0C\\u503C\\u751F\\u6210\\u3002\",{\"Tag\":\"pre\",\"children\":[{\"Tag\":\"code\",\"props\":{\"className\":\"longboi\"},\"content\":\"finished_key = HKDF-Expand-Label(key: client_secret, label: \\\\\"finished\\\\\", ctx: \\\\\"\\\\\", len: 32)\\\\nfinished_hash = SHA256(ClientHello ... ServerFinished)\\\\nverify_data = HMAC-SHA256(key: finished_key, msg: finished_hash)\"}]},{\"children\":[\"\\u5728\\u547D\\u4EE4\\u884C\\u4E2D\\u4F7F\\u7528\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://quic.xargs.org/files/hkdf.sh\"},\"content\":\"\\u539F\\u4F5C\\u8005\\u5236\\u4F5C\\u7684 HKDF \\u547D\\u4EE4\\u884C\\u811A\\u672C\"},\"\\uFF0C\\u4F60\\u4E5F\\u53EF\\u4EE5\\u81EA\\u5DF1\\u8BD5\\u8BD5\\uFF1A\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### find the hash of the conversation to this point, excluding\\\\n### QUIC frame headers\\\\n$ fin_hash=$(cat crypto_clienthello crypto_serverhello crypto_extensions   crypto_cert crypto_certverify crypto_s_finished | openssl sha256)\\\\n$ cht_secret=b8902ab5f9fe52fdec3aea54e9293e4b8eabf955fcd88536bf44b8b584f14982\\\\n$ fin_key=$(./hkdf expandlabel $cht_secret \\\\\"finished\\\\\" \\\\\"\\\\\" 32)\\\\n$ echo $fin_hash | xxd -r -p     | openssl dgst -sha256 -mac HMAC -macopt hexkey:$fin_key\\\\n\\\\n50ffb0c1a425c641891c983d126726026d3db28ea3510bdc2054fcd637edcacc\"}}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=clientTLSHandshakeFinished.e758af37.js.map\n","[\n  \"为了验证握手成功且没有被篡改过，客户端和服务器端一样，需要创建一些验证数据给服务器端确认。验证数据是基于所有握手信息的哈希值计算得到。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"TLS 握手消息头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"14 00 00 20\"\n          },\n          [\n            \"每个 TLS 握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"14 - 握手消息类型 0x14 (finished)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 20 - 紧接着的握手消息数据的长度 0x20 (32) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"验证数据\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"50 ff b0 c1 a4 25 c6 41 89 1c 98 3d 12 67 26 02 6d 3d b2 8e a3 51 0b dc 20 54 fc d6 37 ed ca cc\"\n          },\n          [\n            \"使用 \\\"客户端生成握手密钥\\\" 步骤中的客户端密文和在这之前的每个握手记录(ClientHello 到 服务器握手完成)的 SHA256 哈希值生成。\",\n            {\n              \"Tag\": \"pre\",\n              \"children\": [\n                {\n                  \"Tag\": \"code\",\n                  \"props\": { \"className\": \"longboi\" },\n                  \"content\": \"finished_key = HKDF-Expand-Label(key: client_secret, label: \\\"finished\\\", ctx: \\\"\\\", len: 32)\\nfinished_hash = SHA256(ClientHello ... ServerFinished)\\nverify_data = HMAC-SHA256(key: finished_key, msg: finished_hash)\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"在命令行中使用\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": { \"href\": \"https://quic.xargs.org/files/hkdf.sh\" },\n                  \"content\": \"原作者制作的 HKDF 命令行脚本\"\n                },\n                \"，你也可以自己试试：\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### find the hash of the conversation to this point, excluding\\n### QUIC frame headers\\n$ fin_hash=$(cat crypto_clienthello crypto_serverhello crypto_extensions   crypto_cert crypto_certverify crypto_s_finished | openssl sha256)\\n$ cht_secret=b8902ab5f9fe52fdec3aea54e9293e4b8eabf955fcd88536bf44b8b584f14982\\n$ fin_key=$(./hkdf expandlabel $cht_secret \\\"finished\\\" \\\"\\\" 32)\\n$ echo $fin_hash | xxd -r -p     | openssl dgst -sha256 -mac HMAC -macopt hexkey:$fin_key\\n\\n50ffb0c1a425c641891c983d126726026d3db28ea3510bdc2054fcd637edcacc\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"clientTLSHandshakeFinished.e758af37.js.map"}