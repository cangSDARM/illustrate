(0,globalThis.parcelRequire7f38.register)("1UvAc",function(e,n){e.exports=JSON.parse('["为了验证握手成功且没有被篡改过，客户端和服务器端一样，需要创建一些验证数据给服务器端确认。验证数据是基于所有握手信息的哈希值计算得到。",{"Tag":"AnnotationToggler"},{"Tag":"Annotations","props":{"type":"record-data","data":[["TLS 握手消息头",{"props":{"className":"bytes"},"content":"14 00 00 20"},["每个 TLS 握手消息都以一个 type 和一个 len 开始。",{"Tag":"ul","children":[{"Tag":"li","content":"14 - 握手消息类型 0x14 (finished)"},{"Tag":"li","content":"00 00 20 - 紧接着的握手消息数据的长度 0x20 (32) 字节"}]}]],["验证数据",{"props":{"className":"bytes"},"content":"50 ff b0 c1 a4 25 c6 41 89 1c 98 3d 12 67 26 02 6d 3d b2 8e a3 51 0b dc 20 54 fc d6 37 ed ca cc"},["使用 \\"客户端生成握手密钥\\" 步骤中的客户端密文和在这之前的每个握手记录(ClientHello 到 服务器握手完成)的 SHA256 哈希值生成。",{"Tag":"pre","children":[{"Tag":"code","props":{"className":"longboi"},"content":"finished_key = HKDF-Expand-Label(key: client_secret, label: \\"finished\\", ctx: \\"\\", len: 32)\\nfinished_hash = SHA256(ClientHello ... ServerFinished)\\nverify_data = HMAC-SHA256(key: finished_key, msg: finished_hash)"}]},{"children":["在命令行中使用",{"Tag":"a","props":{"href":"https://quic.xargs.org/files/hkdf.sh"},"content":"原作者制作的 HKDF 命令行脚本"},"，你也可以自己试试："]},{"Tag":"CodeSample","props":{"code":"### find the hash of the conversation to this point, excluding\\n### QUIC frame headers\\n$ fin_hash=$(cat crypto_clienthello crypto_serverhello crypto_extensions   crypto_cert crypto_certverify crypto_s_finished | openssl sha256)\\n$ cht_secret=b8902ab5f9fe52fdec3aea54e9293e4b8eabf955fcd88536bf44b8b584f14982\\n$ fin_key=$(./hkdf expandlabel $cht_secret \\"finished\\" \\"\\" 32)\\n$ echo $fin_hash | xxd -r -p     | openssl dgst -sha256 -mac HMAC -macopt hexkey:$fin_key\\n\\n50ffb0c1a425c641891c983d126726026d3db28ea3510bdc2054fcd637edcacc"}}]]]}}]')});
//# sourceMappingURL=clientTLSHandshakeFinished.e758af37.js.map
