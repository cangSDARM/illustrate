{"mappings":"mMAAAA,EAAAC,QAAiBC,KAAKC,MAAM,u2I","sources":["src/DTLS/serverApplicationKeysCalc.json"],"sourcesContent":["[\n  \"服务器端现在可以计算应用会话时的密钥了。在这个计算中，服务器使用了以下信息：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端密文(之前准备握手密钥时生成)\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"ClientHello 到 服务器握手结束 所有握手时包的 SHA256 哈希值(哈希值的输入不包括明文的记录头部、DTLS 特有的记录头以及最后 1 字节的记录类型)\"\n      }\n    ]\n  },\n  \"32 字节的 \\\"handshake_hash\\\" 最终值是：\",\n  {\n    \"Tag\": \"pre\",\n    \"props\": {\n      \"className\": \"ind2\"\n    },\n    \"children\": [\n      {\n        \"Tag\": \"code\",\n        \"props\": { \"className\": \"longboi\" },\n        \"content\": \"77ff5eee528abc269960b0ea316eb8578dc8325d86ec1336ffe4b2941e26d82b\"\n      }\n    ]\n  },\n  {\n    \"Tag\": \"CodeSample\",\n    \"props\": {\n      \"code\": \"$ (\\n  cat record-chello  | perl -0777 -pe 's/.{13}(.{4}).{8}/$1/';\\n  cat record-shello  | perl -0777 -pe 's/.{13}(.{4}).{8}/$1/';\\n  cat record-encext  | perl -0777 -pe 's/(.{4}).{8}(.*).$/$1$2/s';\\n  cat record-cert    | perl -0777 -pe 's/(.{4}).{8}(.*).$/$1$2/s';\\n  cat record-cverify | perl -0777 -pe 's/(.{4}).{8}(.*).$/$1$2/s';\\n  cat record-sfin    | perl -0777 -pe 's/(.{4}).{8}(.*).$/$1$2/s';\\n  )| openssl sha256\\n\\n77ff5eee528abc269960b0ea316eb8578dc8325d86ec1336ffe4b2941e26d82b\"\n    }\n  },\n  \"然后，我们将哈希值和共享的签名信息进行一些密钥派生操作(key derivation operations)，以防止可能的攻击：\",\n  {\n    \"Tag\": \"pre\",\n    \"children\": [\n      {\n        \"Tag\": \"code\",\n        \"props\": { \"className\": \"longboi\" },\n        \"content\": \"empty_hash = SHA256(\\\"\\\")\\nderived_secret = HKDF-Expand-Label(key: handshake_secret, label: \\\"derived\\\", ctx: empty_hash, len: 32)\\nmaster_secret = HKDF-Extract(salt: derived_secret, key: 00...)\\nclient_secret = HKDF-Expand-Label(key: master_secret, label: \\\"c ap traffic\\\", ctx: handshake_hash, len: 32)\\nserver_secret = HKDF-Expand-Label(key: master_secret, label: \\\"s ap traffic\\\", ctx: handshake_hash, len: 32)\\nclient_application_key = HKDF-Expand-Label(key: client_secret, label: \\\"key\\\", ctx: \\\"\\\", len: 16)\\nserver_application_key = HKDF-Expand-Label(key: server_secret, label: \\\"key\\\", ctx: \\\"\\\", len: 16)\\nclient_application_iv = HKDF-Expand-Label(key: client_secret, label: \\\"iv\\\", ctx: \\\"\\\", len: 12)\\nserver_application_iv = HKDF-Expand-Label(key: server_secret, label: \\\"iv\\\", ctx: \\\"\\\", len: 12)\"\n      }\n    ]\n  },\n  {\n    \"children\": [\n      \"在命令行中使用\",\n      {\n        \"Tag\": \"a\",\n        \"props\": { \"href\": \"https://dtls.xargs.org/files/hkdf-dtls.sh\" },\n        \"content\": \"原作者制作的 HKDF 命令行脚本\"\n      },\n      \"，你也可以自己试试：\"\n    ]\n  },\n  {\n    \"Tag\": \"CodeSample\",\n    \"props\": {\n      \"code\": \"$ handshake_hash=77ff5eee528abc269960b0ea316eb8578dc8325d86ec1336ffe4b2941e26d82b\\n$ handshake_secret=d0d1397bb3c445d37f26f7ed00c83b73d2f67540de3761465ffe524f8f944e12\\n$ zero_key=0000000000000000000000000000000000000000000000000000000000000000\\n$ empty_hash=$(openssl sha256 < /dev/null | sed -e 's/.* //')\\n$ derived_secret=$(./hkdf-dtls expandlabel $handshake_secret \\\"derived\\\" $empty_hash 32)\\n$ master_secret=$(./hkdf-dtls extract $derived_secret $zero_key)\\n$ csecret=$(./hkdf-dtls expandlabel $master_secret \\\"c ap traffic\\\" $handshake_hash 32)\\n$ ssecret=$(./hkdf-dtls expandlabel $master_secret \\\"s ap traffic\\\" $handshake_hash 32)\\n$ client_application_key=$(./hkdf-dtls expandlabel $csecret \\\"key\\\" \\\"\\\" 16)\\n$ server_application_key=$(./hkdf-dtls expandlabel $ssecret \\\"key\\\" \\\"\\\" 16)\\n$ client_application_iv=$(./hkdf-dtls expandlabel $csecret \\\"iv\\\" \\\"\\\" 12)\\n$ server_application_iv=$(./hkdf-dtls expandlabel $ssecret \\\"iv\\\" \\\"\\\" 12)\\n$ client_sn_key=$(./hkdf-dtls expandlabel $csecret \\\"sn\\\" \\\"\\\" 16)\\n$ server_sn_key=$(./hkdf-dtls expandlabel $ssecret \\\"sn\\\" \\\"\\\" 16)\\n$ echo client_key: $client_application_key\\n$ echo client_iv: $client_application_iv\\n$ echo server_key: $server_application_key\\n$ echo server_iv: $server_application_iv\\n$ echo client_sn_key: $client_sn_key\\n$ echo server_sn_key: $server_sn_key\\n\\nclient_key: 9ba90dbce8857bc1fcb81d41a0465cfe\\nclient_iv: 682219974631fa0656ee4eff\\nserver_key: 2b65fffbbc8189474aa2003c43c32d4d\\nserver_iv: 582f5a11bdaf973fe3ffeb4e\\nclient_sn_key: 5cb5bd8bac29777c650c0dde22d16d47\\nserver_sn_key: 57ba02596c6a1352d7fe8416c7e17d5a\"\n    }\n  },\n  \"由此我们可以得到以下密钥以及向量：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"客户端会话密钥: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"9ba90dbce8857bc1fcb81d41a0465cfe\"\n          }\n        ]\n      },\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"客户端会话向量: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"682219974631fa0656ee4eff\"\n          }\n        ]\n      },\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"客户端序号保护密钥: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"5cb5bd8bac29777c650c0dde22d16d47\"\n          }\n        ]\n      },\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"服务器端会话密钥: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"2b65fffbbc8189474aa2003c43c32d4d\"\n          }\n        ]\n      },\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"服务器端会话向量: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"582f5a11bdaf973fe3ffeb4e\"\n          }\n        ]\n      },\n      {\n        \"Tag\": \"li\",\n        \"children\": [\n          \"服务器端序号保护密钥: \",\n          {\n            \"Tag\": \"code\",\n            \"content\": \"57ba02596c6a1352d7fe8416c7e17d5a\"\n          }\n        ]\n      }\n    ]\n  }\n]\n"],"names":["module","exports","JSON","parse"],"version":3,"file":"serverApplicationKeysCalc.d4f82dca.js.map"}