[
  "服务器端响应数据：字符串\"pong\"",
  {
    "Tag": "AnnotationToggler"
  },
  {
    "Tag": "Annotations",
    "props": {
      "type": "record-data",
      "data": [
        [
          "头部信息字节",
          {
            "props": {
              "className": "bytes"
            },
            "content": "2f"
          },
          [
            "加密的 DTLS 数据包都以一个 \"统一的头部(unified header)\"开始。头部的第一个字节给出了头部和数据包的结构信息，以及解密时需要的信息。",
            "值 0x2f 具有以下含义：",
            {
              "Tag": "Table",
              "props": {
                "headers": ["", "值", "含义"],
                "data": [
                  ["高位", "001", "固定位"],
                  ["", "0", "头部中不存在连接 ID 字段(1则存在)"],
                  ["", "1", "序列号在头部中占 2 字节长"],
                  ["", "1", "头部中存在\"记录长度\"字段(0则不存在)"],
                  [
                    "低位",
                    "11",
                    "加密序列指示(Encryption epoch 3)，现在密钥是会话时密钥"
                  ]
                ]
              }
            }
          ]
        ],
        [
          "记录序号",
          {
            "props": {
              "className": "bytes protected",
              "title": "被加密"
            },
            "content": "a2 58"
          },
          {
            "props": {
              "className": "bytes unprotected"
            },
            "content": "00 01"
          },
          [
            "记录序号是被加密了的，用以防止中间件误解(interpreting)或干扰数据包的排序。",
            "加密是通过用 \"服务器端序号保护密钥\" 对每个数据包的有效载荷样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行 XOR 得到。",
            "如果说的不够详细，这里有一个如何加密的例子：",
            {
              "Tag": "CodeSample",
              "props": {
                "code": "### \"server record number key\" from application keys calc step above\n$ key=57ba02596c6a1352d7fe8416c7e17d5a\n### sample is taken from 16 bytes of payload starting 5 bytes into the record\n$ sample=f5bd33f27b72780e351fa00703fb9f65\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 2 | xxd -p\n\na259\n\n### the above bytes are xor'd one-for-one into the bytes of the record number"
              }
            }
          ]
        ],
        [
          "记录长度",
          {
            "props": {
              "className": "bytes"
            },
            "content": "00 15"
          },
          [
            "每个记录除非给出这个长度字段，否则对等端将认为数据报剩余的所有字节都是同一个记录的真实载荷。有了这一字段，则在一个数据报中可以发送好几个 DTLS 记录(尽管例子中的连接没有利用这个优势)。",
            {
              "Tag": "ul",
              "children": [
                {
                  "Tag": "li",
                  "content": "00 15 - 表示 DTLS 记录长度为 0x15(21) 字节"
                }
              ]
            }
          ]
        ],
        [
          "加密的数据载荷",
          {
            "props": {
              "className": "bytes encrypted",
              "title": "被\"会话密钥\"加密"
            },
            "content": "f5 bd 33 f2 7b"
          },
          ["这些数据使用服务器端的\"会话密钥\"进行加密。"]
        ],
        [
          "AEAD 鉴别标签",
          {
            "props": {
              "className": "bytes"
            },
            "content": "72 78 0e 35 1f a0 07 03 fb 9f 65 8c 68 9f 95 ae"
          },
          [
            {
              "children": [
                "这是 ",
                {
                  "Tag": "a",
                  "props": {
                    "href": "https://zhuanlan.zhihu.com/p/28566058"
                  },
                  "content": "AEAD 算法"
                },
                "的鉴别标签，确认加密数据和记录头的完整性。它由加密算法产生，并由解密算法消耗。"
              ]
            }
          ]
        ]
      ]
    }
  },
  {
    "Tag": "Annotations",
    "props": {
      "data": [
        [
          "",
          {
            "props": {
              "className": "decryption-header"
            },
            "content": "解密后的数据载荷"
          },
          [
            { "Tag": "h4", "content": "解密" },
            "数据被 \"服务器端会话密钥计算\" 步骤中产生的初始密钥和初始向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 1。",
            "数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。",
            {
              "children": [
                "openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来",
                {
                  "Tag": "a",
                  "props": {
                    "href": "https://dtls.xargs.org/files/aes_128_gcm_decrypt.c"
                  },
                  "content": "解密"
                },
                "和",
                {
                  "Tag": "a",
                  "props": {
                    "href": "https://dtls.xargs.org/files/aes_128_gcm_encrypt.c"
                  },
                  "content": "加密"
                },
                "这些数据。"
              ]
            },
            {
              "Tag": "CodeSample",
              "props": {
                "code": "### from the \"Server Application Keys Calc\" step\n$ key=2b65fffbbc8189474aa2003c43c32d4d\n$ iv=582f5a11bdaf973fe3ffeb4e\n### from this record\n$ recdata=2f00010015\n$ authtag=72780e351fa00703fb9f658c689f95ae\n$ recordnum=1\n### may need to add -I and -L flags for include and lib dirs\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\n\n00000000  70 6f 6e 67 17                                    |pong.|"
              }
            }
          ]
        ]
      ]
    }
  },
  {
    "Tag": "Annotations",
    "props": {
      "type": "record-data",
      "data": [
        [
          "数据",
          {
            "props": {
              "className": "bytes encrypted"
            },
            "content": "70 6f 6e 67"
          },
          ["字符串\"pong\""]
        ],
        [
          "记录类型",
          {
            "props": {
              "className": "bytes encrypted"
            },
            "content": "17"
          },
          [
            "每一个加密的 DTLS 1.3 记录的最后一个字节都需要表明其真正的记录类型",
            {
              "Tag": "ul",
              "children": [
                {
                  "Tag": "li",
                  "content": "17 - 类型为 0x17(23), 会话数据"
                }
              ]
            }
          ]
        ]
      ]
    }
  }
]
