{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,4zV","sources":["<anon>","src/DTLS/serverCertificateDatagram.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jTa5D\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u4F1A\\u53D1\\u9001\\u4E00\\u4E2A\\u6216\\u591A\\u4E2A\\u8BC1\\u4E66\\uFF1A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"\\u8BE5\\u4E3B\\u673A\\u7684\\u8BC1\\u4E66\\uFF0C\\u5305\\u542B\\u4E3B\\u673A\\u540D\\u3001\\u516C\\u94A5\\u548C\\u7B2C\\u4E09\\u65B9\\u7684\\u7B7E\\u540D(\\u7B7E\\u540D\\u8BC1\\u660E\\u8BE5\\u8BC1\\u4E66\\u4E3B\\u673A\\u540D\\u7684\\u6240\\u6709\\u8005\\u6301\\u6709\\u8BE5\\u8BC1\\u4E66\\u7684\\u79C1\\u94A5)\\u3002\"},{\"Tag\":\"li\",\"content\":\"\\u5176\\u4ED6\\u8BC1\\u4E66\\u7684\\u53EF\\u9009\\u5217\\u8868\\uFF0C\\u4ECE\\u4E3B\\u673A\\u8BC1\\u4E66\\u4E00\\u76F4\\u5230\\u9884\\u5148\\u5B89\\u88C5\\u5728\\u5BA2\\u6237\\u7AEF\\u4E0A\\u7684\\u53EF\\u4FE1\\u8BC1\\u4E66\\u3002\\u5176\\u4E2D\\u6BCF\\u4E00\\u4E2A\\u90FD\\u5BF9\\u524D\\u4E00\\u4E2A\\u8BC1\\u4E66\\u8FDB\\u884C\\u7B7E\\u540D\\uFF0C\\u5F62\\u6210\\u4E00\\u4E2A\\u4FE1\\u4EFB\\u94FE\\u3002\"}]},{\"children\":[\"\\u4E3A\\u4E86\\u8BA9\\u8FD9\\u4E2A\\u4F8B\\u5B50\\u4E0D\\u81F3\\u4E8E\\u592A\\u8FC7\\u4E8E\\u5E9E\\u5927\\uFF0C\\u6211\\u4EEC\\u53EA\\u53D1\\u9001\\u4E00\\u4E2A\\u4E3B\\u673A\\u8BC1\\u4E66\\u3002\\u8BC1\\u4E66\\u4EE5\\u4E00\\u79CD\\u53EB\\u505A \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://www.cnblogs.com/flydean/p/16541577.html\"},\"content\":\"DER\"},\" \\u7684\\u4E8C\\u8FDB\\u5236\\u683C\\u5F0F\\u4E66\\u5199\\u3002\"]},{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u5934\\u90E8\\u4FE1\\u606F\\u5B57\\u8282\",{\"props\":{\"className\":\"bytes\"},\"content\":\"2e\"},[\"\\u52A0\\u5BC6\\u7684 DTLS \\u6570\\u636E\\u5305\\u90FD\\u4EE5\\u4E00\\u4E2A \\\\\"\\u7EDF\\u4E00\\u7684\\u5934\\u90E8(unified header)\\\\\"\\u5F00\\u59CB\\u3002\\u5934\\u90E8\\u7684\\u7B2C\\u4E00\\u4E2A\\u5B57\\u8282\\u7ED9\\u51FA\\u4E86\\u5934\\u90E8\\u548C\\u6570\\u636E\\u5305\\u7684\\u7ED3\\u6784\\u4FE1\\u606F\\uFF0C\\u4EE5\\u53CA\\u89E3\\u5BC6\\u65F6\\u9700\\u8981\\u7684\\u4FE1\\u606F\\u3002\",\"\\u503C 0x2e \\u5177\\u6709\\u4EE5\\u4E0B\\u542B\\u4E49\\uFF1A\",{\"Tag\":\"Table\",\"props\":{\"headers\":[\"\",\"\\u503C\",\"\\u542B\\u4E49\"],\"data\":[[\"\\u9AD8\\u4F4D\",\"001\",\"\\u56FA\\u5B9A\\u4F4D\"],[\"\",\"0\",\"\\u5934\\u90E8\\u4E2D\\u4E0D\\u5B58\\u5728\\u8FDE\\u63A5 ID \\u5B57\\u6BB5(1\\u5219\\u5B58\\u5728)\"],[\"\",\"1\",\"\\u5E8F\\u5217\\u53F7\\u5728\\u5934\\u90E8\\u4E2D\\u5360 2 \\u5B57\\u8282\\u957F\"],[\"\",\"1\",\"\\u5934\\u90E8\\u4E2D\\u5B58\\u5728\\\\\"\\u8BB0\\u5F55\\u957F\\u5EA6\\\\\"\\u5B57\\u6BB5(0\\u5219\\u4E0D\\u5B58\\u5728)\"],[\"\\u4F4E\\u4F4D\",\"10\",\"\\u52A0\\u5BC6\\u5E8F\\u5217\\u6307\\u793A(Encryption epoch 2)\\uFF0C\\u73B0\\u5728\\u5BC6\\u94A5\\u662F\\u63E1\\u624B\\u65F6\\u5BC6\\u94A5\"]]}}]],[\"\\u8BB0\\u5F55\\u5E8F\\u53F7\",{\"props\":{\"className\":\"bytes protected\",\"title\":\"\\u88AB\\u52A0\\u5BC6\"},\"content\":\"ed 2b\"},{\"props\":{\"className\":\"bytes unprotected\"},\"content\":\"00 01\"},[\"\\u8BB0\\u5F55\\u5E8F\\u53F7\\u662F\\u88AB\\u52A0\\u5BC6\\u4E86\\u7684\\uFF0C\\u7528\\u4EE5\\u9632\\u6B62\\u4E2D\\u95F4\\u4EF6\\u8BEF\\u89E3(interpreting)\\u6216\\u5E72\\u6270\\u6570\\u636E\\u5305\\u7684\\u6392\\u5E8F\\u3002\",\"\\u52A0\\u5BC6\\u662F\\u901A\\u8FC7\\u7528 \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u5E8F\\u53F7\\u4FDD\\u62A4\\u5BC6\\u94A5\\\\\" \\u5BF9\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u7684\\u6709\\u6548\\u8F7D\\u8377\\u6837\\u672C\\u8FDB\\u884C\\u52A0\\u5BC6\\uFF0C\\u7136\\u540E\\u5C06\\u6BCF\\u4E2A\\u6570\\u636E\\u5305\\u4E2D\\u7684\\u67D0\\u4E9B\\u6BD4\\u7279\\u548C\\u5B57\\u8282\\u4E0E\\u6240\\u5F97\\u6570\\u636E\\u8FDB\\u884C XOR \\u5F97\\u5230\\u3002\",\"\\u5982\\u679C\\u8BF4\\u7684\\u4E0D\\u591F\\u8BE6\\u7EC6\\uFF0C\\u8FD9\\u91CC\\u6709\\u4E00\\u4E2A\\u5982\\u4F55\\u52A0\\u5BC6\\u7684\\u4F8B\\u5B50\\uFF1A\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### \\\\\"server record number key\\\\\" from handshake keys calc step above\\\\n$ key=7173fac51194e775001d625ef69d7c9f\\\\n### sample is taken from 16 bytes of payload starting 5 bytes into the record\\\\n$ sample=d3777e1adf9e98c8c4ffa072c2c3b6bb\\\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 2 | xxd -p\\\\n\\\\ned2a\\\\n\\\\n### the above bytes are xor\\'d one-for-one into the bytes of the record number\"}}]],[\"\\u8BB0\\u5F55\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"03 4b\"},[\"\\u6BCF\\u4E2A\\u8BB0\\u5F55\\u9664\\u975E\\u7ED9\\u51FA\\u8FD9\\u4E2A\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u5426\\u5219\\u5BF9\\u7B49\\u7AEF\\u5C06\\u8BA4\\u4E3A\\u6570\\u636E\\u62A5\\u5269\\u4F59\\u7684\\u6240\\u6709\\u5B57\\u8282\\u90FD\\u662F\\u540C\\u4E00\\u4E2A\\u8BB0\\u5F55\\u7684\\u771F\\u5B9E\\u8F7D\\u8377\\u3002\\u6709\\u4E86\\u8FD9\\u4E00\\u5B57\\u6BB5\\uFF0C\\u5219\\u5728\\u4E00\\u4E2A\\u6570\\u636E\\u62A5\\u4E2D\\u53EF\\u4EE5\\u53D1\\u9001\\u597D\\u51E0\\u4E2A TLS \\u8BB0\\u5F55(\\u5C3D\\u7BA1\\u4F8B\\u5B50\\u4E2D\\u7684\\u8FDE\\u63A5\\u6CA1\\u6709\\u5229\\u7528\\u8FD9\\u4E2A\\u4F18\\u52BF)\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"03 4b - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u957F\\u5EA6\\u4E3A 0x34B(843) \\u5B57\\u8282\"}]}]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\",\"title\":\"\\u88AB\\\\\"\\u63E1\\u624B\\u5BC6\\u94A5\\\\\"\\u52A0\\u5BC6\"},\"content\":\"d3 77 7e 1a df 9e 98 c8 c4 ff a0 72 c2 c3 b6 bb cd 9f bd 2d 1f 34 3c 5d f9 54 d9 97 a2 cd 1d 33 42 a3 3d 3f 6a 85 e1 21 42 3c e0 02 ea 33 5e 37 7e 7a 21 5b 8a 9e cc 5e 26 7c 60 a2 bc 79 4e d1 d8 1f 39 8b ce df a3 68 fb db 7c a3 67 a0 46 65 5d 61 e4 86 67 62 fa ac fd a4 9d 0f 3a 39 71 86 d8 32 e4 81 87 d0 76 ea 8d e5 32 12 87 be 9b fd a2 15 19 da 58 e0 c4 80 56 99 7e 49 2e df e4 76 6b 2c d5 1e a1 2b c2 f6 d5 50 5b 80 e5 1a 64 5d a9 b0 7f bf 7a 01 b8 4d 5b a7 22 b2 e1 7d d9 52 8c 28 63 cd 63 a7 35 b5 4c d8 23 95 87 84 1a 59 2f be 57 5b 2d e1 8a 6c 99 f7 82 a9 56 e2 8c e7 69 67 42 67 3d 7e e7 37 f4 6e 9c ba a2 89 2d 97 21 ef cc c9 1f 16 72 26 a5 be 4c 9c d8 6b 97 fe f3 32 3f d1 92 f4 60 e8 ef 8b 91 3b bf 9f 97 05 63 85 d4 c3 ec 2b 2b dc 2e c4 8a 66 8c f6 f1 0d b3 fe 00 91 97 fa b9 8d 7c 2a 88 15 ac 5a 4e d3 aa 08 94 b9 f9 f9 95 12 43 0d f2 1f 13 4c 49 34 40 73 f9 af 32 8e 35 c2 e1 6b 91 3f 4e 61 33 21 e4 a7 9b d2 d3 38 47 32 1e 61 5d 58 94 09 b1 65 f9 c2 b0 18 80 4f 3c 33 40 e4 0a d5 f5 9a 26 46 0a 12 0f 2d 55 fc 8b ca 47 22 74 fd b9 06 09 a2 18 70 e1 cc 41 aa d0 24 fa 48 a8 6f 07 8f 90 8b c6 26 18 c4 c3 2f 0c fc fb b5 95 a7 d2 93 f4 ba ab 93 ff 35 f0 de 10 71 17 1e 4c 51 0d 75 dd 29 f5 0d 3d e8 1c ae 9e 1c 56 ed 60 9c 1b c7 27 5e ac 1d 69 33 df 08 93 dd 0e 3c 5c 7f d3 65 14 26 b3 e4 c3 ca 6d 46 1d 82 0a df ff 75 fb 7b 15 8b e9 89 30 89 da c9 30 a0 15 f8 9c b4 ef 22 7a b9 e4 3d f0 14 7a 25 07 59 e3 e0 1b 5d b7 48 0c 52 7a 1d 4b 8a 09 c4 ac 05 fc c6 d6 40 15 d6 af 2c 3e 52 15 03 a8 2f b9 02 5c 61 98 18 ca 31 fb 24 03 63 0a c0 6a b7 11 90 53 a7 02 86 24 0b 3f 8e 43 96 61 ad 95 48 7a a5 72 d7 08 60 8d d0 d4 fe 27 bb cf 1e df 50 3a 54 05 46 0b 9e 10 f6 93 4a 41 a8 cf b7 0b 60 90 6f 7e 66 d6 53 15 61 ef 08 ad e3 de 45 77 a7 77 6b f6 56 bb 48 5c ee 28 2c 83 7a a8 bc e0 6a e6 06 a1 71 d7 54 96 36 fe d8 3e 24 bf 9f 10 5b 7d 1d 02 da 30 86 ce 24 49 af a2 d0 ec 26 18 5d 0c 1f 05 2f 88 cd 9d 55 eb 12 4b da e3 66 7f 59 79 97 95 f9 27 50 b9 ca 70 55 66 86 6a 99 24 a2 46 a4 71 90 4b 2d 69 dc 17 cb fe 50 a5 62 ff 26 ff 9e 40 4d 7b 2a 11 67 0c 27 56 3f 3e 37 99 3c c6 e6 73 43 6d c3 a8 51 21 4d 6d 27 86 2b 64 5d cb 0b f4 d4 c7 44 0f 6a d4 83 ef 9d 58 fa b4 7d 24 4b d6 cf a6 8f 12 e9 aa ae cd 2d 52 8e 85 66 f9 7f 50 56 cf 8e fc 7d 1e 55 fb ee 1b e8 7f 7f 89 73 7c 8a fa 20 e4 96 37 0d 25 f7 52 99 e5 91 8c b9 4b a5 b5 ef db 84 7d 9c a5 44 a5 38 65 a3 6d 69 1e be 8b e8 e2 da 08 c1 7b e9 02 38 0d b9 a3 d7 04 91 b8 98 f8 c5 88 e7 44 64 8e b9 37 70 53 0c 83 ce cf\"},[\"\\u8FD9\\u4E9B\\u6570\\u636E\\u4F7F\\u7528\\u670D\\u52A1\\u5668\\u7AEF\\u7684\\\\\"\\u63E1\\u624B\\u5BC6\\u94A5\\\\\"\\u8FDB\\u884C\\u52A0\\u5BC6\\u3002\"]],[\"AEAD \\u9274\\u522B\\u6807\\u7B7E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"a4 30 70 21 45 22 93 8c 0e 66 82 9e f1 33 34 9b\"},[{\"children\":[\"\\u8FD9\\u662F \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD \\u7B97\\u6CD5\"},\"\\u7684\\u9274\\u522B\\u6807\\u7B7E\\uFF0C\\u786E\\u8BA4\\u52A0\\u5BC6\\u6570\\u636E\\u548C\\u8BB0\\u5F55\\u5934\\u7684\\u5B8C\\u6574\\u6027\\u3002\\u5B83\\u7531\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4EA7\\u751F\\uFF0C\\u5E76\\u7531\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6D88\\u8017\\u3002\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u63E1\\u624B\\u5BC6\\u94A5\\u8BA1\\u7B97\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u521D\\u59CB\\u5BC6\\u94A5\\u548C\\u521D\\u59CB\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002IVs \\u901A\\u8FC7\\u5BC6\\u94A5\\u548C\\u5DF2\\u7ECF\\u7528\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u957F\\u5EA6\\u8FDB\\u884C\\u5F02\\u6216\\u64CD\\u4F5C\\u751F\\u6210\\u3002\\u5728\\u4F8B\\u5B50\\u4E2D IV \\u4E3A 1\\u3002\",\"\\u6570\\u636E\\u5305\\u5F00\\u5934\\u7684 5 \\u5B57\\u8282(\\u8BB0\\u5F55\\u5934)\\u8FD8\\u4F1A\\u4F5C\\u4E3A\\u89E3\\u5BC6\\u8FC7\\u7A0B\\u89E3\\u5BC6\\u6210\\u529F\\u65F6\\u5FC5\\u987B\\u6EE1\\u8DB3\\u7684\\u8BA4\\u8BC1\\u6761\\u4EF6\\u3002\",{\"children\":[\"openssl \\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u8FD8\\u4E0D\\u652F\\u6301 AEAD \\u7B97\\u6CD5\\u52A0\\u89E3\\u5BC6(AEAD ciphers)\\uFF0C\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528\\u4F5C\\u8005\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u6765\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://dtls.xargs.org/files/aes_128_gcm_decrypt.c\"},\"content\":\"\\u89E3\\u5BC6\"},\"\\u548C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://dtls.xargs.org/files/aes_128_gcm_encrypt.c\"},\"content\":\"\\u52A0\\u5BC6\"},\"\\u8FD9\\u4E9B\\u6570\\u636E\\u3002\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Server Handshake Keys Calc\\\\\" step\\\\n$ key=004e03e64ab6cba6b542775ec230e20a\\\\n$ iv=6d9924be044ee97c624913f2\\\\n### from this record\\\\n$ recdata=2e0001034b\\\\n$ authtag=a43070214522938c0e66829ef133349b\\\\n$ recordnum=1\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\\\n\\\\n00000000  0b 00 03 2e 00 02 00 00  00 00 03 2e 00 00 03 2a  |...............*|\\\\n00000010  00 03 25 30 82 03 21 30  82 02 09 a0 03 02 01 02  |..a4..!0...?....|\\\\n00000020  02 08 15 5a 92 ad c2 04  8f 90 30 0d 06 09 2a 86  |...Z.??...0...*.|\\\\n00000030  48 86 f7 0d 01 01 0b 05  00 30 22 31 0b 30 09 06  |H.?......0\\\\\"1.0..|\\\\n00000040  03 55 04 06 13 02 55 53  31 13 30 11 06 03 55 04  |.U....US1.0...U.|\\\\n00000050  0a 13 0a 45 78 61 6d 70  6c 65 20 43 41 30 1e 17  |...Example CA0..|\\\\n00000060  0d 31 38 31 30 30 35 30  31 33 38 31 37 5a 17 0d  |.181005013817Z..|\\\\n00000070  31 39 31 30 30 35 30 31  33 38 31 37 5a 30 2b 31  |191005013817Z0+1|\\\\n00000080  0b 30 09 06 03 55 04 06  13 02 55 53 31 1c 30 1a  |.0...U....US1.0.|\\\\n00000090  06 03 55 04 03 13 13 65  78 61 6d 70 6c 65 2e 75  |..U....example.u|\\\\n... snip ...\\\\n\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u63E1\\u624B\\u6D88\\u606F\\u5934\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"0b 00 03 2e\"},[\"\\u6BCF\\u4E2A\\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"0b - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x0b (certificate)\"},{\"Tag\":\"li\",\"content\":\"00 03 2e - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0x32E (814) \\u5B57\\u8282\"}]}]],[\"\\u7528\\u4E8E\\u91CD\\u5EFA\\u63E1\\u624B\\u987A\\u5E8F\\u7684\\u4FE1\\u606F(Handshake Reconstruction Data)\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"00 02 00 00 00 00 03 2e\"},[\"\\u56E0\\u4E3A UDP (\\u6216\\u5176\\u4ED6\\u6570\\u636E\\u62A5\\u534F\\u8BAE)\\u4E0D\\u4FDD\\u8BC1\\u4EA4\\u4ED8\\u6216\\u6392\\u5E8F\\uFF0C\\u800C\\u4E14\\u6570\\u636E\\u62A5\\u7684\\u957F\\u5EA6\\u53EF\\u80FD\\u6BD4\\u9700\\u8981\\u53D1\\u9001\\u7684\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u5EA6\\u8981\\u5C0F\\u3002\\u56E0\\u6B64 DTLS \\u5FC5\\u987B\\u63D0\\u4F9B\\u4E00\\u5B9A\\u7684\\u4FE1\\u606F\\uFF0C\\u4EE5\\u652F\\u6301\\u5728\\u6570\\u636E\\u4E22\\u5931\\u3001\\u5305\\u91CD\\u6392\\u5E8F\\u6216\\u6709\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u4F7F\\u5F97\\u5BF9\\u7B49\\u7AEF(peer)\\u80FD\\u591F\\u91CD\\u65B0\\u6784\\u5EFA\\u4E00\\u6761\\u6B63\\u786E\\u7684 DTLS \\u8BB0\\u5F55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 02 - DTLS \\u5E8F\\u5217\\u53F7 0x2(2)\"},{\"Tag\":\"li\",\"content\":\"00 00 00 - \\u8868\\u660E\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u504F\\u79FB\\u91CF\\u4E3A 0x00(0) \\u5B57\\u8282\"},{\"Tag\":\"li\",\"content\":\"00 03 2e - \\u8868\\u660E\\u4E4B\\u540E\\u7684\\u8BB0\\u5F55\\u788E\\u7247\\u7684\\u957F\\u5EA6\\u4E3A 0x32E(814) \\u5B57\\u8282\"}]},\"\\u5728\\u672C\\u6587\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u7684\\u957F\\u5EA6\\u8981\\u77ED\\u4E8E\\u4E00\\u4E2A UDP \\u6570\\u636E\\u62A5\\u7684\\u53EF\\u627F\\u8F7D\\u957F\\u5EA6\\uFF0C\\u56E0\\u6B64\\u504F\\u79FB\\u91CF\\u4E3A\\u96F6\\uFF0C\\u4E14\\u957F\\u5EA6\\u4E3A\\u6574\\u4E2A\\u63E1\\u624B\\u8BB0\\u5F55\\u957F\\u3002\"]],[\"\\u8BF7\\u6C42\\u4E0A\\u4E0B\\u6587\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"00\"},[\"\\u6570\\u636E\\u4E3A\\u7A7A\\uFF0C\\u56E0\\u4E3A\\u8BE5\\u8BC1\\u4E66\\u4E0D\\u662F\\u54CD\\u5E94\\u8BC1\\u4E66\\u8BF7\\u6C42\\u800C\\u53D1\\u9001\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - \\u6CA1\\u6709\\u6570\\u636E\"}]}]],[\"\\u6240\\u6709\\u8BC1\\u4E66\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 03 2a\"},[{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 03 2a - \\u7D27\\u63A5\\u7740\\u7684\\u8BC1\\u4E66\\u7684\\u957F\\u5EA6 0x32A (810) \\u5B57\\u8282\"}]}]],[\"\\u7B2C\\u4E00\\u4E2A\\u8BC1\\u4E66\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 03 25\"},[\"\\u6B64\\u65F6\\u540C\\u65F6\\u4E5F\\u662F\\u552F\\u4E00\\u4E00\\u4E2A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 03 25 - \\u7D27\\u63A5\\u7740\\u7684\\u8BC1\\u4E66\\u7684\\u957F\\u5EA6 0x325 (805) \\u5B57\\u8282\"}]}]],[\"\\u8BC1\\u4E66\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"30 82 03 21 30 82 02 09 a0 03 02 01 02 02 08 15 5a 92 ad c2 04 8f 90 30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00 30 22 31 0b 30 09 06 03 55 04 06 13 02 55 53 31 13 30 11 06 03 55 04 0a 13 0a 45 78 61 6d 70 6c 65 20 43 41 30 1e 17 0d 31 38 31 30 30 35 30 31 33 38 31 37 5a 17 0d 31 39 31 30 30 35 30 31 33 38 31 37 5a 30 2b 31 0b 30 09 06 03 55 04 06 13 02 55 53 31 1c 30 1a 06 03 55 04 03 13 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74 30 82 01 22 30 0d 06 09 2a 86 48 86 f7 0d 01 01 01 05 00 03 82 01 0f 00 30 82 01 0a 02 82 01 01 00 c4 80 36 06 ba e7 47 6b 08 94 04 ec a7 b6 91 04 3f f7 92 bc 19 ee fb 7d 74 d7 a8 0d 00 1e 7b 4b 3a 4a e6 0f e8 c0 71 fc 73 e7 02 4c 0d bc f4 bd d1 1d 39 6b ba 70 46 4a 13 e9 4a f8 3d f3 e1 09 59 54 7b c9 55 fb 41 2d a3 76 52 11 e1 f3 dc 77 6c aa 53 37 6e ca 3a ec be c3 aa b7 3b 31 d5 6c b6 52 9c 80 98 bc c9 e0 28 18 e2 0b f7 f8 a0 3a fd 17 04 50 9e ce 79 bd 9f 39 f1 ea 69 ec 47 97 2e 83 0f b5 ca 95 de 95 a1 e6 04 22 d5 ee be 52 79 54 a1 e7 bf 8a 86 f6 46 6d 0d 9f 16 95 1a 4c f7 a0 46 92 59 5c 13 52 f2 54 9e 5a fb 4e bf d7 7a 37 95 01 44 e4 c0 26 87 4c 65 3e 40 7d 7d 23 07 44 01 f4 84 ff d0 8f 7a 1f a0 52 10 d1 f4 f0 d5 ce 79 70 29 32 e2 ca be 70 1f df ad 6b 4b b7 11 01 f4 4b ad 66 6a 11 13 0f e2 ee 82 9e 4d 02 9d c9 1c dd 67 16 db b9 06 18 86 ed c1 ba 94 21 02 03 01 00 01 a3 52 30 50 30 0e 06 03 55 1d 0f 01 01 ff 04 04 03 02 05 a0 30 1d 06 03 55 1d 25 04 16 30 14 06 08 2b 06 01 05 05 07 03 02 06 08 2b 06 01 05 05 07 03 01 30 1f 06 03 55 1d 23 04 18 30 16 80 14 89 4f de 5b cc 69 e2 52 cf 3e a3 00 df b1 97 b8 1d e1 c1 46 30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00 03 82 01 01 00 59 16 45 a6 9a 2e 37 79 e4 f6 dd 27 1a ba 1c 0b fd 6c d7 55 99 b5 e7 c3 6e 53 3e ff 36 59 08 43 24 c9 e7 a5 04 07 9d 39 e0 d4 29 87 ff e3 eb dd 09 c1 cf 1d 91 44 55 87 0b 57 1d d1 9b df 1d 24 f8 bb 9a 11 fe 80 fd 59 2b a0 39 8c de 11 e2 65 1e 61 8c e5 98 fa 96 e5 37 2e ef 3d 24 8a fd e1 74 63 eb bf ab b8 e4 d1 ab 50 2a 54 ec 00 64 e9 2f 78 19 66 0d 3f 27 cf 20 9e 66 7f ce 5a e2 e4 ac 99 c7 c9 38 18 f8 b2 51 07 22 df ed 97 f3 2e 3e 93 49 d4 c6 6c 9e a6 39 6d 74 44 62 a0 6b 42 c6 d5 ba 68 8e ac 3a 01 7b dd fc 8e 2c fc ad 27 cb 69 d3 cc dc a2 80 41 44 65 d3 ae 34 8c e0 f3 4a b2 fb 9c 61 83 71 31 2b 19 10 41 64 1c 23 7f 11 a5 d6 5c 84 4f 04 04 84 99 38 71 2b 95 9e d6 85 bc 5c 5d d6 45 ed 19 90 94 73 40 29 26 dc b4 0e 34 69 a1 59 41 e8 e2 cc a8 4b b6 08 46 36 a0\"},[{\"children\":[{\"Tag\":\"a\",\"props\":{\"href\":\"https://dtls.xargs.org/files/server.crt\"},\"content\":\"\\u8BE5\\u8BC1\\u4E66\"},\"\\u91C7\\u7528 ASN.1 DER \\u7F16\\u7801\\u3002\\u53EF\\u4EE5\\u5728\\u547D\\u4EE4\\u884C\\u4E2D\\u4F7F\\u7528\\u4EE5\\u4E0B\\u547D\\u4EE4\\u8F6C\\u6362\\u4E3A\\u4E8C\\u8FDB\\u5236\\u6570\\u636E\\uFF1A\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"$ openssl x509 -outform der < server.crt | hexdump\\\\n\\\\n0000000 30 82 03 21 30 82 02 09 a0 03 02 01 02 02 08 15\\\\n0000010 5a 92 ad c2 04 8f 90 30 0d 06 09 2a 86 48 86 f7\\\\n... snip ...\"}}]],[\"\\u8BC1\\u4E66\\u7684\\u6269\\u5C55\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"00 00\"},[\"\\u670D\\u52A1\\u5668\\u53EF\\u4EE5\\u63D0\\u4F9B\\u8BC1\\u4E66\\u9700\\u8981\\u7684\\u6269\\u5C55\\u4FE1\\u606F\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 00 - \\u6CA1\\u6709\\u6269\\u5C55\\u4FE1\\u606F\"}]}]],[\"\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"16\"},[\"\\u6BCF\\u4E00\\u4E2A\\u52A0\\u5BC6\\u7684 DTLS 1.3 \\u8BB0\\u5F55\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u5B57\\u8282\\u90FD\\u9700\\u8981\\u8868\\u660E\\u5176\\u771F\\u6B63\\u7684\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u7C7B\\u578B\\u4E3A 0x16(22), \\u63E1\\u624B\\u8BB0\\u5F55\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverCertificateDatagram.592f8717.js.map\n","[\n  \"服务器会发送一个或多个证书：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"该主机的证书，包含主机名、公钥和第三方的签名(签名证明该证书主机名的所有者持有该证书的私钥)。\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"其他证书的可选列表，从主机证书一直到预先安装在客户端上的可信证书。其中每一个都对前一个证书进行签名，形成一个信任链。\"\n      }\n    ]\n  },\n  {\n    \"children\": [\n      \"为了让这个例子不至于太过于庞大，我们只发送一个主机证书。证书以一种叫做 \",\n      {\n        \"Tag\": \"a\",\n        \"props\": {\n          \"href\": \"https://www.cnblogs.com/flydean/p/16541577.html\"\n        },\n        \"content\": \"DER\"\n      },\n      \" 的二进制格式书写。\"\n    ]\n  },\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"头部信息字节\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"2e\"\n          },\n          [\n            \"加密的 DTLS 数据包都以一个 \\\"统一的头部(unified header)\\\"开始。头部的第一个字节给出了头部和数据包的结构信息，以及解密时需要的信息。\",\n            \"值 0x2e 具有以下含义：\",\n            {\n              \"Tag\": \"Table\",\n              \"props\": {\n                \"headers\": [\"\", \"值\", \"含义\"],\n                \"data\": [\n                  [\"高位\", \"001\", \"固定位\"],\n                  [\"\", \"0\", \"头部中不存在连接 ID 字段(1则存在)\"],\n                  [\"\", \"1\", \"序列号在头部中占 2 字节长\"],\n                  [\"\", \"1\", \"头部中存在\\\"记录长度\\\"字段(0则不存在)\"],\n                  [\n                    \"低位\",\n                    \"10\",\n                    \"加密序列指示(Encryption epoch 2)，现在密钥是握手时密钥\"\n                  ]\n                ]\n              }\n            }\n          ]\n        ],\n        [\n          \"记录序号\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被加密\"\n            },\n            \"content\": \"ed 2b\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"00 01\"\n          },\n          [\n            \"记录序号是被加密了的，用以防止中间件误解(interpreting)或干扰数据包的排序。\",\n            \"加密是通过用 \\\"服务器端序号保护密钥\\\" 对每个数据包的有效载荷样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行 XOR 得到。\",\n            \"如果说的不够详细，这里有一个如何加密的例子：\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### \\\"server record number key\\\" from handshake keys calc step above\\n$ key=7173fac51194e775001d625ef69d7c9f\\n### sample is taken from 16 bytes of payload starting 5 bytes into the record\\n$ sample=d3777e1adf9e98c8c4ffa072c2c3b6bb\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 2 | xxd -p\\n\\ned2a\\n\\n### the above bytes are xor'd one-for-one into the bytes of the record number\"\n              }\n            }\n          ]\n        ],\n        [\n          \"记录长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"03 4b\"\n          },\n          [\n            \"每个记录除非给出这个长度字段，否则对等端将认为数据报剩余的所有字节都是同一个记录的真实载荷。有了这一字段，则在一个数据报中可以发送好几个 TLS 记录(尽管例子中的连接没有利用这个优势)。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 4b - 表示 TLS 记录长度为 0x34B(843) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\",\n              \"title\": \"被\\\"握手密钥\\\"加密\"\n            },\n            \"content\": \"d3 77 7e 1a df 9e 98 c8 c4 ff a0 72 c2 c3 b6 bb cd 9f bd 2d 1f 34 3c 5d f9 54 d9 97 a2 cd 1d 33 42 a3 3d 3f 6a 85 e1 21 42 3c e0 02 ea 33 5e 37 7e 7a 21 5b 8a 9e cc 5e 26 7c 60 a2 bc 79 4e d1 d8 1f 39 8b ce df a3 68 fb db 7c a3 67 a0 46 65 5d 61 e4 86 67 62 fa ac fd a4 9d 0f 3a 39 71 86 d8 32 e4 81 87 d0 76 ea 8d e5 32 12 87 be 9b fd a2 15 19 da 58 e0 c4 80 56 99 7e 49 2e df e4 76 6b 2c d5 1e a1 2b c2 f6 d5 50 5b 80 e5 1a 64 5d a9 b0 7f bf 7a 01 b8 4d 5b a7 22 b2 e1 7d d9 52 8c 28 63 cd 63 a7 35 b5 4c d8 23 95 87 84 1a 59 2f be 57 5b 2d e1 8a 6c 99 f7 82 a9 56 e2 8c e7 69 67 42 67 3d 7e e7 37 f4 6e 9c ba a2 89 2d 97 21 ef cc c9 1f 16 72 26 a5 be 4c 9c d8 6b 97 fe f3 32 3f d1 92 f4 60 e8 ef 8b 91 3b bf 9f 97 05 63 85 d4 c3 ec 2b 2b dc 2e c4 8a 66 8c f6 f1 0d b3 fe 00 91 97 fa b9 8d 7c 2a 88 15 ac 5a 4e d3 aa 08 94 b9 f9 f9 95 12 43 0d f2 1f 13 4c 49 34 40 73 f9 af 32 8e 35 c2 e1 6b 91 3f 4e 61 33 21 e4 a7 9b d2 d3 38 47 32 1e 61 5d 58 94 09 b1 65 f9 c2 b0 18 80 4f 3c 33 40 e4 0a d5 f5 9a 26 46 0a 12 0f 2d 55 fc 8b ca 47 22 74 fd b9 06 09 a2 18 70 e1 cc 41 aa d0 24 fa 48 a8 6f 07 8f 90 8b c6 26 18 c4 c3 2f 0c fc fb b5 95 a7 d2 93 f4 ba ab 93 ff 35 f0 de 10 71 17 1e 4c 51 0d 75 dd 29 f5 0d 3d e8 1c ae 9e 1c 56 ed 60 9c 1b c7 27 5e ac 1d 69 33 df 08 93 dd 0e 3c 5c 7f d3 65 14 26 b3 e4 c3 ca 6d 46 1d 82 0a df ff 75 fb 7b 15 8b e9 89 30 89 da c9 30 a0 15 f8 9c b4 ef 22 7a b9 e4 3d f0 14 7a 25 07 59 e3 e0 1b 5d b7 48 0c 52 7a 1d 4b 8a 09 c4 ac 05 fc c6 d6 40 15 d6 af 2c 3e 52 15 03 a8 2f b9 02 5c 61 98 18 ca 31 fb 24 03 63 0a c0 6a b7 11 90 53 a7 02 86 24 0b 3f 8e 43 96 61 ad 95 48 7a a5 72 d7 08 60 8d d0 d4 fe 27 bb cf 1e df 50 3a 54 05 46 0b 9e 10 f6 93 4a 41 a8 cf b7 0b 60 90 6f 7e 66 d6 53 15 61 ef 08 ad e3 de 45 77 a7 77 6b f6 56 bb 48 5c ee 28 2c 83 7a a8 bc e0 6a e6 06 a1 71 d7 54 96 36 fe d8 3e 24 bf 9f 10 5b 7d 1d 02 da 30 86 ce 24 49 af a2 d0 ec 26 18 5d 0c 1f 05 2f 88 cd 9d 55 eb 12 4b da e3 66 7f 59 79 97 95 f9 27 50 b9 ca 70 55 66 86 6a 99 24 a2 46 a4 71 90 4b 2d 69 dc 17 cb fe 50 a5 62 ff 26 ff 9e 40 4d 7b 2a 11 67 0c 27 56 3f 3e 37 99 3c c6 e6 73 43 6d c3 a8 51 21 4d 6d 27 86 2b 64 5d cb 0b f4 d4 c7 44 0f 6a d4 83 ef 9d 58 fa b4 7d 24 4b d6 cf a6 8f 12 e9 aa ae cd 2d 52 8e 85 66 f9 7f 50 56 cf 8e fc 7d 1e 55 fb ee 1b e8 7f 7f 89 73 7c 8a fa 20 e4 96 37 0d 25 f7 52 99 e5 91 8c b9 4b a5 b5 ef db 84 7d 9c a5 44 a5 38 65 a3 6d 69 1e be 8b e8 e2 da 08 c1 7b e9 02 38 0d b9 a3 d7 04 91 b8 98 f8 c5 88 e7 44 64 8e b9 37 70 53 0c 83 ce cf\"\n          },\n          [\"这些数据使用服务器端的\\\"握手密钥\\\"进行加密。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"a4 30 70 21 45 22 93 8c 0e 66 82 9e f1 33 34 9b\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，确认加密数据和记录头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端握手密钥计算\\\" 步骤中产生的初始密钥和初始向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 1。\",\n            \"数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://dtls.xargs.org/files/aes_128_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://dtls.xargs.org/files/aes_128_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Server Handshake Keys Calc\\\" step\\n$ key=004e03e64ab6cba6b542775ec230e20a\\n$ iv=6d9924be044ee97c624913f2\\n### from this record\\n$ recdata=2e0001034b\\n$ authtag=a43070214522938c0e66829ef133349b\\n$ recordnum=1\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\n\\n00000000  0b 00 03 2e 00 02 00 00  00 00 03 2e 00 00 03 2a  |...............*|\\n00000010  00 03 25 30 82 03 21 30  82 02 09 a0 03 02 01 02  |..a4..!0...?....|\\n00000020  02 08 15 5a 92 ad c2 04  8f 90 30 0d 06 09 2a 86  |...Z.??...0...*.|\\n00000030  48 86 f7 0d 01 01 0b 05  00 30 22 31 0b 30 09 06  |H.?......0\\\"1.0..|\\n00000040  03 55 04 06 13 02 55 53  31 13 30 11 06 03 55 04  |.U....US1.0...U.|\\n00000050  0a 13 0a 45 78 61 6d 70  6c 65 20 43 41 30 1e 17  |...Example CA0..|\\n00000060  0d 31 38 31 30 30 35 30  31 33 38 31 37 5a 17 0d  |.181005013817Z..|\\n00000070  31 39 31 30 30 35 30 31  33 38 31 37 5a 30 2b 31  |191005013817Z0+1|\\n00000080  0b 30 09 06 03 55 04 06  13 02 55 53 31 1c 30 1a  |.0...U....US1.0.|\\n00000090  06 03 55 04 03 13 13 65  78 61 6d 70 6c 65 2e 75  |..U....example.u|\\n... snip ...\\n\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"握手消息头\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"0b 00 03 2e\"\n          },\n          [\n            \"每个握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"0b - 握手消息类型 0x0b (certificate)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 03 2e - 紧接着的握手消息数据的长度 0x32E (814) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"用于重建握手顺序的信息(Handshake Reconstruction Data)\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"00 02 00 00 00 00 03 2e\"\n          },\n          [\n            \"因为 UDP (或其他数据报协议)不保证交付或排序，而且数据报的长度可能比需要发送的握手记录长度要小。因此 DTLS 必须提供一定的信息，以支持在数据丢失、包重排序或有记录碎片的情况下，使得对等端(peer)能够重新构建一条正确的 DTLS 记录。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 02 - DTLS 序列号 0x2(2)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 00 - 表明记录碎片的偏移量为 0x00(0) 字节\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 03 2e - 表明之后的记录碎片的长度为 0x32E(814) 字节\"\n                }\n              ]\n            },\n            \"在本文例子中，整个握手记录的长度要短于一个 UDP 数据报的可承载长度，因此偏移量为零，且长度为整个握手记录长。\"\n          ]\n        ],\n        [\n          \"请求上下文\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"数据为空，因为该证书不是响应证书请求而发送。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 没有数据\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"所有证书长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 03 2a\"\n          },\n          [\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 03 2a - 紧接着的证书的长度 0x32A (810) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"第一个证书长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 03 25\"\n          },\n          [\n            \"此时同时也是唯一一个\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 03 25 - 紧接着的证书的长度 0x325 (805) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"证书\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"30 82 03 21 30 82 02 09 a0 03 02 01 02 02 08 15 5a 92 ad c2 04 8f 90 30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00 30 22 31 0b 30 09 06 03 55 04 06 13 02 55 53 31 13 30 11 06 03 55 04 0a 13 0a 45 78 61 6d 70 6c 65 20 43 41 30 1e 17 0d 31 38 31 30 30 35 30 31 33 38 31 37 5a 17 0d 31 39 31 30 30 35 30 31 33 38 31 37 5a 30 2b 31 0b 30 09 06 03 55 04 06 13 02 55 53 31 1c 30 1a 06 03 55 04 03 13 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74 30 82 01 22 30 0d 06 09 2a 86 48 86 f7 0d 01 01 01 05 00 03 82 01 0f 00 30 82 01 0a 02 82 01 01 00 c4 80 36 06 ba e7 47 6b 08 94 04 ec a7 b6 91 04 3f f7 92 bc 19 ee fb 7d 74 d7 a8 0d 00 1e 7b 4b 3a 4a e6 0f e8 c0 71 fc 73 e7 02 4c 0d bc f4 bd d1 1d 39 6b ba 70 46 4a 13 e9 4a f8 3d f3 e1 09 59 54 7b c9 55 fb 41 2d a3 76 52 11 e1 f3 dc 77 6c aa 53 37 6e ca 3a ec be c3 aa b7 3b 31 d5 6c b6 52 9c 80 98 bc c9 e0 28 18 e2 0b f7 f8 a0 3a fd 17 04 50 9e ce 79 bd 9f 39 f1 ea 69 ec 47 97 2e 83 0f b5 ca 95 de 95 a1 e6 04 22 d5 ee be 52 79 54 a1 e7 bf 8a 86 f6 46 6d 0d 9f 16 95 1a 4c f7 a0 46 92 59 5c 13 52 f2 54 9e 5a fb 4e bf d7 7a 37 95 01 44 e4 c0 26 87 4c 65 3e 40 7d 7d 23 07 44 01 f4 84 ff d0 8f 7a 1f a0 52 10 d1 f4 f0 d5 ce 79 70 29 32 e2 ca be 70 1f df ad 6b 4b b7 11 01 f4 4b ad 66 6a 11 13 0f e2 ee 82 9e 4d 02 9d c9 1c dd 67 16 db b9 06 18 86 ed c1 ba 94 21 02 03 01 00 01 a3 52 30 50 30 0e 06 03 55 1d 0f 01 01 ff 04 04 03 02 05 a0 30 1d 06 03 55 1d 25 04 16 30 14 06 08 2b 06 01 05 05 07 03 02 06 08 2b 06 01 05 05 07 03 01 30 1f 06 03 55 1d 23 04 18 30 16 80 14 89 4f de 5b cc 69 e2 52 cf 3e a3 00 df b1 97 b8 1d e1 c1 46 30 0d 06 09 2a 86 48 86 f7 0d 01 01 0b 05 00 03 82 01 01 00 59 16 45 a6 9a 2e 37 79 e4 f6 dd 27 1a ba 1c 0b fd 6c d7 55 99 b5 e7 c3 6e 53 3e ff 36 59 08 43 24 c9 e7 a5 04 07 9d 39 e0 d4 29 87 ff e3 eb dd 09 c1 cf 1d 91 44 55 87 0b 57 1d d1 9b df 1d 24 f8 bb 9a 11 fe 80 fd 59 2b a0 39 8c de 11 e2 65 1e 61 8c e5 98 fa 96 e5 37 2e ef 3d 24 8a fd e1 74 63 eb bf ab b8 e4 d1 ab 50 2a 54 ec 00 64 e9 2f 78 19 66 0d 3f 27 cf 20 9e 66 7f ce 5a e2 e4 ac 99 c7 c9 38 18 f8 b2 51 07 22 df ed 97 f3 2e 3e 93 49 d4 c6 6c 9e a6 39 6d 74 44 62 a0 6b 42 c6 d5 ba 68 8e ac 3a 01 7b dd fc 8e 2c fc ad 27 cb 69 d3 cc dc a2 80 41 44 65 d3 ae 34 8c e0 f3 4a b2 fb 9c 61 83 71 31 2b 19 10 41 64 1c 23 7f 11 a5 d6 5c 84 4f 04 04 84 99 38 71 2b 95 9e d6 85 bc 5c 5d d6 45 ed 19 90 94 73 40 29 26 dc b4 0e 34 69 a1 59 41 e8 e2 cc a8 4b b6 08 46 36 a0\"\n          },\n          [\n            {\n              \"children\": [\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://dtls.xargs.org/files/server.crt\"\n                  },\n                  \"content\": \"该证书\"\n                },\n                \"采用 ASN.1 DER 编码。可以在命令行中使用以下命令转换为二进制数据：\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"$ openssl x509 -outform der < server.crt | hexdump\\n\\n0000000 30 82 03 21 30 82 02 09 a0 03 02 01 02 02 08 15\\n0000010 5a 92 ad c2 04 8f 90 30 0d 06 09 2a 86 48 86 f7\\n... snip ...\"\n              }\n            }\n          ]\n        ],\n        [\n          \"证书的扩展\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"00 00\"\n          },\n          [\n            \"服务器可以提供证书需要的扩展信息。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 - 没有扩展信息\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"记录类型\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"16\"\n          },\n          [\n            \"每一个加密的 DTLS 1.3 记录的最后一个字节都需要表明其真正的记录类型\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 类型为 0x16(22), 握手记录\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverCertificateDatagram.592f8717.js.map"}