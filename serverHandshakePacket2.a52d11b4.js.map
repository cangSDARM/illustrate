{"mappings":"mMAAAA,EAAAC,QAAiBC,KAAKC,MAAM,imM","sources":["src/QUIC/serverHandshakePacket2.json"],"sourcesContent":["[\n  \"服务器需要再发送另一个 \\\"握手\\\" 数据包，用于继续 TLS 1.3 加密会话的握手过程。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"数据包头字节\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"e5\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"e0\"\n          },\n          [\n            \"数据包以一个头字节开始，该字节应用了头保护。头部保护用于隐藏数据包序号和其他信息，使其不被外界观察到。\",\n            \"包头保护是通过用\\\"数据包头保护密钥\\\"对每个数据包的有效载荷的样本进行加密，然后将每个数据包中的某些比特和字节与所得数据进行异或(XOR)操作得到的。对于像这样的\\\"长\\\"格式数据包，受保护的部分是这个字节的低 4 位，以及数据包序号的字节（见下文）。\",\n            \"这里有一个关于如何计算出加密头字节的例子：\",\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### \\\"server header protection key\\\" from calc step above\\n$ key=2a18061c396c2828582b41b0910ed536\\n### sample is taken from 16 bytes of payload starting\\n### 4 bytes past the first byte of the packet number\\n$ sample=19681c3f0f102a30f5e647a3399abf54\\n$ echo $sample | xxd -r -p | openssl aes-128-ecb -K $key | head -c 5 | xxd -p\\n\\ne54e8fcd38\\n\\n### first byte of result is xor'd into lower 4 bits of this byte,\\n### remaining bytes are xor'd one-for-one into the bytes of\\n### the packet number (which in this packet is only one byte)\"\n              }\n            },\n            \"解密出的字节 0xE0 中的位有以下含义：\",\n            {\n              \"Tag\": \"Table\",\n              \"props\": {\n                \"headers\": [\"\", \"值\", \"含义\"],\n                \"data\": [\n                  [\"高位\", \"1\", \"Long Header 格式\"],\n                  [\"\", \"1\", \"固定位(总是被置1)\"],\n                  [\"\", \"10\", \"数据包类型：握手\"],\n                  [\"\", \"00\", \"保留(总是被置0)\"],\n                  [\n                    \"低位\",\n                    \"00\",\n                    \"数据包序号长度(表示下面的 \\\"数据包序号\\\" 将有一个字节的长度，默认值)\"\n                  ]\n                ]\n              }\n            }\n          ]\n        ],\n        [\n          \"QUIC 版本号\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 00 00 01\"\n          },\n          [\"QUIC的版本是：0x1\"]\n        ],\n        [\n          \"目的地连接标识 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"05 63 5f 63 69 64\"\n          },\n          [\n            \"服务器回传客户端的标识 ID (客户端的源连接标识 ID)。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 - 紧跟着的目的地连接标识 ID 的长度(5bytes)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"63 5f 63 69 64 - 实际的目的地连接标识 (\\\"c_cid\\\")\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"源连接标识 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"05 73 5f 63 69 64\"\n          },\n          [\n            \"服务器使用这个字段来向客户端表示它所选择的连接 ID。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"05 - 紧跟着的源连接标识 ID 的长度(5bytes)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"73 5f 63 69 64 - 实际的源连接标识 ID (\\\"s_cid\\\")\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"数据包长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"40 cf\"\n          },\n          [\n            \"服务器端表示数据包中有多少字节的加密有效载荷。这个字段是一个长度可变的整数——第一个字节的前两位表示该整数中总共有多少个字节。\",\n            \"此时，第一个字节以 \\\"0 1\\\"(0x4)这两个位开始，表示该整数共两个字节。其余的位给出数字 0xcf，表示 207 个字节的有效载荷。\"\n          ]\n        ],\n        [\n          \"数据包序号\",\n          {\n            \"props\": {\n              \"className\": \"bytes protected\",\n              \"title\": \"被数据包头保护密钥加密\"\n            },\n            \"content\": \"4f\"\n          },\n          {\n            \"props\": {\n              \"className\": \"bytes unprotected\"\n            },\n            \"content\": \"01\"\n          },\n          [\n            \"该字节应用了头保护。详见 \\\"数据包头字节\\\"。\",\n            \"这个字节的未受保护的值为 0x01，表明它是第 1 号包，或者说是服务器端发送的第二个\\\"握手\\\"包。\",\n            \"这个数据也有可能被截断。发送端点通过几个步骤截断：①计算已发送的最高的序号和未确认的最低的序号之间的差值；②出于安全考虑将差值加倍并四舍五入；③计算它在明确表示两端之间的序号的前提下可以从序号的高位删除的字节数；④截断编码后的数据包序号直至长度满足该字节数。而接收端点根据会它最近看到的数据包号码填入完整的序号。\",\n            {\n              \"children\": [\n                \"由于我们的例子对话发送的数据包很小(少于 64 个字节)，所以这种截断不会在本文中出现。详情见 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://www.rfc-editor.org/rfc/rfc9000.html#section-17.1\"\n                  },\n                  \"content\": \"RFC 9000\"\n                },\n                \"。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\",\n              \"title\": \"被\\\"握手时密钥\\\"加密\"\n            },\n            \"content\": \"44 20 f9 19 68 1c 3f 0f 10 2a 30 f5 e6 47 a3 39 9a bf 54 bc 8e 80 45 31 34 99 6b a3 30 99 05 62 42 f3 b8 e6 62 bb fc e4 2f 3e f2 b6 ba 87 15 91 47 48 9f 84 79 e8 49 28 4e 98 3f d9 05 32 0a 62 fc 7d 67 e9 58 77 97 09 6c a6 01 01 d0 b2 68 5d 87 47 81 11 78 13 3a d9 17 2b 7f f8 ea 83 fd 81 a8 14 ba e2 7b 95 3a 97 d5 7e bf f4 b4 71 0d ba 8d f8 2a 6b 49 d7 d7 fa 3d 81 79 cb db 86 83 d4 bf a8 32 64 54 01 e5 a5 6a 76 53 5f 71 c6 fb 3e 61 6c 24 1b b1 f4 3b c1 47 c2 96 f5 91 40 29 97 ed 49 aa 0c 55 e3 17 21 d0 3e 14 11 4a f2 dc 45 8a e0 39 44 de 51 26 fe 08 d6 6a 6e f3 ba\"\n          },\n          [\"这些数据使用服务器端的\\\"握手时密钥\\\"进行加密。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"2e d1 02 5f 98 fe a6 d6 02 49 98 18 46 87 dc 06\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端生成握手密钥\\\" 步骤中产生的握手时密钥和向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 0。\",\n            \"数据包开头的 20 字节(数据包头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://quic.xargs.org/files/aes_128_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### From the \\\"Handshake Keys Calc\\\" step\\n$ key=17abbf0a788f96c6986964660414e7ec\\n$ iv=09597a2ea3b04c00487e71f3\\n### from this record\\n$ recdata=e00000000105635f63696405735f63696440cf01\\n$ authtag=2ed1025f98fea6d6024998184687dc06\\n$ recordnum=1\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_128_gcm_decrypt aes_128_gcm_decrypt.c -lssl -lcrypto\\n$ cat /tmp/msg1   | ./aes_128_gcm_decrypt $iv $recordnum $key $recdata $authtag   | hexdump -C\\n\\n00000000  06 43 ff 40 b9 46 1e 8a  23 40 58 98 8e 7f 26 4d  |.C.@.F..#@X...&M|\\n00000010  7a b6 a5 1a 21 c6 29 79  b7 a6 79 f4 a0 87 70 85  |z...!.)y..y...p.|\\n... snip ...\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"加密帧帧头\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"06 43 ff 40 b9\"\n          },\n          [\n            {\n              \"children\": [\n                \"每个 QUIC 数据包在其有效载荷中包含\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/438579683\"\n                  },\n                  \"content\": \"一个或多个帧的列表\"\n                },\n                \"。例子中的数据包只包含一个帧，即 加密帧。\"\n              ]\n            },\n            \"加密帧帧头的目的是加密字节流，用于建立安全的 TLS 连接(TLS 1.3 握手)。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"06 - 表明这是 加密帧\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"43 ff - 可变长度的整数(前两位表示2字节的整数)。表示加密帧帧内字节的偏移量为 0x3ff(1024) 字节。\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"40 b9 - 长度可变的整数(前两位表示2字节的整数)，显示加密帧帧内字节长度为 0xb9(185) 字节。\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"TLS 证书验证数据(后一部分)\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"46 1e 8a 23 40 58 98 8e 7f 26 4d 7a b6 a5 1a 21 c6 29 79 b7 a6 79 f4 a0 87 70 85 6e 92 6d 37 1b 2e 89 16 9a a1 90 b8 03 63 6b b1 0c 0f b9 05 98 3d 2b 50 0a ad 26 83 df be 15 6e cc f6 66 de 1a 5a d4 5d 77 38 d5 e7 8b d1 7b c3 e6 d2 5f 9a d4 af ba 8f 81 de 9f 4d 55 72 11 8e 08 55 1a 4b b9 4b 56 a9 70 e8 04 c6 82 67 45 4b 51 7f c8 38 6c 9b ae 3a 77 cc cb 7f 29 0f 6e 58 fb a1 26 f0 53 33 a1 1f 8a b0 89 2e 6e 7a 89 58 53 82 d3 6e ef 25 29 cf 5b 7b\"\n          },\n          [\"表示验证数据的剩余部分。这一记录将在后面详细说明。\"]\n        ],\n        [\n          \"TLS 记录握手完成\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"14 00 00 20 06 8f cb 60 6a a1 c8 aa 35 4d 7b 60 64 a3 32 8c f3 76 bc d9 f3 20 0e 68 ac e3 de 2e e9 fc ac cb\"\n          },\n          [\"这一记录将在后面详细说明。\"]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["module","exports","JSON","parse"],"version":3,"file":"serverHandshakePacket2.a52d11b4.js.map"}