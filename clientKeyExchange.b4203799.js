(0,globalThis.parcelRequire7f38.register)("iojZw",function(e,a){e.exports=JSON.parse('["客户端现在可以算出自己的密钥。交换后，双方都可以根据私钥和交换过来的公钥生成共享的加密密钥了。","现在双方已经同意使用 ECDHE 的密码加解密算法(ServiceHello 的 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA)。这意味着密钥对将基于选定的椭圆曲线(**E**lliptic **C**urve)，使用 **D**iffie-**H**ellman 编码，并且密钥对是基于该次连接(**E**phemeral)，而不是使用证书上的公/私钥。",{"Tag":"AnnotationToggler"},{"Tag":"Annotations","props":{"type":"record-data","data":[["记录头",{"props":{"className":"bytes"},"content":"16 03 03 00 25"},["TLS 会话被分解成 \\"记录\\"(record) 的形式发送和接收。记录是具有类型、协议版本和长度的数据块。",{"Tag":"ul","children":[{"Tag":"li","content":"16 - 表示 TLS 记录类型 0x16(22, Handshake)"},{"Tag":"li","content":"03 03 - 协议版本 (3.3, 即 TLS 1.2)"},{"Tag":"li","content":"00 25 - 紧接着的数组载荷长度 0x025(37) 字节"}]}]],["TLS 握手记录头",{"props":{"className":"bytes"},"content":"10 00 00 21"},["每个 TLS 握手消息都以一个 type 和一个 len 开始。",{"Tag":"ul","children":[{"Tag":"li","content":"10 - 握手消息类型 0x10 (client key exchange)"},{"Tag":"li","content":"00 00 21 - 紧接着的握手消息数据的长度 0x021 (33) 字节"}]}]],["客户端公钥",{"props":{"className":"bytes"},"content":"20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54"},["\\"客户端准备密钥交换\\" 步骤中生成的公钥。",{"Tag":"ul","children":[{"Tag":"li","content":"00 20 - 公钥长度为 0x20(32) 字节"},{"Tag":"li","content":"35 80 ... 62 54 - 公钥"}]}]]]}}]')});
//# sourceMappingURL=clientKeyExchange.b4203799.js.map
