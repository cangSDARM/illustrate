{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,25H","sources":["<anon>","src/TLS13/wrappedRecord8.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"hc6Gq\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u4E3A\\u4E86\\u51CF\\u5C11\\u8FDE\\u63A5\\u88AB\\u65E0\\u6CD5\\u8BC6\\u522B\\u65B0 TLS \\u534F\\u8BAE\\u7684\\u4E2D\\u95F4\\u4EF6\\u963B\\u65AD\\u7684\\u95EE\\u9898\\uFF0C\\u52A0\\u5BC6\\u7684 TLS 1.3 \\u8BB0\\u5F55\\u90FD\\u9700\\u8981\\u4F2A\\u88C5\\u6210\\u4E00\\u4E2A\\u4F1A\\u8BDD\\u6062\\u590D\\u6210\\u529F\\u7684 TLS 1.2 \\u4F1A\\u8BDD\\u8BB0\\u5F55(\\u4E4B\\u6240\\u4EE5\\u4E0D\\u662F\\u4F2A\\u88C5\\u6210\\u63E1\\u624B\\u8BB0\\u5F55\\uFF0C\\u56E0\\u4E3A\\u63E1\\u624B\\u8BB0\\u5F55\\u8FC7\\u957F\\u4F1A\\u4F7F\\u5F97\\u517C\\u5BB9\\u5B9E\\u73B0\\u53D8\\u5F97\\u5F02\\u5E38\\u590D\\u6742)\\u3002\",\"\\u5305\\u88C5\\u7684\\u5B9E\\u9645\\u8BB0\\u5F55\\u5185\\u5BB9\\u5C06\\u5728\\u4E0B\\u9762\\u5355\\u72EC\\u5217\\u51FA\\u3002\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"17 03 03 00 ea\"},[\"\\u6B64 TLS 1.3 \\u8BB0\\u5F55\\u88AB\\u4F2A\\u88C5\\u4E3A TLS 1.2 \\u7684\\\\\"\\u4F1A\\u8BDD\\u8BB0\\u5F55\\\\\"\\u3002\\u56E0\\u6B64\\u5185\\u5BB9\\u4F1A\\u4EE5\\u4F1A\\u8BDD\\u8BB0\\u5F55\\u7684\\u89C4\\u683C\\u5C55\\u793A\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"17 - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x17(23, application data)\"},{\"Tag\":\"li\",\"content\":\"03 03 - \\u534F\\u8BAE\\u7248\\u672C (3.3, \\u5373 TLS 1.2)\"},{\"Tag\":\"li\",\"content\":\"00 ea - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0x0ea(234) \\u5B57\\u8282\"}]}]],[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"38 ad fb 1d 01 fd 95 a6 03 85 e8 bb f1 fd 8d cb 46 70 98 97 e7 d6 74 c2 f7 37 0e c1 1d 8e 33 eb 4f 4f e7 f5 4b f4 dc 0b 92 fa e7 42 1c 33 c6 45 3c eb c0 73 15 96 10 a0 97 40 ab 2d 05 6f 8d 51 cf a2 62 00 7d 40 12 36 da fc 2f 72 92 ff 0c c8 86 a4 ef 38 9f 2c ed 12 26 c6 b4 dc f6 9d 99 4f f9 14 8e f9 69 bc 77 d9 43 3a b1 d3 a9 32 54 21 82 82 9f 88 9a d9 5f 04 c7 52 f9 4a ce 57 14 6a 5d 84 b0 42 bf b3 48 5a 64 e7 e9 57 b0 89 80 cd 08 ba f9 69 8b 89 29 98 6d 11 74 d4 aa 6d d7 a7 e8 c0 86 05 2c 3c 76 d8 19 34 bd f5 9b 96 6e 39 20 31 f3 47 1a de bd dd db e8 4f cf 1f f4 08 84 6a e9 b2 8c a4 a9 e7 28 84 4a 49 3d 80 45 5d 6e af f2 05 b4 0a 1e f1 85 74 ef\"},[\"\\u8FD9\\u4E2A\\u6570\\u636E\\u662F\\u7528\\u670D\\u52A1\\u5668\\u7AEF\\u7684\\u4F1A\\u8BDD\\u65F6\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u3002\"]],[\"AEAD \\u9274\\u522B\\u6807\\u7B7E\",{\"props\":{\"className\":\"bytes\"},\"content\":\"c0 b9 6a d3 83 af bd 8d fc 86 f8 08 7c 1f 7d c8\"},[{\"children\":[\"\\u8FD9\\u662F \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD \\u7B97\\u6CD5\"},\"\\u7684\\u9274\\u522B\\u6807\\u7B7E\\uFF0C\\u7528\\u4EE5\\u786E\\u8BA4\\u52A0\\u5BC6\\u6570\\u636E\\u548C\\u6570\\u636E\\u5305\\u5934\\u7684\\u5B8C\\u6574\\u6027\\u3002\\u5B83\\u7531\\u52A0\\u5BC6\\u7B97\\u6CD5\\u4EA7\\u751F\\uFF0C\\u5E76\\u7531\\u89E3\\u5BC6\\u7B97\\u6CD5\\u6D88\\u8017\\u3002\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"\\u89E3\\u5BC6\\u540E\\u7684\\u6570\\u636E\\u8F7D\\u8377\"},[{\"Tag\":\"h4\",\"content\":\"\\u89E3\\u5BC6\"},\"\\u6570\\u636E\\u88AB \\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u751F\\u6210\\u4F1A\\u8BDD\\u5BC6\\u94A5\\\\\" \\u6B65\\u9AA4\\u4E2D\\u4EA7\\u751F\\u7684\\u63E1\\u624B\\u65F6\\u5BC6\\u94A5\\u548C\\u63E1\\u624B\\u65F6\\u5411\\u91CF(IVs)\\u52A0\\u5BC6\\u3002IVs \\u901A\\u8FC7\\u5BC6\\u94A5\\u548C\\u5DF2\\u7ECF\\u7528\\u5BC6\\u94A5\\u52A0\\u5BC6\\u7684\\u8BB0\\u5F55\\u957F\\u5EA6\\u8FDB\\u884C\\u5F02\\u6216\\u64CD\\u4F5C\\u751F\\u6210\\u3002\\u5728\\u4F8B\\u5B50\\u4E2D IV \\u4E3A 0\\u3002\",\"\\u6570\\u636E\\u5305\\u5F00\\u5934\\u7684 5 \\u5B57\\u8282(\\u8BB0\\u5F55\\u5934)\\u8FD8\\u4F1A\\u4F5C\\u4E3A\\u89E3\\u5BC6\\u8FC7\\u7A0B\\u89E3\\u5BC6\\u6210\\u529F\\u65F6\\u5FC5\\u987B\\u6EE1\\u8DB3\\u7684\\u8BA4\\u8BC1\\u6761\\u4EF6\\u3002\",{\"children\":[\"openssl \\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u8FD8\\u4E0D\\u652F\\u6301 AEAD \\u7B97\\u6CD5\\u52A0\\u89E3\\u5BC6(AEAD ciphers)\\uFF0C\\u4F60\\u53EF\\u4EE5\\u4F7F\\u7528\\u4F5C\\u8005\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\u6765\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tls13.xargs.org/files/aes_256_gcm_decrypt.c\"},\"content\":\"\\u89E3\\u5BC6\"},\"\\u548C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tls13.xargs.org/files/aes_256_gcm_encrypt.c\"},\"content\":\"\\u52A0\\u5BC6\"},\"\\u8FD9\\u4E9B\\u6570\\u636E\\u3002\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Server Application Keys Calc\\\\\" step\\\\n$ key=01f78623f17e3edcc09e944027ba3218d57c8e0db93cd3ac419309274700ac27\\\\n$ iv=196a750b0c5049c0cc51a541\\\\n### from this record\\\\n$ recdata=17030300ea\\\\n$ authtag=c0b96ad383afbd8dfc86f8087c1f7dc8\\\\n$ recordnum=1\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_256_gcm_decrypt aes_256_gcm_decrypt.c -lssl -lcrypto\\\\n$ echo \\\\\"38 ad fb 1d 01 fd 95 a6 03 85 e8 bb f1 fd 8d cb 46 70\\\\n  ... snip ...\\\\n  b4 0a 1e f1 85 74 ef\\\\\" | xxd -r -p > /tmp/msg5\\\\n$ cat /tmp/msg5 \\\\\\\\\\\\n  | ./aes_256_gcm_decrypt $iv $recordnum $key $recdata $authtag \\\\\\\\\\\\n  | hexdump -C\\\\n\\\\n00000000  04 00 00 d5 00 00 1c 20  00 00 00 00 08 00 00 00  |....... ........|\\\\n00000010  00 00 00 00 01 00 c0 41  42 43 44 45 46 47 48 49  |.......ABCDEFGHI|\\\\n... snip ...\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u52A0\\u5BC6\\u7684\\u6570\\u636E\\u8F7D\\u8377\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"04 00 00 d5 00 00 1c 20 00 00 00 00 08 00 00 00 00 00 00 00 01 00 c0 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 00 49 56 44 41 54 41 49 56 44 41 54 41 00 41 45 53 cb 11 9d 4d bd 2a 21 ec c2 26 a6 09 0e e8 ca 58 df 09 03 9b 35 96 f4 de 79 98 0e a3 25 d5 14 62 5c 0c 21 c5 0f 03 26 1d c4 2c e7 c5 97 0c 4c 01 16 06 fb 99 8a 86 c3 fa 30 e5 5e ea 91 f1 ff f3 18 fc 7b d5 88 31 bf 49 c8 8d 7b 59 05 91 a6 5c 7d e8 cf c6 77 46 8a 54 fd be c0 d8 53 be 20 21 c8 bb fc db e5 1f 5d 9a 0c 70 85 84 1a 01 e4 95 85 f6 8b 4a fe e1 d7 07 e2 cb b1 a0 b4 23 aa 7e 32 d5 60 7b d9 9d d4 db 3c 9a aa ed 43 d3 5d 26 b4 b1 c6 84 71 71 ea a0 7a 9b c8 cb f7 58 49 9a 00 00\"},[\"\\u8BE5\\u8F7D\\u8377\\u7684\\u89E3\\u91CA\\u8BE6\\u89C1\\u4E0B\\u9762\\u7684\\\\\"\\u670D\\u52A1\\u5668\\u7AEF\\u7B2C\\u4E8C\\u4E2A\\u4F1A\\u8BDD\\u8BB0\\u5F55\\u5355\\\\\"\\u90E8\\u5206\"]],[\"\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"16\"},[\"\\u6BCF\\u4E00\\u4E2A\\u4F2A\\u88C5\\u7684 TLS 1.3 \\u8BB0\\u5F55\\u7684\\u6700\\u540E\\u4E00\\u4E2A\\u5B57\\u8282\\u90FD\\u9700\\u8981\\u8868\\u660E\\u5176\\u771F\\u6B63\\u7684\\u8BB0\\u5F55\\u7C7B\\u578B\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u7C7B\\u578B\\u4E3A 0x16(22, handshake record)\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=wrappedRecord8.13c1c732.js.map\n","[\n  \"为了减少连接被无法识别新 TLS 协议的中间件阻断的问题，加密的 TLS 1.3 记录都需要伪装成一个会话恢复成功的 TLS 1.2 会话记录(之所以不是伪装成握手记录，因为握手记录过长会使得兼容实现变得异常复杂)。\",\n  \"包装的实际记录内容将在下面单独列出。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"17 03 03 00 ea\"\n          },\n          [\n            \"此 TLS 1.3 记录被伪装为 TLS 1.2 的\\\"会话记录\\\"。因此内容会以会话记录的规格展示。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"17 - 表示 TLS 记录类型 0x17(23, application data)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 03 - 协议版本 (3.3, 即 TLS 1.2)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 ea - 紧接着的数组载荷长度 0x0ea(234) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"38 ad fb 1d 01 fd 95 a6 03 85 e8 bb f1 fd 8d cb 46 70 98 97 e7 d6 74 c2 f7 37 0e c1 1d 8e 33 eb 4f 4f e7 f5 4b f4 dc 0b 92 fa e7 42 1c 33 c6 45 3c eb c0 73 15 96 10 a0 97 40 ab 2d 05 6f 8d 51 cf a2 62 00 7d 40 12 36 da fc 2f 72 92 ff 0c c8 86 a4 ef 38 9f 2c ed 12 26 c6 b4 dc f6 9d 99 4f f9 14 8e f9 69 bc 77 d9 43 3a b1 d3 a9 32 54 21 82 82 9f 88 9a d9 5f 04 c7 52 f9 4a ce 57 14 6a 5d 84 b0 42 bf b3 48 5a 64 e7 e9 57 b0 89 80 cd 08 ba f9 69 8b 89 29 98 6d 11 74 d4 aa 6d d7 a7 e8 c0 86 05 2c 3c 76 d8 19 34 bd f5 9b 96 6e 39 20 31 f3 47 1a de bd dd db e8 4f cf 1f f4 08 84 6a e9 b2 8c a4 a9 e7 28 84 4a 49 3d 80 45 5d 6e af f2 05 b4 0a 1e f1 85 74 ef\"\n          },\n          [\"这个数据是用服务器端的会话时密钥加密的。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"c0 b9 6a d3 83 af bd 8d fc 86 f8 08 7c 1f 7d c8\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端生成会话密钥\\\" 步骤中产生的握手时密钥和握手时向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 0。\",\n            \"数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tls13.xargs.org/files/aes_256_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tls13.xargs.org/files/aes_256_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Server Application Keys Calc\\\" step\\n$ key=01f78623f17e3edcc09e944027ba3218d57c8e0db93cd3ac419309274700ac27\\n$ iv=196a750b0c5049c0cc51a541\\n### from this record\\n$ recdata=17030300ea\\n$ authtag=c0b96ad383afbd8dfc86f8087c1f7dc8\\n$ recordnum=1\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_256_gcm_decrypt aes_256_gcm_decrypt.c -lssl -lcrypto\\n$ echo \\\"38 ad fb 1d 01 fd 95 a6 03 85 e8 bb f1 fd 8d cb 46 70\\n  ... snip ...\\n  b4 0a 1e f1 85 74 ef\\\" | xxd -r -p > /tmp/msg5\\n$ cat /tmp/msg5 \\\\\\n  | ./aes_256_gcm_decrypt $iv $recordnum $key $recdata $authtag \\\\\\n  | hexdump -C\\n\\n00000000  04 00 00 d5 00 00 1c 20  00 00 00 00 08 00 00 00  |....... ........|\\n00000010  00 00 00 00 01 00 c0 41  42 43 44 45 46 47 48 49  |.......ABCDEFGHI|\\n... snip ...\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"04 00 00 d5 00 00 1c 20 00 00 00 00 08 00 00 00 00 00 00 00 01 00 c0 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 00 49 56 44 41 54 41 49 56 44 41 54 41 00 41 45 53 cb 11 9d 4d bd 2a 21 ec c2 26 a6 09 0e e8 ca 58 df 09 03 9b 35 96 f4 de 79 98 0e a3 25 d5 14 62 5c 0c 21 c5 0f 03 26 1d c4 2c e7 c5 97 0c 4c 01 16 06 fb 99 8a 86 c3 fa 30 e5 5e ea 91 f1 ff f3 18 fc 7b d5 88 31 bf 49 c8 8d 7b 59 05 91 a6 5c 7d e8 cf c6 77 46 8a 54 fd be c0 d8 53 be 20 21 c8 bb fc db e5 1f 5d 9a 0c 70 85 84 1a 01 e4 95 85 f6 8b 4a fe e1 d7 07 e2 cb b1 a0 b4 23 aa 7e 32 d5 60 7b d9 9d d4 db 3c 9a aa ed 43 d3 5d 26 b4 b1 c6 84 71 71 ea a0 7a 9b c8 cb f7 58 49 9a 00 00\"\n          },\n          [\"该载荷的解释详见下面的\\\"服务器端第二个会话记录单\\\"部分\"]\n        ],\n        [\n          \"记录类型\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"16\"\n          },\n          [\n            \"每一个伪装的 TLS 1.3 记录的最后一个字节都需要表明其真正的记录类型\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 类型为 0x16(22, handshake record)\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"wrappedRecord8.13c1c732.js.map"}