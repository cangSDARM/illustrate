("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire7f38.register("czNvM",(function(t,n){t.exports=JSON.parse('["加密会话以 TLS 的 \\"ClientHello\\" 开始。客户端提供的信息包括以下内容：",{"Tag":"ul","children":[{"Tag":"li","content":"客户端随机数(在随后的握手时使用)"},{"Tag":"li","content":"客户端支持的加解密算法的列表"},{"Tag":"li","content":"用于密钥交换的公钥"},{"Tag":"li","content":"客户端支持的协议版本"}]},{"Tag":"AnnotationToggler"},{"Tag":"Annotations","props":{"type":"record-data","data":[["TLS 握手消息头",{"props":{"className":"bytes"},"content":"01 00 00 ea"},["每个 TLS 握手消息都以一个 type 和一个 len 开始。",{"Tag":"ul","children":[{"Tag":"li","content":"01 - 握手消息类型 0x01 (client hello)"},{"Tag":"li","content":"00 00 ea - 紧接着的 client hello 数据的长度 0xEA (234) 字节"}]}]],["客户端 TLS 协议版本号",{"props":{"className":"bytes"},"content":"03 03"},["协议版本为 \\"3,3\\"(指 TLS 1.2)。因为被广泛部署的中间件(middleboxes)并不允许他们不承认的协议版本，所以所有的 TLS 1.3 会话在这个字段中都以 TLS 1.2 版本表示。也因为如此，这个字段不再被使用，而是使用下面的 \\"支持的版本\\" 扩展来进行版本协商。","而不寻常的版本号(\\"3,3\\" 代表 TLS 1.2)是由于 TLS 1.0 是 SSL 3.0 协议的一个小修订。因此，TLS 1.0 用 \\"3,1\\" 表示，TLS 1.1 用 \\"3,2\\"，以此类推。"]],["客户端随机数",{"props":{"className":"bytes"},"content":"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f"},["客户端提供的 32 字节的随机数。这个数将在之后的会话中使用。在本文的例子中，我们暂时将一个方便记忆的字符串当作随机数。"]],["会话 ID (废弃)",{"props":{"className":"bytes"},"content":"00"},["这是一个废弃(legacy)字段，不在 QUIC 中使用。",{"Tag":"ul","children":[{"Tag":"li","content":"00 - 0 字节的会话 ID"}]}]],["加解密算法列表",{"props":{"className":"bytes"},"content":"00 06 13 01 13 02 13 03"},["客户端提供一个有序的列表，以说明它支持哪些加解密算法进行加密。该列表是按照客户端的偏好顺序排列的，以最高偏好为先。",{"Tag":"ul","children":[{"Tag":"li","content":"00 06 - 6 字节的加解密算法列表数据"},{"Tag":"li","content":"13 01 - 代表 TLS_AES_128_GCM_SHA256"},{"Tag":"li","content":"13 02 - 代表 TLS_AES_256_GCM_SHA384"},{"Tag":"li","content":"13 03 - 代表 TLS_CHACHA20_POLY1305_SHA256"}]},{"children":["完整加解密算法列表请查看 ",{"Tag":"a","props":{"href":"https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml"},"content":"IANA tls-parameters"}," 的 TLS Cipher Suites 部分。"]}]],["压缩算法",{"props":{"className":"bytes"},"content":"01 00"},[{"children":["以前的 TLS 版本支持压缩，这被发现会泄露加密数据的信息(见 ",{"Tag":"a","props":{"href":"https://zhuanlan.zhihu.com/p/333314023"},"content":"CRIME/BREACH 攻击"},")。"]},"TLS 1.3 不再允许压缩。所以这个字段不会变化：采用 \\"null\\" 压缩算法，对数据不做任何改变。",{"Tag":"ul","children":[{"Tag":"li","content":"01 - 1 字节的压缩算法长度"},{"Tag":"li","content":"00 - 代表 \\"没有\\"(null) 压缩算法"}]}]],["扩展的长度",{"props":{"className":"bytes"},"content":"00 bb"},["客户端提供了一个可选的扩展列表，服务器可以根据它来采取某些行动或启用某些特性。",{"Tag":"ul","children":[{"Tag":"li","content":"00 bb - 扩展列表的长度为 0xBB(187) 字节"}]},"每个扩展将以两个字节开始，表明它是哪个扩展。然后是两个字节的内容长度字段，最后是扩展的具体内容。"]],["扩展 - 服务器名称指示",{"props":{"className":"bytes"},"content":"00 00 00 18 00 16 00 00 13 65 78 61 6d 70 6c 65 2e 75 6c 66 68 65 69 6d 2e 6e 65 74"},["(例子中的)客户端提供了它想要联系的服务器的名称，也被称为 SNI(服务器名称指示)。","如果没有这个扩展，HTTPS 服务器将无法为一个 IP 地址上的多个主机名(虚拟主机)提供服务。因为它在 TLS 会话协商结束、HTTP 请求发出后才知道要发送哪个主机名的证书。",{"Tag":"ul","children":[{"Tag":"li","content":"00 00 - 表示这是 \\"服务器名称发现\\" 扩展"},{"Tag":"li","content":"00 18 - 扩展信息长度为 0x18(24) 字节 "},{"Tag":"li","content":"00 16 - 第一个(也是唯一的)列表条目长度为 0x16(22) 字节"},{"Tag":"li","content":"00 - 0x00 表示这是 \\"主机名\\" 列表"},{"Tag":"li","content":"00 13 - 主机名列表的长度为 0x13(19) 字节"},{"Tag":"li","content":"65 78 61 ... 6e 65 74 - 主机名：\\"example.ulfheim.net\\""}]}]],["扩展 - 支持的组",{"props":{"className":"bytes"},"content":"00 0a 00 08 00 06 00 1d 00 17 00 18"},["(例子中的)客户端表示它支持三种类型的椭圆曲线算法(ECC)。为了使这个扩展对其他密码学类型更加通用，因此称这些为 \\"支持的组\\" 而不是 \\"支持的曲线\\"。","这个列表同样是按照客户端的偏好降序排列的。",{"Tag":"ul","children":[{"Tag":"li","content":"00 0a - 表示这是 \\"支持的组\\" 扩展"},{"Tag":"li","content":"00 08 - 扩展信息长度为 0x08(8) 字节 "},{"Tag":"li","content":"00 06 - 曲线列表条目长度为 0x06(6) 字节"},{"Tag":"li","content":"00 1d - 代表 x25519 曲线"},{"Tag":"li","content":"00 17 - 代表 secp256r1 曲线"},{"Tag":"li","content":"00 18 - 代表 secp384r1 曲线"}]}]],["扩展 - ALPN 协议",{"props":{"className":"bytes"},"content":"00 10 00 0b 00 09 08 70 69 6e 67 2f 31 2e 30"},["应用层协议协商，即 ALPN，被 QUIC 用来在服务器和客户端之间协商支持的协议和版本。","对应的应用层协议可能是：\\"http/1.1\\"、\\"h2\\"(HTTP/2)或 \\"h3\\"(HTTP/3)。",{"Tag":"ul","children":[{"Tag":"li","content":"00 10 - 表示这是 \\"ALPN\\" 扩展"},{"Tag":"li","content":"00 0b - 扩展信息长度为 0xb(11) 字节 "},{"Tag":"li","content":"00 09 - ALPN 条目长度为 0x09(9) 字节"},{"Tag":"li","content":"08 - 协议名称长度为 0x08(8) 字节"},{"Tag":"li","content":"70 69 ... 2e 30 - 字符串 \\"ping/1.0\\""}]}]],["扩展 - 签名算法列表",{"props":{"className":"bytes"},"content":"00 0d 00 14 00 12 04 03 08 04 04 01 05 03 08 05 05 01 08 06 06 01 02 01"},["这个扩展表示客户端支持哪些签名算法。这可能会影响到服务器提交给客户端的证书，以及服务器在 CertificateVerify 记录中发送的签名。","这个列表同样是按照客户端的偏好降序排列的。",{"Tag":"ul","children":[{"Tag":"li","content":"00 0d - 表示这是 \\"签名算法列表\\" 扩展"},{"Tag":"li","content":"00 14 - 扩展信息长度为 0x14(20) 字节 "},{"Tag":"li","content":"00 12 - 算法列表长度为 0x12(18) 字节"},{"Tag":"li","content":"04 03 - 代表 ECDSA-SECP256r1-SHA256 算法"},{"Tag":"li","content":"08 04 - 代表 RSA-PSS-RSAE-SHA256 算法"},{"Tag":"li","content":"04 01 - 代表 RSA-PKCS1-SHA256 算法"},{"Tag":"li","content":"05 03 - 代表 ECDSA-SECP384r1-SHA384 算法"},{"Tag":"li","content":"08 05 - 代表 RSA-PSS-RSAE-SHA384 算法"},{"Tag":"li","content":"05 01 - 代表 RSA-PKCS1-SHA384 算法"},{"Tag":"li","content":"08 06 - 代表 RSA-PSS-RSAE-SHA512 算法"},{"Tag":"li","content":"06 01 - 代表 RSA-PKCS1-SHA512 算法"},{"Tag":"li","content":"02 01 - 代表 RSA-PKCS1-SHA1 算法"}]}]],["扩展 - 算法公钥列表(Key Share)",{"props":{"className":"bytes"},"content":"00 33 00 26 00 24 00 1d 00 20 35 80 72 d6 36 58 80 d1 ae ea 32 9a df 91 21 38 38 51 ed 21 a2 8e 3b 75 e9 65 d0 d2 cd 16 62 54"},["客户端会给某些它认为服务器也会支持的算法发送对应的短暂的公钥。这允许在 ClientHello 和 ServerHello 消息之后的其余握手动作消息被加密。而不用像以前的协议版本，以透明的方式发送握手消息。",{"Tag":"ul","children":[{"Tag":"li","content":"00 33 - 表示这是 \\"算法公钥列表\\" 扩展"},{"Tag":"li","content":"00 26 - 扩展信息长度为 0x26(38) 字节 "},{"Tag":"li","content":"00 24 - 算法公钥列表长度为 0x24(36) 字节"},{"Tag":"li","content":"00 1d - 代表 x25519 算法(例子中为通过 curve25519 算法进行密钥交换)"},{"Tag":"li","content":"00 20 - 公钥长度为 0x20(32) 字节"},{"Tag":"li","content":"35 80 ... 62 54 - \\"客户端准备密钥交换\\" 步骤中生成的公钥"}]}]],["扩展 - PSK 密钥交换模型协商",{"props":{"className":"bytes"},"content":"00 2d 00 02 01 01"},["客户端指出从预共享密钥(PSKs)建立密钥的可用模式。由于例子中的会话中不使用 PSK，因此这个扩展没有影响。",{"Tag":"ul","children":[{"Tag":"li","content":"00 2d - 表示这是 \\"PSK 密钥交换模型协商\\" 扩展"},{"Tag":"li","content":"00 02 - 扩展信息长度为 0x02(2) 字节 "},{"Tag":"li","content":"01 - RSK 模型长度为 0x01(1) 字节"},{"Tag":"li","content":"01 - 代表 PSK with (EC)DHE key establishment"}]}]],["扩展 - 支持的版本",{"props":{"className":"bytes"},"content":"00 2b 00 03 02 03 04"},["客户端表明其支持 TLS 1.3。由于兼容性的原因，这被放在一个扩展中，而不是上面的客户端版本字段。",{"Tag":"ul","children":[{"Tag":"li","content":"00 2b - 表示这是 \\"支持的版本\\" 扩展"},{"Tag":"li","content":"00 03 - 扩展信息长度为 0x03(3) 字节 "},{"Tag":"li","content":"02 - TLS 版本长度为 0x02(2) 字节"},{"Tag":"li","content":"03 04 - 代表 TLS 1.3"}]}]],["扩展 - QUIC 协议参数",{"props":{"className":"bytes"},"content":"00 39 00 31 03 04 80 00 ff f7 04 04 80 a0 00 00 05 04 80 10 00 00 06 04 80 10 00 00 07 04 80 10 00 00 08 01 0a 09 01 0a 0a 01 03 0b 01 19 0f 05 63 5f 63 69 64"},["这里给出了客户端对 QUIC 连接的配置值。它们被放入该记录中而不是初始数据包的头部中，是因为 TLS 记录中的所有数据都会被加密保护，不会被篡改。","以下是例子中的 QUIC 的设置参数：",{"Tag":"CodeSample","props":{"code":"max_udp_payload_size: 65527\\ninitial_max_data: 10485760\\ninitial_max_stream_data_bidi_local: 1048576\\ninitial_max_stream_data_bidi_remote: 1048576\\ninitial_max_stream_data_uni: 1048576\\ninitial_max_streams_bidi: 10\\ninitial_max_streams_uni: 10\\nack_delay_exponent: 3\\ninitial_source_connection_id: \\"c_cid\\""}},"以下是相关字节的完整列表和解释：",{"Tag":"ul","children":[{"Tag":"li","content":"00 39 - 表示这是 \\"QUIC 协议参数\\" 扩展"},{"Tag":"li","content":"00 31 - 扩展信息长度为 0x31(49) 字节 "},{"Tag":"li","content":"03 - 代表 max_udp_payload_size 参数"},{"Tag":"li","content":"04 - max_udp_payload_size 参数长度为 0x04(4) 字节"},{"Tag":"li","content":"80 00 ff f7 - 参数值 0xfff7 (65527)"},{"Tag":"li","content":"04 - 代表 initial_max_data 参数"},{"Tag":"li","content":"04 - initial_max_data 参数长度为 0x04(4) 字节"},{"Tag":"li","content":"80 a0 00 00 - 参数值 0xa00000 (10485760)"},{"Tag":"li","content":"05 - 代表 initial_max_stream_data_bidi_local 参数"},{"Tag":"li","content":"04 - initial_max_stream_data_bidi_local 参数长度为 0x04(4) 字节"},{"Tag":"li","content":"80 10 00 00 - 参数值 0x100000 (1048576)"},{"Tag":"li","content":"06 - 代表 initial_max_stream_data_bidi_remote 参数"},{"Tag":"li","content":"04 - initial_max_stream_data_bidi_remote 参数长度为 0x04(4) 字节"},{"Tag":"li","content":"80 10 00 00 - 参数值 0x100000 (1048576)"},{"Tag":"li","content":"07 - 代表 initial_max_stream_data_uni 参数"},{"Tag":"li","content":"04 - initial_max_stream_data_bidi_remote 参数长度为 0x04(4) 字节"},{"Tag":"li","content":"80 10 00 00 - 参数值 0x100000 (1048576)"},{"Tag":"li","content":"08 - 代表 initial_max_streams_bidi 参数"},{"Tag":"li","content":"01 - initial_max_streams_bidi 参数长度为 0x01(1) 字节"},{"Tag":"li","content":"0a - 参数值 0xA (10)"},{"Tag":"li","content":"09 - 代表 initial_max_streams_uni 参数"},{"Tag":"li","content":"01 - initial_max_streams_uni 参数长度为 0x01(1) 字节"},{"Tag":"li","content":"0a - 参数值 0xA (10)"},{"Tag":"li","content":"0a - 代表 ack_delay_exponent 参数"},{"Tag":"li","content":"01 - ack_delay_exponent 参数长度为 0x01(1) 字节"},{"Tag":"li","content":"03 - 参数值 0x03 (3)"},{"Tag":"li","children":["0a - 代表 GREASE 参数。",{"Tag":"a","props":{"href":"https://zhuanlan.zhihu.com/p/343562875"},"content":"GREASE"}," 是一种用于防止中间盒不允许新扩展的技术，通过预先保留扩展值并将其随机地注入连接中来解决。"]},{"Tag":"li","content":"01 - GREASE 参数长度为 0x01(1) 字节"},{"Tag":"li","content":"19 - 参数值 0x19 (25)"},{"Tag":"li","content":"0f - 代表 initial_source_connection_id 参数"},{"Tag":"li","content":"05 - initial_source_connection_id 参数长度为 0x05(5) 字节"},{"Tag":"li","content":"63 5f 63 69 64 - 数据包头中源连接标识 ID 的副本(s_cid)"}]}]]]}}]')}));
//# sourceMappingURL=tls-clientHello.36f86888.js.map
