{"mappings":"mMAAAA,EAAAC,QAAiBC,KAAKC,MAAM,47D","sources":["src/TLS13/clientHandshakeFinished.json"],"sourcesContent":["[\n  \"为了验证握手成功且没有被篡改过，客户端和服务器端一样，需要创建一些验证数据给服务器端确认。验证数据是基于所有握手信息的哈希值计算得到。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"握手消息头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"14 00 00 30\"\n          },\n          [\n            \"每个握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"14 - 握手消息类型 0x14 (finished)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 30 - 紧接着的握手消息数据的长度 0x30 (48) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"验证数据\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"bf f5 6a 67 1b 6c 65 9d 0a 7c 5d d1 84 28 f5 8b dd 38 b1 84 a3 ce 34 2d 9f de 95 cb d5 05 6f 7d a7 91 8e e3 20 ea b7 a9 3a bd 8f 1c 02 45 4d 27\"\n          },\n          [\n            \"使用 \\\"客户端生成握手密钥\\\" 步骤中的客户端密文和在这之前的每个握手记录(ClientHello 到 服务器端握手结束)的 SHA256 哈希值生成。\",\n            {\n              \"Tag\": \"pre\",\n              \"children\": [\n                {\n                  \"Tag\": \"code\",\n                  \"props\": { \"className\": \"longboi\" },\n                  \"content\": \"finished_key = HKDF-Expand-Label(key: client_secret, label: \\\"finished\\\", ctx: \\\"\\\", len: 48)\\nfinished_hash = SHA384(Client Hello ... Server Finished)\\nverify_data = HMAC-SHA384(key: finished_key, msg: finished_hash)\"\n                }\n              ]\n            },\n            {\n              \"children\": [\n                \"在命令行中使用\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tls13.xargs.org/files/hkdf-384.sh\"\n                  },\n                  \"content\": \"原作者制作的 HKDF 命令行脚本\"\n                },\n                \"，你也可以自己试试：\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### find the hash of the conversation to this point, excluding\\n### 5-byte record headers or 1-byte wrapped record trailers\\n$ fin_hash=$((\\n    tail -c +6 clienthello;\\n    tail -c +6 serverhello;\\n    perl -pe 's/.$// if eof' serverextensions;\\n    perl -pe 's/.$// if eof' servercert;\\n    perl -pe 's/.$// if eof' servercertverify;\\n    perl -pe 's/.$// if eof' serverfinished) | openssl sha384)\\n$ cht_secret=db89d2d6df0e84fed74a2288f8fd4d0959f790ff23946cdf4c26d85e51bebd42ae184501972f8d30c4a3e4a3693d0ef0\\n$ fin_key=$(./hkdf-384 expandlabel $cht_secret \\\"finished\\\" \\\"\\\" 48)\\n$ echo $fin_hash | xxd -r -p \\\\\\n    | openssl dgst -sha384 -mac HMAC -macopt hexkey:$fin_key\\n\\nbff56a671b6c659d0a7c5dd18428f58bdd38b184a3ce342d9fde95cbd5056f7da7918ee320eab7a93abd8f1c02454d27\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["module","exports","JSON","parse"],"version":3,"file":"clientHandshakeFinished.2116f57d.js.map"}