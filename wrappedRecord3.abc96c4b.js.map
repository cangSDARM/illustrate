{"mappings":"A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,Q,C,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAA,CAAM,6xI","sources":["<anon>","src/TLS13/wrappedRecord3.json"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nparcelRequire.register(\"ab2OB\", function(module, exports) {\nmodule.exports = JSON.parse('[\"为了减少连接被无法识别新 TLS 协议的中间件阻断的问题，加密的 TLS 1.3 记录都需要伪装成一个会话恢复成功的 TLS 1.2 会话记录(之所以不是伪装成握手记录，因为握手记录过长会使得兼容实现变得异常复杂)。\",\"包装的实际记录内容将在下面单独列出。\",{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"记录头\",{\"props\":{\"className\":\"bytes\"},\"content\":\"17 03 03 01 19\"},[\"此 TLS 1.3 记录被伪装为 TLS 1.2 的\\\\\"会话记录\\\\\"。因此内容会以会话记录的规格展示。\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"17 - 表示 TLS 记录类型 0x17(23, application data)\"},{\"Tag\":\"li\",\"content\":\"03 03 - 协议版本 (3.3, 即 TLS 1.2)\"},{\"Tag\":\"li\",\"content\":\"01 19 - 紧接着的数组载荷长度 0x119(281) 字节\"}]}]],[\"加密的数据载荷\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"73 71 9f ce 07 ec 2f 6d 3b ba 02 92 a0 d4 0b 27 70 c0 6a 27 17 99 a5 33 14 f6 f7 7f c9 5c 5f e7 b9 a4 32 9f d9 54 8c 67 0e be ea 2f 2d 5c 35 1d d9 35 6e f2 dc d5 2e b1 37 bd 3a 67 65 22 f8 cd 0f b7 56 07 89 ad 7b 0e 3c ab a2 e3 7e 6b 41 99 c6 79 3b 33 46 ed 46 cf 74 0a 9f a1 fe c4 14 dc 71 5c 41 5c 60 e5 75 70 3c e6 a3 4b 70 b5 19 1a a6 a6 1a 18 fa ff 21 6c 68 7a d8 d1 7e 12 a7 e9 99 15 a6 11 bf c1 a2 be fc 15 e6 e9 4d 78 46 42 e6 82 fd 17 38 2a 34 8c 30 10 56 b9 40 c9 84 72 00 40 8b ec 56 c8 1e a3 d7 21 7a b8 e8 5a 88 71 53 95 89 9c 90 58 7f 72 e8 dd d7 4b 26 d8 ed c1 c7 c8 37 d9 f2 eb bc 26 09 62 21 90 38 b0 56 54 a6 3a 0b 12 99 9b 4a 83 06 a3 dd cc 0e 17 c5 3b a8 f9 c8 03 63 f7 84 13 54 d2 91 b4 ac e0 c0 f3 30 c0 fc d5 aa 9d ee f9 69 ae 8a b2 d9 8d a8 8e bb 6e a8 0a 3a 11 f0 0e a2\"},[\"这个数据是用服务器端的握手时密钥加密的。\"]],[\"AEAD 鉴别标签\",{\"props\":{\"className\":\"bytes\"},\"content\":\"96 a3 23 23 67 ff 07 5e 1c 66 dd 9c be dc 47 13\"},[{\"children\":[\"这是 \",{\"Tag\":\"a\",\"props\":{\"href\":\"https://zhuanlan.zhihu.com/p/28566058\"},\"content\":\"AEAD 算法\"},\"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"]}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"data\":[[\"\",{\"props\":{\"className\":\"decryption-header\"},\"content\":\"解密后的数据载荷\"},[{\"Tag\":\"h4\",\"content\":\"解密\"},\"数据被 \\\\\"服务器端生成握手密钥\\\\\" 步骤中产生的握手时密钥和握手时向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 2。\",\"数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。\",{\"children\":[\"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tls13.xargs.org/files/aes_256_gcm_decrypt.c\"},\"content\":\"解密\"},\"和\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tls13.xargs.org/files/aes_256_gcm_encrypt.c\"},\"content\":\"加密\"},\"这些数据。\"]},{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### from the \\\\\"Server Handshake Keys Calc\\\\\" step\\\\n$ key=9f13575ce3f8cfc1df64a77ceaffe89700b492ad31b4fab01c4792be1b266b7f\\\\n$ iv=9563bc8b590f671f488d2da3\\\\n### from this record\\\\n$ recdata=1703030119\\\\n$ authtag=96a3232367ff075e1c66dd9cbedc4713\\\\n$ recordnum=2\\\\n### may need to add -I and -L flags for include and lib dirs\\\\n$ cc -o aes_256_gcm_decrypt aes_256_gcm_decrypt.c -lssl -lcrypto\\\\n$ echo \\\\\"73 71 9f ce 07 ec 2f 6d 3b ba 02 92 a0 d4 0b 27 70 c0 6a 27\\\\n  ... snip ...\\\\n  d9 8d a8 8e bb 6e a8 0a 3a 11 f0 0e a2\\\\\" | xxd -r -p > /tmp/msg1\\\\n$ cat /tmp/msg1 \\\\\\\\\\\\n  | ./aes_256_gcm_decrypt $iv $recordnum $key $recdata $authtag \\\\\\\\\\\\n  | hexdump -C\\\\n\\\\n00000000  0f 00 01 04 08 04 01 00  5c bb 24 c0 40 93 32 da  |........\\\\\\\\.$.@.2.|\\\\n00000010  a9 20 bb ab bd b9 bd 50  17 0b e4 9c fb e0 a4 10  |. .....P........|\\\\n00000020  7f ca 6f fb 10 68 e6 5f  96 9e 6d e7 d4 f9 e5 60  |..o..h._..m....`|\\\\n... snip ...\"}}]]]}},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"加密的数据载荷\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"0f 00 01 04 08 04 01 00 5c bb 24 c0 40 93 32 da a9 20 bb ab bd b9 bd 50 17 0b e4 9c fb e0 a4 10 7f ca 6f fb 10 68 e6 5f 96 9e 6d e7 d4 f9 e5 60 38 d6 7c 69 c0 31 40 3a 7a 7c 0b cc 86 83 e6 57 21 a0 c7 2c c6 63 40 19 ad 1d 3a d2 65 a8 12 61 5b a3 63 80 37 20 84 f5 da ec 7e 63 d3 f4 93 3f 27 22 74 19 a6 11 03 46 44 dc db c7 be 3e 74 ff ac 47 3f aa ad de 8c 2f c6 5f 32 65 77 3e 7e 62 de 33 86 1f a7 05 d1 9c 50 6e 89 6c 8d 82 f5 bc f3 5f ec e2 59 b7 15 38 11 5e 9c 8c fb a6 2e 49 bb 84 74 f5 85 87 b1 1b 8a e3 17 c6 33 e9 c7 6c 79 1d 46 62 84 ad 9c 4f f7 35 a6 d2 e9 63 b5 9b bc a4 40 a3 07 09 1a 1b 4e 46 bc c7 a2 f9 fb 2f 1c 89 8e cb 19 91 8b e4 12 1d 7e 8e d0 4c d5 0c 9a 59 e9 87 98 01 07 bb bf 29 9c 23 2e 7f db e1 0a 4c fd ae 5c 89 1c 96 af df f9 4b 54 cc d2 bc 19 d3 cd aa 66 44 85 9c\"},[\"该载荷的解释详见下面的\\\\\"服务器端证书验证数据\\\\\"部分\"]],[\"记录类型\",{\"props\":{\"className\":\"bytes encrypted\"},\"content\":\"16\"},[\"每一个伪装的 TLS 1.3 记录的最后一个字节都需要表明其真正的记录类型\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - 类型为 0x16(22, handshake record)\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=wrappedRecord3.abc96c4b.js.map\n","[\n  \"为了减少连接被无法识别新 TLS 协议的中间件阻断的问题，加密的 TLS 1.3 记录都需要伪装成一个会话恢复成功的 TLS 1.2 会话记录(之所以不是伪装成握手记录，因为握手记录过长会使得兼容实现变得异常复杂)。\",\n  \"包装的实际记录内容将在下面单独列出。\",\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"17 03 03 01 19\"\n          },\n          [\n            \"此 TLS 1.3 记录被伪装为 TLS 1.2 的\\\"会话记录\\\"。因此内容会以会话记录的规格展示。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"17 - 表示 TLS 记录类型 0x17(23, application data)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 03 - 协议版本 (3.3, 即 TLS 1.2)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"01 19 - 紧接着的数组载荷长度 0x119(281) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"73 71 9f ce 07 ec 2f 6d 3b ba 02 92 a0 d4 0b 27 70 c0 6a 27 17 99 a5 33 14 f6 f7 7f c9 5c 5f e7 b9 a4 32 9f d9 54 8c 67 0e be ea 2f 2d 5c 35 1d d9 35 6e f2 dc d5 2e b1 37 bd 3a 67 65 22 f8 cd 0f b7 56 07 89 ad 7b 0e 3c ab a2 e3 7e 6b 41 99 c6 79 3b 33 46 ed 46 cf 74 0a 9f a1 fe c4 14 dc 71 5c 41 5c 60 e5 75 70 3c e6 a3 4b 70 b5 19 1a a6 a6 1a 18 fa ff 21 6c 68 7a d8 d1 7e 12 a7 e9 99 15 a6 11 bf c1 a2 be fc 15 e6 e9 4d 78 46 42 e6 82 fd 17 38 2a 34 8c 30 10 56 b9 40 c9 84 72 00 40 8b ec 56 c8 1e a3 d7 21 7a b8 e8 5a 88 71 53 95 89 9c 90 58 7f 72 e8 dd d7 4b 26 d8 ed c1 c7 c8 37 d9 f2 eb bc 26 09 62 21 90 38 b0 56 54 a6 3a 0b 12 99 9b 4a 83 06 a3 dd cc 0e 17 c5 3b a8 f9 c8 03 63 f7 84 13 54 d2 91 b4 ac e0 c0 f3 30 c0 fc d5 aa 9d ee f9 69 ae 8a b2 d9 8d a8 8e bb 6e a8 0a 3a 11 f0 0e a2\"\n          },\n          [\"这个数据是用服务器端的握手时密钥加密的。\"]\n        ],\n        [\n          \"AEAD 鉴别标签\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"96 a3 23 23 67 ff 07 5e 1c 66 dd 9c be dc 47 13\"\n          },\n          [\n            {\n              \"children\": [\n                \"这是 \",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://zhuanlan.zhihu.com/p/28566058\"\n                  },\n                  \"content\": \"AEAD 算法\"\n                },\n                \"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。\"\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"data\": [\n        [\n          \"\",\n          {\n            \"props\": {\n              \"className\": \"decryption-header\"\n            },\n            \"content\": \"解密后的数据载荷\"\n          },\n          [\n            { \"Tag\": \"h4\", \"content\": \"解密\" },\n            \"数据被 \\\"服务器端生成握手密钥\\\" 步骤中产生的握手时密钥和握手时向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 2。\",\n            \"数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。\",\n            {\n              \"children\": [\n                \"openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tls13.xargs.org/files/aes_256_gcm_decrypt.c\"\n                  },\n                  \"content\": \"解密\"\n                },\n                \"和\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tls13.xargs.org/files/aes_256_gcm_encrypt.c\"\n                  },\n                  \"content\": \"加密\"\n                },\n                \"这些数据。\"\n              ]\n            },\n            {\n              \"Tag\": \"CodeSample\",\n              \"props\": {\n                \"code\": \"### from the \\\"Server Handshake Keys Calc\\\" step\\n$ key=9f13575ce3f8cfc1df64a77ceaffe89700b492ad31b4fab01c4792be1b266b7f\\n$ iv=9563bc8b590f671f488d2da3\\n### from this record\\n$ recdata=1703030119\\n$ authtag=96a3232367ff075e1c66dd9cbedc4713\\n$ recordnum=2\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_256_gcm_decrypt aes_256_gcm_decrypt.c -lssl -lcrypto\\n$ echo \\\"73 71 9f ce 07 ec 2f 6d 3b ba 02 92 a0 d4 0b 27 70 c0 6a 27\\n  ... snip ...\\n  d9 8d a8 8e bb 6e a8 0a 3a 11 f0 0e a2\\\" | xxd -r -p > /tmp/msg1\\n$ cat /tmp/msg1 \\\\\\n  | ./aes_256_gcm_decrypt $iv $recordnum $key $recdata $authtag \\\\\\n  | hexdump -C\\n\\n00000000  0f 00 01 04 08 04 01 00  5c bb 24 c0 40 93 32 da  |........\\\\.$.@.2.|\\n00000010  a9 20 bb ab bd b9 bd 50  17 0b e4 9c fb e0 a4 10  |. .....P........|\\n00000020  7f ca 6f fb 10 68 e6 5f  96 9e 6d e7 d4 f9 e5 60  |..o..h._..m....`|\\n... snip ...\"\n              }\n            }\n          ]\n        ]\n      ]\n    }\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"加密的数据载荷\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"0f 00 01 04 08 04 01 00 5c bb 24 c0 40 93 32 da a9 20 bb ab bd b9 bd 50 17 0b e4 9c fb e0 a4 10 7f ca 6f fb 10 68 e6 5f 96 9e 6d e7 d4 f9 e5 60 38 d6 7c 69 c0 31 40 3a 7a 7c 0b cc 86 83 e6 57 21 a0 c7 2c c6 63 40 19 ad 1d 3a d2 65 a8 12 61 5b a3 63 80 37 20 84 f5 da ec 7e 63 d3 f4 93 3f 27 22 74 19 a6 11 03 46 44 dc db c7 be 3e 74 ff ac 47 3f aa ad de 8c 2f c6 5f 32 65 77 3e 7e 62 de 33 86 1f a7 05 d1 9c 50 6e 89 6c 8d 82 f5 bc f3 5f ec e2 59 b7 15 38 11 5e 9c 8c fb a6 2e 49 bb 84 74 f5 85 87 b1 1b 8a e3 17 c6 33 e9 c7 6c 79 1d 46 62 84 ad 9c 4f f7 35 a6 d2 e9 63 b5 9b bc a4 40 a3 07 09 1a 1b 4e 46 bc c7 a2 f9 fb 2f 1c 89 8e cb 19 91 8b e4 12 1d 7e 8e d0 4c d5 0c 9a 59 e9 87 98 01 07 bb bf 29 9c 23 2e 7f db e1 0a 4c fd ae 5c 89 1c 96 af df f9 4b 54 cc d2 bc 19 d3 cd aa 66 44 85 9c\"\n          },\n          [\"该载荷的解释详见下面的\\\"服务器端证书验证数据\\\"部分\"]\n        ],\n        [\n          \"记录类型\",\n          {\n            \"props\": {\n              \"className\": \"bytes encrypted\"\n            },\n            \"content\": \"16\"\n          },\n          [\n            \"每一个伪装的 TLS 1.3 记录的最后一个字节都需要表明其真正的记录类型\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 类型为 0x16(22, handshake record)\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["globalThis","self","window","global","register","module","exports","JSON","parse"],"version":3,"file":"wrappedRecord3.abc96c4b.js.map"}