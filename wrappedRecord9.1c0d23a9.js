(0,globalThis.parcelRequire7f38.register)("4JZoH",function(e,a){e.exports=JSON.parse('["为了减少连接被无法识别新 TLS 协议的中间件阻断的问题，加密的 TLS 1.3 记录都需要伪装成一个会话恢复成功的 TLS 1.2 会话记录(之所以不是伪装成握手记录，因为握手记录过长会使得兼容实现变得异常复杂)。","包装的实际记录内容将在下面单独列出。",{"Tag":"AnnotationToggler"},{"Tag":"Annotations","props":{"type":"record-data","data":[["记录头",{"props":{"className":"bytes"},"content":"17 03 03 00 15"},["此 TLS 1.3 记录被伪装为 TLS 1.2 的\\"会话记录\\"。因此内容会以会话记录的规格展示。",{"Tag":"ul","children":[{"Tag":"li","content":"17 - 表示 TLS 记录类型 0x17(23, application data)"},{"Tag":"li","content":"03 03 - 协议版本 (3.3, 即 TLS 1.2)"},{"Tag":"li","content":"00 15 - 紧接着的数组载荷长度 0x15(21) 字节"}]}]],["加密的数据载荷",{"props":{"className":"bytes encrypted"},"content":"0c da 85 f1 44"},["这个数据是用服务器端的会话时密钥加密的。"]],["AEAD 鉴别标签",{"props":{"className":"bytes"},"content":"7a e2 3f a6 6d 56 f4 c5 40 84 82 b1 b1 d4 c9 98"},[{"children":["这是 ",{"Tag":"a","props":{"href":"https://zhuanlan.zhihu.com/p/28566058"},"content":"AEAD 算法"},"的鉴别标签，用以确认加密数据和数据包头的完整性。它由加密算法产生，并由解密算法消耗。"]}]]]}},{"Tag":"Annotations","props":{"data":[["",{"props":{"className":"decryption-header"},"content":"解密后的数据载荷"},[{"Tag":"h4","content":"解密"},"数据被 \\"服务器端生成会话密钥\\" 步骤中产生的握手时密钥和握手时向量(IVs)加密。IVs 通过密钥和已经用密钥加密的记录长度进行异或操作生成。在例子中 IV 为 0。","数据包开头的 5 字节(记录头)还会作为解密过程解密成功时必须满足的认证条件。",{"children":["openssl 命令行工具还不支持 AEAD 算法加解密(AEAD ciphers)，你可以使用作者的命令行工具来",{"Tag":"a","props":{"href":"https://tls13.xargs.org/files/aes_256_gcm_decrypt.c"},"content":"解密"},"和",{"Tag":"a","props":{"href":"https://tls13.xargs.org/files/aes_256_gcm_encrypt.c"},"content":"加密"},"这些数据。"]},{"Tag":"CodeSample","props":{"code":"### from the \\"Server Application Keys Calc\\" step\\n$ key=01f78623f17e3edcc09e944027ba3218d57c8e0db93cd3ac419309274700ac27\\n$ iv=196a750b0c5049c0cc51a541\\n### from this record\\n$ recdata=1703030015\\n$ authtag=7ae23fa66d56f4c5408482b1b1d4c998\\n$ recordnum=2\\n### may need to add -I and -L flags for include and lib dirs\\n$ cc -o aes_256_gcm_decrypt aes_256_gcm_decrypt.c -lssl -lcrypto\\n$ echo \\"0c da 85 f1 44\\" | xxd -r -p > /tmp/msg4\\n$ cat /tmp/msg4 \\\\\\n  | ./aes_256_gcm_decrypt $iv $recordnum $key $recdata $authtag \\\\\\n  | hexdump -C\\n\\n00000000  70 6f 6e 67 17                                    |pong.|"}}]]]}},{"Tag":"Annotations","props":{"type":"record-data","data":[["加密的数据载荷",{"props":{"className":"bytes encrypted"},"content":"70 6f 6e 67"},["该载荷的解释详见下面的\\"服务器端会话数据\\"部分"]],["记录类型",{"props":{"className":"bytes encrypted"},"content":"17"},["每一个伪装的 TLS 1.3 记录的最后一个字节都需要表明其真正的记录类型",{"Tag":"ul","children":[{"Tag":"li","content":"17 - 类型为 0x17(23, application data)"}]}]]]}}]')});
//# sourceMappingURL=wrappedRecord9.1c0d23a9.js.map
