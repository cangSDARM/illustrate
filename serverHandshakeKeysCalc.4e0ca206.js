(0,globalThis.parcelRequire7f38.register)("9SLId",function(e,a){e.exports=JSON.parse('["服务器现在拥有了用于计算握手时的加密密钥的所有信息。在这个计算中，服务器使用了以下信息：",{"Tag":"ul","children":[{"Tag":"li","content":"客户端公钥(提取自 ClientHello 数据包)"},{"Tag":"li","content":"服务器端私钥(之前准备密钥交换时生成)"},{"Tag":"li","content":"ClientHello 和 ServerHello 的 SHA256 哈希值"}]},"首先，服务器需要找到共享的密文(shared secret)，即密钥交换步骤的最终值。服务器通过使用 curve25519 算法将客户端的公钥乘以服务器的私钥，即可发现 32 字节的最终值是：",{"Tag":"pre","props":{"className":"ind2"},"children":[{"Tag":"code","props":{"className":"longboi"},"content":"df4a291baa1eb7cfa6934b29b474baad2697e29f1f920dcc77c8a0a088447624"}]},{"children":["你可以使用",{"Tag":"a","props":{"href":"https://quic.xargs.org/files/curve25519-mult.c"},"content":"原作者的脚本"},"快速验证结果："]},{"Tag":"CodeSample","props":{"code":"$ cc -o curve25519-mult curve25519-mult.c\\n$ ./curve25519-mult server-ephemeral-private.key                     client-ephemeral-public.key | hexdump\\n\\n0000000 df 4a 29 1b aa 1e b7 cf a6 93 4b 29 b4 74 ba ad\\n0000010 26 97 e2 9f 1f 92 0d cc 77 c8 a0 a0 88 44 76 24"}},"然后，服务器计算到此为止的所有握手信息(ClientHello 和 ServerHello)的 SHA256 哈希值(不包括 6 字节的 加密帧)。这个 \\"hello_hash\\" 是",{"Tag":"pre","props":{"className":"ind2"},"children":[{"Tag":"code","props":{"className":"longboi"},"content":"ff788f9ed09e60d8142ac10a8931cdb6a3726278d3acdba54d9d9ffc7326611b"}]},{"Tag":"CodeSample","props":{"code":"$ cat crypto_clienthello crypto_serverhello | openssl sha256\\nff788f9ed09e60d8142ac10a8931cdb6a3726278d3acdba54d9d9ffc7326611b"}},"然后，我们将哈希值和共享的签名信息进行一些密钥派生操作(key derivation operations)，以防止可能的攻击：",{"Tag":"pre","children":[{"Tag":"code","props":{"className":"longboi"},"content":"early_secret = HKDF-Extract(salt=00, key=00...)\\nempty_hash = SHA256(\\"\\")\\nderived_secret = HKDF-Expand-Label(key: early_secret, label: \\"derived\\", ctx: empty_hash, len: 32)\\nhandshake_secret = HKDF-Extract(salt: derived_secret, key: shared_secret)\\nclient_secret = HKDF-Expand-Label(key: handshake_secret, label: \\"c hs traffic\\", ctx: hello_hash, len: 32)\\nserver_secret = HKDF-Expand-Label(key: handshake_secret, label: \\"s hs traffic\\", ctx: hello_hash, len: 32)\\nclient_key = HKDF-Expand-Label(key: client_secret, label: \\"quic key\\", ctx: \\"\\", len: 16)\\nserver_key = HKDF-Expand-Label(key: server_secret, label: \\"quic key\\", ctx: \\"\\", len: 16)\\nclient_iv = HKDF-Expand-Label(key: client_secret, label: \\"quic iv\\", ctx: \\"\\", len: 12)\\nserver_iv = HKDF-Expand-Label(key: server_secret, label: \\"quic iv\\", ctx: \\"\\", len: 12)"}]},{"children":["在命令行中使用",{"Tag":"a","props":{"href":"https://quic.xargs.org/files/hkdf.sh"},"content":"原作者制作的 HKDF 命令行脚本"},"，你也可以自己试试："]},{"Tag":"CodeSample","props":{"code":"$ hello_hash=ff788f9ed09e60d8142ac10a8931cdb6a3726278d3acdba54d9d9ffc7326611b\\n$ shared_secret=df4a291baa1eb7cfa6934b29b474baad2697e29f1f920dcc77c8a0a088447624\\n$ zero_key=0000000000000000000000000000000000000000000000000000000000000000\\n$ early_secret=$(./hkdf extract 00 $zero_key)\\n$ empty_hash=$(openssl sha256 < /dev/null | sed -e \'s/.* //\')\\n$ derived_secret=$(./hkdf expandlabel $early_secret \\"derived\\" $empty_hash 32)\\n$ handshake_secret=$(./hkdf extract $derived_secret $shared_secret)\\n$ csecret=$(./hkdf expandlabel $handshake_secret \\"c hs traffic\\" $hello_hash 32)\\n$ ssecret=$(./hkdf expandlabel $handshake_secret \\"s hs traffic\\" $hello_hash 32)\\n$ client_handshake_key=$(./hkdf expandlabel $csecret \\"quic key\\" \\"\\" 16)\\n$ server_handshake_key=$(./hkdf expandlabel $ssecret \\"quic key\\" \\"\\" 16)\\n$ client_handshake_iv=$(./hkdf expandlabel $csecret \\"quic iv\\" \\"\\" 12)\\n$ server_handshake_iv=$(./hkdf expandlabel $ssecret \\"quic iv\\" \\"\\" 12)\\n$ client_handshake_hp=$(./hkdf expandlabel $csecret \\"quic hp\\" \\"\\" 16)\\n$ server_handshake_hp=$(./hkdf expandlabel $ssecret \\"quic hp\\" \\"\\" 16)\\n$ echo ckey: $client_handshake_key\\n$ echo civ: $client_handshake_iv\\n$ echo chp: $client_handshake_hp\\n$ echo skey: $server_handshake_key\\n$ echo siv: $server_handshake_iv\\n$ echo shp: $server_handshake_hp\\n\\nckey: 30a7e816f6a1e1b3434cf39cf4b415e7\\nciv: 11e70a5d1361795d2bb04465\\nchp: 84b3c21cacaf9f54c885e9a506459079\\nskey: 17abbf0a788f96c6986964660414e7ec\\nsiv: 09597a2ea3b04c00487e71f3\\nshp: 2a18061c396c2828582b41b0910ed536"}},"由此我们可以得到以下密钥以及向量：",{"Tag":"ul","children":[{"Tag":"li","children":["客户端握手时密钥: ",{"Tag":"code","content":"30a7e816f6a1e1b3434cf39cf4b415e7"}]},{"Tag":"li","children":["客户端握手时向量: ",{"Tag":"code","content":"11e70a5d1361795d2bb04465"}]},{"Tag":"li","children":["客户端握手时数据包头保护密钥: ",{"Tag":"code","content":"84b3c21cacaf9f54c885e9a506459079"}]},{"Tag":"li","children":["服务器端握手时密钥: ",{"Tag":"code","content":"17abbf0a788f96c6986964660414e7ec"}]},{"Tag":"li","children":["服务器端握手时向量: ",{"Tag":"code","content":"09597a2ea3b04c00487e71f3"}]},{"Tag":"li","children":["服务器端握手时数据包头保护密钥: ",{"Tag":"code","content":"2a18061c396c2828582b41b0910ed536"}]}]}]')});
//# sourceMappingURL=serverHandshakeKeysCalc.4e0ca206.js.map
