{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,63F","sources":["<anon>","src/TLS12/serverHello.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gYVPa\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u56DE\\u590D \\\\\"ServerHello\\\\\"\\u3002\\u670D\\u52A1\\u5668\\u63D0\\u4F9B\\u7684\\u4FE1\\u606F\\u5305\\u62EC\\u4EE5\\u4E0B\\u5185\\u5BB9\\uFF1A\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u534F\\u5546\\u7684\\u5177\\u4F53\\u534F\\u8BAE\\u7684\\u7248\\u672C\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u7AEF\\u968F\\u673A\\u6570(\\u5728\\u968F\\u540E\\u7684\\u63E1\\u624B\\u65F6\\u4F7F\\u7528)\"},{\"Tag\":\"li\",\"content\":\"\\u4F1A\\u8BDD ID\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u7AEF\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u7AEF\\u9009\\u62E9\\u7684\\u538B\\u7F29\\u7B97\\u6CD5\"},{\"Tag\":\"li\",\"content\":\"\\u670D\\u52A1\\u5668\\u534F\\u5546\\u7684\\u6269\\u5C55\\u4FE1\\u606F\"}]},{\"Tag\":\"AnnotationToggler\"},{\"Tag\":\"Annotations\",\"props\":{\"type\":\"record-data\",\"data\":[[\"\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"16 03 03 00 31\"},[\"TLS \\u4F1A\\u8BDD\\u88AB\\u5206\\u89E3\\u6210 \\\\\"\\u8BB0\\u5F55\\\\\"(record) \\u7684\\u5F62\\u5F0F\\u53D1\\u9001\\u548C\\u63A5\\u6536\\u3002\\u8BB0\\u5F55\\u662F\\u5177\\u6709\\u7C7B\\u578B\\u3001\\u534F\\u8BAE\\u7248\\u672C\\u548C\\u957F\\u5EA6\\u7684\\u6570\\u636E\\u5757\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"16 - \\u8868\\u793A TLS \\u8BB0\\u5F55\\u7C7B\\u578B 0x16(22, Handshake)\"},{\"Tag\":\"li\",\"content\":\"03 03 - \\u534F\\u8BAE\\u7248\\u672C (3.3, \\u5373 TLS 1.2)\"},{\"Tag\":\"li\",\"content\":\"00 31 - \\u7D27\\u63A5\\u7740\\u7684\\u6570\\u7EC4\\u8F7D\\u8377\\u957F\\u5EA6 0x31(49) \\u5B57\\u8282\"}]}]],[\"TLS \\u63E1\\u624B\\u8BB0\\u5F55\\u5934\",{\"props\":{\"className\":\"bytes\"},\"content\":\"02 00 00 2d\"},[\"\\u6BCF\\u4E2A TLS \\u63E1\\u624B\\u6D88\\u606F\\u90FD\\u4EE5\\u4E00\\u4E2A type \\u548C\\u4E00\\u4E2A len \\u5F00\\u59CB\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"02 - \\u63E1\\u624B\\u6D88\\u606F\\u7C7B\\u578B 0x02 (ServerHello)\"},{\"Tag\":\"li\",\"content\":\"00 00 2d - \\u7D27\\u63A5\\u7740\\u7684\\u63E1\\u624B\\u6D88\\u606F\\u6570\\u636E\\u7684\\u957F\\u5EA6 0x2D (45) \\u5B57\\u8282\"}]}]],[\"\\u670D\\u52A1\\u5668\\u7AEF TLS \\u7248\\u672C\\u53F7\",{\"props\":{\"className\":\"bytes\"},\"content\":\"03 03\"},[\"\\u8868\\u660E\\u670D\\u52A1\\u5668\\u7AEF\\u6240\\u652F\\u6301\\u7684 TLS \\u7248\\u672C 3,3 (TLS 1.2)\\u3002\",\"\\u4E0D\\u5BFB\\u5E38\\u7684\\u7248\\u672C\\u53F7(\\\\\"3,3\\\\\" \\u4EE3\\u8868 TLS 1.2)\\u662F\\u7531\\u4E8E TLS 1.0 \\u662F SSL 3.0 \\u534F\\u8BAE\\u7684\\u4E00\\u4E2A\\u5C0F\\u4FEE\\u8BA2\\u3002\\u56E0\\u6B64\\uFF0CTLS 1.0 \\u7528 \\\\\"3,1\\\\\" \\u8868\\u793A\\uFF0CTLS 1.1\\u7528 \\\\\"3,2\\\\\"\\uFF0C\\u4EE5\\u6B64\\u7C7B\\u63A8\\u3002\"]],[\"\\u670D\\u52A1\\u5668\\u7AEF\\u968F\\u673A\\u6570\",{\"props\":{\"className\":\"bytes\"},\"content\":\"70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f\"},[\"\\u670D\\u52A1\\u5668\\u7AEF\\u63D0\\u4F9B\\u7684 32 \\u5B57\\u8282\\u7684\\u968F\\u673A\\u6570\\u3002\\u8FD9\\u4E2A\\u6570\\u5C06\\u5728\\u4E4B\\u540E\\u7684\\u4F1A\\u8BDD\\u4E2D\\u4F7F\\u7528\\u3002\\u5728\\u672C\\u6587\\u7684\\u4F8B\\u5B50\\u4E2D\\uFF0C\\u6211\\u4EEC\\u6682\\u65F6\\u5C06\\u4E00\\u4E2A\\u65B9\\u4FBF\\u8BB0\\u5FC6\\u7684\\u5B57\\u7B26\\u4E32\\u5F53\\u4F5C\\u968F\\u673A\\u6570\\u3002\",{\"children\":[\"TLS 1.2 \\u89C4\\u8303\\u8BF4\\uFF0C\\u524D 4 \\u4E2A\\u5B57\\u8282\\u5E94\\u8BE5\\u662F\\u81EA 1970 \\u5E74\\u4EE5\\u6765\\u7684\\u79D2\\u6570\\u3002\\u4F46\\u73B0\\u5728\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://tools.ietf.org/html/draft-mathewson-no-gmtunixtime-00\"},\"content\":\"\\u5DF2\\u5EFA\\u8BAE\\u4E0D\\u8981\\u8FD9\\u6837\\u505A\"},\"\\uFF0C\\u56E0\\u4E3A\\u8FD9\\u6837\\u53EF\\u4EE5\\u5BF9\\u4E3B\\u673A\\u548C\\u670D\\u52A1\\u5668\\u8FDB\\u884C\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://nmap.org/nmap-fingerprinting-article-tw.html\"},\"content\":\"\\u6307\\u7EB9\\u8BC6\\u522B\"},\"\\u3002\"]}]],[\"\\u4F1A\\u8BDD ID\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u670D\\u52A1\\u5668\\u7AEF\\u53EF\\u4EE5\\u7ED9\\u8BE5 TLS \\u4F1A\\u8BDD\\u5206\\u914D\\u4E00\\u4E2A \\u4F1A\\u8BDD ID\\uFF0C\\u4F7F\\u5F97\\u5BA2\\u6237\\u7AEF\\u53EF\\u4EE5\\u5728\\u4E4B\\u540E\\u7684\\u534F\\u5546\\u4E2D\\u6062\\u590D\\u8FD9\\u4E00\\u4F1A\\u8BDD\\u3002\\u8981\\u505A\\u5230\\u8FD9\\u4E00\\u70B9\\uFF0C\\u670D\\u52A1\\u5668\\u7AEF\\u548C\\u5BA2\\u6237\\u7AEF\\u90FD\\u9700\\u8981\\u5B58\\u50A8\\u4E4B\\u524D\\u8FDE\\u63A5\\u7684\\u5BC6\\u94A5\\u4FE1\\u606F\\u3002\\u6062\\u590D\\u8FDE\\u63A5\\u53EF\\u4EE5\\u8282\\u7701\\u5927\\u91CF\\u7684\\u8BA1\\u7B97\\u548C\\u7F51\\u7EDC\\u5F80\\u8FD4\\u65F6\\u95F4\\uFF0C\\u6240\\u4EE5\\u53EA\\u8981\\u6709\\u53EF\\u80FD\\u5C31\\u4F1A\\u6267\\u884C\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 - 0 \\u5B57\\u8282\\u7684\\u4F1A\\u8BDD ID\"}]}]],[\"\\u6240\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"c0 13\"},[\"\\u670D\\u52A1\\u5668\\u4ECE\\u5BA2\\u6237\\u7AEF\\u7ED9\\u51FA\\u7684\\u9009\\u9879\\u5217\\u8868\\u4E2D\\u9009\\u62E9\\u7684\\u52A0\\u89E3\\u5BC6\\u7B97\\u6CD5 0xC013(TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA)\\u3002\"]],[\"\\u538B\\u7F29\\u7B97\\u6CD5\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00\"},[\"\\u670D\\u52A1\\u5668\\u4ECE\\u5BA2\\u6237\\u7AEF\\u7ED9\\u51FA\\u7684\\u9009\\u9879\\u5217\\u8868\\u4E2D\\u9009\\u62E9\\u7684\\u538B\\u7F29\\u7B97\\u6CD5 0x00(null)\\u3002\"]],[\"\\u6269\\u5C55\\u7684\\u957F\\u5EA6\",{\"props\":{\"className\":\"bytes\"},\"content\":\"00 05\"},[\"\\u670D\\u52A1\\u5668\\u5411\\u5BA2\\u6237\\u7AEF\\u8FD4\\u56DE\\u7684\\u6269\\u5C55\\u6709\\u5E8F\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u3002\\u56E0\\u4E3A\\u670D\\u52A1\\u5668\\u88AB\\u7981\\u6B62\\u56DE\\u590D ClientHello \\u6D88\\u606F\\u4E2D\\u4E0D\\u5B58\\u5728\\u7684\\u6269\\u5C55\\uFF0C\\u56E0\\u6B64\\u670D\\u52A1\\u5668\\u77E5\\u9053\\u5BA2\\u6237\\u7AEF\\u5C06\\u7406\\u89E3\\u5E76\\u652F\\u6301\\u5217\\u51FA\\u7684\\u6240\\u6709\\u6269\\u5C55\\u3002\",{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"00 05 - \\u6269\\u5C55\\u5217\\u8868\\u7684\\u957F\\u5EA6\\u4E3A 0x05(5) \\u5B57\\u8282\"}]},\"\\u6BCF\\u4E2A\\u6269\\u5C55\\u5C06\\u4EE5\\u4E24\\u4E2A\\u5B57\\u8282\\u5F00\\u59CB\\uFF0C\\u8868\\u660E\\u5B83\\u662F\\u54EA\\u4E2A\\u6269\\u5C55\\u3002\\u7136\\u540E\\u662F\\u4E24\\u4E2A\\u5B57\\u8282\\u7684\\u5185\\u5BB9\\u957F\\u5EA6\\u5B57\\u6BB5\\uFF0C\\u6700\\u540E\\u662F\\u6269\\u5C55\\u7684\\u5177\\u4F53\\u5185\\u5BB9\\u3002\"]],[\"\\u6269\\u5C55 - \\u91CD\\u534F\\u5546\\u4FE1\\u606F(Renegotiation Info)\",{\"props\":{\"className\":\"bytes\"},\"content\":\"ff 01 00 01 00\"},[{\"children\":[\"\\u8FD9\\u4E2A\\u6269\\u5C55\\u7684\\u5B58\\u5728\\u9632\\u6B62\\u4E86\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://blog.csdn.net/edmond999/article/details/53007991\"},\"content\":\"\\u4E00\\u79CD\\u7528 TLS \\u91CD\\u534F\\u5546\\u8FDB\\u884C\\u7684\\u653B\\u51FB(Renegotiating TLS)\"},\"\\u3002\\u4E4B\\u540E\\u7684 TLS \\u7248\\u672C(\\u5982 TLS 1.3)\\u7531\\u4E8E\\u5B8C\\u5168\\u79FB\\u9664\\u4E86\\u91CD\\u534F\\u5546\\u7684\\u529F\\u80FD\\uFF0C\\u56E0\\u6B64\\u8FD9\\u4E2A\\u6269\\u5C55\\u4E5F\\u4E0D\\u4F1A\\u51FA\\u73B0\\u3002\"]},{\"Tag\":\"ul\",\"children\":[{\"Tag\":\"li\",\"content\":\"ff 01 - \\u8868\\u793A\\u8FD9\\u662F \\\\\"\\u91CD\\u534F\\u5546\\u4FE1\\u606F\\\\\" \\u6269\\u5C55\"},{\"Tag\":\"li\",\"content\":\"00 01 - \\u6269\\u5C55\\u4FE1\\u606F\\u957F\\u5EA6\\u4E3A 0x01(1) \\u5B57\\u8282 \"},{\"Tag\":\"li\",\"content\":\"00 - \\u91CD\\u534F\\u5546\\u7684\\u957F\\u5EA6\\u4E3A 0x0(0) \\u5B57\\u8282\\uFF0C\\u56E0\\u4E3A\\u8FD9\\u662F\\u4E00\\u4E2A\\u5168\\u65B0\\u8FDE\\u63A5\"}]}]]]}}]');\n\n});\n\n\n//# sourceMappingURL=serverHello.860cec67.js.map\n","[\n  \"服务器回复 \\\"ServerHello\\\"。服务器提供的信息包括以下内容：\",\n  {\n    \"Tag\": \"ul\",\n    \"children\": [\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器协商的具体协议的版本\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端随机数(在随后的握手时使用)\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"会话 ID\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端选择的加解密算法\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器端选择的压缩算法\"\n      },\n      {\n        \"Tag\": \"li\",\n        \"content\": \"服务器协商的扩展信息\"\n      }\n    ]\n  },\n  {\n    \"Tag\": \"AnnotationToggler\"\n  },\n  {\n    \"Tag\": \"Annotations\",\n    \"props\": {\n      \"type\": \"record-data\",\n      \"data\": [\n        [\n          \"记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"16 03 03 00 31\"\n          },\n          [\n            \"TLS 会话被分解成 \\\"记录\\\"(record) 的形式发送和接收。记录是具有类型、协议版本和长度的数据块。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"16 - 表示 TLS 记录类型 0x16(22, Handshake)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"03 03 - 协议版本 (3.3, 即 TLS 1.2)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 31 - 紧接着的数组载荷长度 0x31(49) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"TLS 握手记录头\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"02 00 00 2d\"\n          },\n          [\n            \"每个 TLS 握手消息都以一个 type 和一个 len 开始。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"02 - 握手消息类型 0x02 (ServerHello)\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 00 2d - 紧接着的握手消息数据的长度 0x2D (45) 字节\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"服务器端 TLS 版本号\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"03 03\"\n          },\n          [\n            \"表明服务器端所支持的 TLS 版本 3,3 (TLS 1.2)。\",\n            \"不寻常的版本号(\\\"3,3\\\" 代表 TLS 1.2)是由于 TLS 1.0 是 SSL 3.0 协议的一个小修订。因此，TLS 1.0 用 \\\"3,1\\\" 表示，TLS 1.1用 \\\"3,2\\\"，以此类推。\"\n          ]\n        ],\n        [\n          \"服务器端随机数\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f\"\n          },\n          [\n            \"服务器端提供的 32 字节的随机数。这个数将在之后的会话中使用。在本文的例子中，我们暂时将一个方便记忆的字符串当作随机数。\",\n            {\n              \"children\": [\n                \"TLS 1.2 规范说，前 4 个字节应该是自 1970 年以来的秒数。但现在\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://tools.ietf.org/html/draft-mathewson-no-gmtunixtime-00\"\n                  },\n                  \"content\": \"已建议不要这样做\"\n                },\n                \"，因为这样可以对主机和服务器进行\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://nmap.org/nmap-fingerprinting-article-tw.html\"\n                  },\n                  \"content\": \"指纹识别\"\n                },\n                \"。\"\n              ]\n            }\n          ]\n        ],\n        [\n          \"会话 ID\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\n            \"服务器端可以给该 TLS 会话分配一个 会话 ID，使得客户端可以在之后的协商中恢复这一会话。要做到这一点，服务器端和客户端都需要存储之前连接的密钥信息。恢复连接可以节省大量的计算和网络往返时间，所以只要有可能就会执行。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 0 字节的会话 ID\"\n                }\n              ]\n            }\n          ]\n        ],\n        [\n          \"所选择的加解密算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"c0 13\"\n          },\n          [\n            \"服务器从客户端给出的选项列表中选择的加解密算法 0xC013(TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA)。\"\n          ]\n        ],\n        [\n          \"压缩算法\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00\"\n          },\n          [\"服务器从客户端给出的选项列表中选择的压缩算法 0x00(null)。\"]\n        ],\n        [\n          \"扩展的长度\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"00 05\"\n          },\n          [\n            \"服务器向客户端返回的扩展有序列表的长度。因为服务器被禁止回复 ClientHello 消息中不存在的扩展，因此服务器知道客户端将理解并支持列出的所有扩展。\",\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 05 - 扩展列表的长度为 0x05(5) 字节\"\n                }\n              ]\n            },\n            \"每个扩展将以两个字节开始，表明它是哪个扩展。然后是两个字节的内容长度字段，最后是扩展的具体内容。\"\n          ]\n        ],\n        [\n          \"扩展 - 重协商信息(Renegotiation Info)\",\n          {\n            \"props\": {\n              \"className\": \"bytes\"\n            },\n            \"content\": \"ff 01 00 01 00\"\n          },\n          [\n            {\n              \"children\": [\n                \"这个扩展的存在防止了\",\n                {\n                  \"Tag\": \"a\",\n                  \"props\": {\n                    \"href\": \"https://blog.csdn.net/edmond999/article/details/53007991\"\n                  },\n                  \"content\": \"一种用 TLS 重协商进行的攻击(Renegotiating TLS)\"\n                },\n                \"。之后的 TLS 版本(如 TLS 1.3)由于完全移除了重协商的功能，因此这个扩展也不会出现。\"\n              ]\n            },\n            {\n              \"Tag\": \"ul\",\n              \"children\": [\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"ff 01 - 表示这是 \\\"重协商信息\\\" 扩展\"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 01 - 扩展信息长度为 0x01(1) 字节 \"\n                },\n                {\n                  \"Tag\": \"li\",\n                  \"content\": \"00 - 重协商的长度为 0x0(0) 字节，因为这是一个全新连接\"\n                }\n              ]\n            }\n          ]\n        ]\n      ]\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverHello.860cec67.js.map"}