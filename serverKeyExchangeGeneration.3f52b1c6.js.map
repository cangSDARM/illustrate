{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,ECAA,EAAA,OAAA,CAAiB,KAAK,KAAK,CAAC,6rC","sources":["<anon>","src/TLS12/serverKeyExchangeGeneration.json"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire7f38\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1Jw7E\", function(module, exports) {\nmodule.exports = JSON.parse('[\"\\u670D\\u52A1\\u5668\\u7AEF\\u9700\\u8981\\u751F\\u6210\\u4E00\\u4E2A\\u7528\\u4E8E\\u5BC6\\u94A5\\u4EA4\\u6362\\u7684\\u81EA\\u5DF1\\u7684\\u201C\\u79C1\\u94A5/\\u516C\\u94A5\\u201D\\u5BF9\\u3002\\u5BC6\\u94A5\\u4EA4\\u6362(Key exchange)\\u662F\\u4E00\\u79CD\\u6280\\u672F\\uFF0C\\u53CC\\u65B9\\u53EF\\u4EE5\\u5728\\u540C\\u4E00\\u6570\\u5B57\\u4E0A\\u8FBE\\u6210\\u4E00\\u81F4\\uFF0C\\u800C\\u7A83\\u542C\\u8005\\u5374\\u65E0\\u6CD5\\u77E5\\u9053\\u8FD9\\u4E2A\\u6570\\u5B57\\u662F\\u4EC0\\u4E48\\u3002\",{\"Tag\":\"p\",\"children\":[\"\\u5B66\\u4E60 TLS \\u5E76\\u4E0D\\u9700\\u8981\\u6DF1\\u5165\\u4E86\\u89E3\\uFF0C\\u4F46\\u4F60\\u53EF\\u4EE5\\u4ECE\",{\"Tag\":\"a\",\"props\":{\"href\":\"https://cangsdarm.github.io/illustrate/x25519\"},\"content\":\"X25519 \\u5BC6\\u94A5\\u4EA4\\u6362\\u7B97\\u6CD5\"},\"\\u83B7\\u53D6\\u6D89\\u53CA\\u5230\\u7684\\u5BC6\\u94A5\\u4EA4\\u6362\\u7B97\\u6CD5\\u7684\\u5177\\u4F53\\u89E3\\u91CA\\u3002\"]},[\"**\\u79C1\\u94A5**\\u662F 0 \\u5230 \",{\"Tag\":\"Math\",\"content\":\"2^256-1\"},\" \\u4E4B\\u95F4\\u7684\\u4E00\\u4E2A\\u968F\\u673A\\u6574\\u6570(32bytes, 256bits)\",\"\\u3002\\u4E3A\\u65B9\\u4FBF\\u540E\\u7EED\\u89E3\\u91CA\\uFF0C\\u5047\\u8BBE\\u6211\\u4EEC\\u751F\\u6210\\u7684\\u79C1\\u94A5\\u662F\\uFF1A\"],{\"Tag\":\"pre\",\"props\":{\"className\":\"ind2\"},\"children\":[{\"Tag\":\"code\",\"props\":{\"className\":\"longboi\"},\"content\":\"909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeaf\"}]},\"**\\u516C\\u94A5**\\u7531\\u4E0A\\u9762\\u63D0\\u5230\\u7684 X25519 \\u5BC6\\u94A5\\u4EA4\\u6362\\u7B97\\u6CD5\\u751F\\u6210\\u3002\\u4F8B\\u5B50\\u4E2D\\u8BA1\\u7B97\\u51FA\\u7684\\u516C\\u94A5\\u5E94\\u5982\\u4E0B\\u6240\\u793A\\uFF1A\",{\"Tag\":\"pre\",\"props\":{\"className\":\"ind2\"},\"children\":[{\"Tag\":\"code\",\"props\":{\"className\":\"longboi\"},\"content\":\"9fd7ad6dcff4298dd3f96d5b1b2af910a0535b1488d7f8fabb349a982880b615\"}]},\"\\u516C\\u94A5\\u7684\\u8BA1\\u7B97\\u4E5F\\u53EF\\u4EE5\\u5728\\u547D\\u4EE4\\u884C\\u4E2D\\u8FD0\\u884C\\u4EE5\\u4E0B\\u547D\\u4EE4\\u5F97\\u5230\\uFF1A\",{\"Tag\":\"CodeSample\",\"props\":{\"code\":\"### requires openssl 1.1.0 or higher\\\\n$ openssl pkey -noout -text < server-ephemeral-private.key\\\\n\\\\nX25519 Private-Key:\\\\npriv:\\\\n    90:91:92:93:94:95:96:97:98:99:9a:9b:9c:9d:9e:\\\\n    9f:a0:a1:a2:a3:a4:a5:a6:a7:a8:a9:aa:ab:ac:ad:\\\\n    ae:af\\\\npub:\\\\n    9f:d7:ad:6d:cf:f4:29:8d:d3:f9:6d:5b:1b:2a:f9:\\\\n    10:a0:53:5b:14:88:d7:f8:fa:bb:34:9a:98:28:80:\\\\n    b6:15\"}}]');\n\n});\n\n\n//# sourceMappingURL=serverKeyExchangeGeneration.3f52b1c6.js.map\n","[\n  \"服务器端需要生成一个用于密钥交换的自己的“私钥/公钥”对。密钥交换(Key exchange)是一种技术，双方可以在同一数字上达成一致，而窃听者却无法知道这个数字是什么。\",\n  {\n    \"Tag\": \"p\",\n    \"children\": [\n      \"学习 TLS 并不需要深入了解，但你可以从\",\n      {\n        \"Tag\": \"a\",\n        \"props\": { \"href\": \"https://cangsdarm.github.io/illustrate/x25519\" },\n        \"content\": \"X25519 密钥交换算法\"\n      },\n      \"获取涉及到的密钥交换算法的具体解释。\"\n    ]\n  },\n  [\n    \"**私钥**是 0 到 \",\n    {\n      \"Tag\": \"Math\",\n      \"content\": \"2^256-1\"\n    },\n    \" 之间的一个随机整数(32bytes, 256bits)\",\n    \"。为方便后续解释，假设我们生成的私钥是：\"\n  ],\n  {\n    \"Tag\": \"pre\",\n    \"props\": {\n      \"className\": \"ind2\"\n    },\n    \"children\": [\n      {\n        \"Tag\": \"code\",\n        \"props\": { \"className\": \"longboi\" },\n        \"content\": \"909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeaf\"\n      }\n    ]\n  },\n  \"**公钥**由上面提到的 X25519 密钥交换算法生成。例子中计算出的公钥应如下所示：\",\n  {\n    \"Tag\": \"pre\",\n    \"props\": {\n      \"className\": \"ind2\"\n    },\n    \"children\": [\n      {\n        \"Tag\": \"code\",\n        \"props\": { \"className\": \"longboi\" },\n        \"content\": \"9fd7ad6dcff4298dd3f96d5b1b2af910a0535b1488d7f8fabb349a982880b615\"\n      }\n    ]\n  },\n  \"公钥的计算也可以在命令行中运行以下命令得到：\",\n  {\n    \"Tag\": \"CodeSample\",\n    \"props\": {\n      \"code\": \"### requires openssl 1.1.0 or higher\\n$ openssl pkey -noout -text < server-ephemeral-private.key\\n\\nX25519 Private-Key:\\npriv:\\n    90:91:92:93:94:95:96:97:98:99:9a:9b:9c:9d:9e:\\n    9f:a0:a1:a2:a3:a4:a5:a6:a7:a8:a9:aa:ab:ac:ad:\\n    ae:af\\npub:\\n    9f:d7:ad:6d:cf:f4:29:8d:d3:f9:6d:5b:1b:2a:f9:\\n    10:a0:53:5b:14:88:d7:f8:fa:bb:34:9a:98:28:80:\\n    b6:15\"\n    }\n  }\n]\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","JSON","parse"],"version":3,"file":"serverKeyExchangeGeneration.3f52b1c6.js.map"}